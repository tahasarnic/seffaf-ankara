{"version":3,"sources":["../node_modules/underscore/modules/_setup.js","../node_modules/streamlit-component-lib/node_modules/react/index.js","../../src/event.mjs","../../src/event-target.mjs","../node_modules/@babel/runtime/helpers/esm/arrayLikeToArray.js","../node_modules/@babel/runtime/helpers/esm/unsupportedIterableToArray.js","../node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js","../node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js","../node_modules/@babel/runtime/helpers/esm/classCallCheck.js","../node_modules/@babel/runtime/helpers/esm/createClass.js","../node_modules/@babel/runtime/helpers/esm/typeof.js","../node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js","../node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","../node_modules/@babel/runtime/helpers/esm/AwaitValue.js","../node_modules/@babel/runtime/helpers/esm/awaitAsyncGenerator.js","../node_modules/@babel/runtime/helpers/esm/AsyncGenerator.js","../node_modules/@babel/runtime/helpers/esm/wrapAsyncGenerator.js","../node_modules/@babel/runtime/helpers/esm/asyncIterator.js","../node_modules/@babel/runtime/helpers/esm/asyncGeneratorDelegate.js","../node_modules/flatbuffers/js/flatbuffers.mjs","../node_modules/text-encoding-utf-8/lib/encoding.lib.mjs","../util/utf8.ts","../node_modules/@babel/runtime/helpers/esm/setPrototypeOf.js","../node_modules/@babel/runtime/helpers/esm/inherits.js","../node_modules/@babel/runtime/helpers/esm/getPrototypeOf.js","../node_modules/@babel/runtime/helpers/esm/isNativeReflectConstruct.js","../node_modules/@babel/runtime/helpers/esm/assertThisInitialized.js","../node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn.js","../node_modules/@babel/runtime/helpers/esm/createSuper.js","../io/interfaces.ts","../util/compat.ts","../util/buffer.ts","../io/adapters.ts","../node_modules/@babel/runtime/helpers/esm/defineProperty.js","../node_modules/@babel/runtime/helpers/esm/objectSpread2.js","../node_modules/@babel/runtime/helpers/esm/superPropBase.js","../node_modules/@babel/runtime/helpers/esm/get.js","../vector.ts","../fb/Schema.ts","../fb/Message.ts","../enum.ts","../util/bit.ts","../node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","../node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","../node_modules/@babel/runtime/helpers/esm/iterableToArray.js","../node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js","../visitor.ts","../visitor/typecomparator.ts","../type.ts","../data.ts","../util/pretty.ts","../builder/valid.ts","../builder/buffer.ts","../builder.ts","../builder/bool.ts","../builder/null.ts","../builder/date.ts","../builder/decimal.ts","../builder/dictionary.ts","../builder/fixedsizebinary.ts","../util/math.ts","../builder/float.ts","../node_modules/@babel/runtime/helpers/esm/construct.js","../util/bn.ts","../builder/int.ts","../builder/time.ts","../builder/timestamp.ts","../builder/interval.ts","../builder/binary.ts","../builder/utf8.ts","../builder/run.ts","../vector/row.ts","../util/vector.ts","../vector/chunked.ts","../column.ts","../util/args.ts","../schema.ts","../builder/list.ts","../builder/fixedsizelist.ts","../builder/map.ts","../builder/struct.ts","../builder/union.ts","../visitor/set.ts","../fb/File.ts","../visitor/builderctor.ts","../builder/index.ts","../ipc/metadata/file.ts","../io/stream.ts","../io/file.ts","../util/int.ts","../visitor/vectorloader.ts","../visitor/typeassembler.ts","../ipc/metadata/json.ts","../ipc/metadata/message.ts","../ipc/message.ts","../visitor/vectorassembler.ts","../ipc/writer.ts","../util/recordbatch.ts","../node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js","../node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js","../vector/base.ts","../vector/binary.ts","../vector/bool.ts","../vector/date.ts","../vector/decimal.ts","../vector/dictionary.ts","../vector/fixedsizebinary.ts","../vector/fixedsizelist.ts","../vector/float.ts","../vector/interval.ts","../vector/int.ts","../vector/list.ts","../vector/map.ts","../vector/null.ts","../vector/struct.ts","../vector/timestamp.ts","../vector/time.ts","../vector/union.ts","../vector/utf8.ts","../util/fn.ts","../visitor/get.ts","../visitor/indexof.ts","../visitor/iterator.ts","../visitor/toarray.ts","../visitor/bytewidth.ts","../visitor/vectorctor.ts","../vector/index.ts","../table.ts","../recordbatch.ts","../ipc/reader.ts","../io/whatwg/builder.ts","../compute/predicate.ts","../compute/dataframe.ts","../Arrow.ts","../Arrow.dom.ts","../io/whatwg/iterable.ts","../io/whatwg/reader.ts","../io/whatwg/writer.ts","../node_modules/streamlit-component-lib/dist/ArrowTable.js","../node_modules/streamlit-component-lib/dist/streamlit.js","../node_modules/streamlit-component-lib/dist/StreamlitReact.js","../node_modules/hoist-non-react-statics/dist/hoist-non-react-statics.cjs.js","../node_modules/underscore/modules/restArguments.js","../node_modules/underscore/modules/isObject.js","../node_modules/underscore/modules/isNull.js","../node_modules/underscore/modules/isUndefined.js","../node_modules/underscore/modules/isBoolean.js","../node_modules/underscore/modules/isElement.js","../node_modules/underscore/modules/_tagTester.js","../node_modules/underscore/modules/isString.js","../node_modules/underscore/modules/isNumber.js","../node_modules/underscore/modules/isDate.js","../node_modules/underscore/modules/isRegExp.js","../node_modules/underscore/modules/isError.js","../node_modules/underscore/modules/isSymbol.js","../node_modules/underscore/modules/isArrayBuffer.js","../node_modules/underscore/modules/isFunction.js","../node_modules/underscore/modules/_hasObjectTag.js","../node_modules/underscore/modules/_stringTagBug.js","../node_modules/underscore/modules/isDataView.js","../node_modules/underscore/modules/isArray.js","../node_modules/underscore/modules/_has.js","../node_modules/underscore/modules/isArguments.js","../node_modules/underscore/modules/isFinite.js","../node_modules/underscore/modules/isNaN.js","../node_modules/underscore/modules/constant.js","../node_modules/underscore/modules/_createSizePropertyCheck.js","../node_modules/underscore/modules/_shallowProperty.js","../node_modules/underscore/modules/_getByteLength.js","../node_modules/underscore/modules/_isBufferLike.js","../node_modules/underscore/modules/isTypedArray.js","../node_modules/underscore/modules/_getLength.js","../node_modules/underscore/modules/_collectNonEnumProps.js","../node_modules/underscore/modules/keys.js","../node_modules/underscore/modules/isEmpty.js","../node_modules/underscore/modules/isMatch.js","../node_modules/underscore/modules/underscore.js","../node_modules/underscore/modules/_toBufferView.js","../node_modules/underscore/modules/isEqual.js","../node_modules/underscore/modules/allKeys.js","../node_modules/underscore/modules/_methodFingerprint.js","../node_modules/underscore/modules/isMap.js","../node_modules/underscore/modules/isWeakMap.js","../node_modules/underscore/modules/isSet.js","../node_modules/underscore/modules/isWeakSet.js","../node_modules/underscore/modules/values.js","../node_modules/underscore/modules/pairs.js","../node_modules/underscore/modules/invert.js","../node_modules/underscore/modules/functions.js","../node_modules/underscore/modules/_createAssigner.js","../node_modules/underscore/modules/extend.js","../node_modules/underscore/modules/extendOwn.js","../node_modules/underscore/modules/defaults.js","../node_modules/underscore/modules/_baseCreate.js","../node_modules/underscore/modules/create.js","../node_modules/underscore/modules/clone.js","../node_modules/underscore/modules/tap.js","../node_modules/underscore/modules/toPath.js","../node_modules/underscore/modules/_toPath.js","../node_modules/underscore/modules/_deepGet.js","../node_modules/underscore/modules/get.js","../node_modules/underscore/modules/has.js","../node_modules/underscore/modules/identity.js","../node_modules/underscore/modules/matcher.js","../node_modules/underscore/modules/property.js","../node_modules/underscore/modules/_optimizeCb.js","../node_modules/underscore/modules/_baseIteratee.js","../node_modules/underscore/modules/iteratee.js","../node_modules/underscore/modules/_cb.js","../node_modules/underscore/modules/mapObject.js","../node_modules/underscore/modules/noop.js","../node_modules/underscore/modules/propertyOf.js","../node_modules/underscore/modules/times.js","../node_modules/underscore/modules/random.js","../node_modules/underscore/modules/now.js","../node_modules/underscore/modules/_createEscaper.js","../node_modules/underscore/modules/_escapeMap.js","../node_modules/underscore/modules/escape.js","../node_modules/underscore/modules/unescape.js","../node_modules/underscore/modules/_unescapeMap.js","../node_modules/underscore/modules/templateSettings.js","../node_modules/underscore/modules/template.js","../node_modules/underscore/modules/result.js","../node_modules/underscore/modules/uniqueId.js","../node_modules/underscore/modules/chain.js","../node_modules/underscore/modules/_executeBound.js","../node_modules/underscore/modules/partial.js","../node_modules/underscore/modules/bind.js","../node_modules/underscore/modules/_isArrayLike.js","../node_modules/underscore/modules/_flatten.js","../node_modules/underscore/modules/bindAll.js","../node_modules/underscore/modules/memoize.js","../node_modules/underscore/modules/delay.js","../node_modules/underscore/modules/defer.js","../node_modules/underscore/modules/throttle.js","../node_modules/underscore/modules/debounce.js","../node_modules/underscore/modules/wrap.js","../node_modules/underscore/modules/negate.js","../node_modules/underscore/modules/compose.js","../node_modules/underscore/modules/after.js","../node_modules/underscore/modules/before.js","../node_modules/underscore/modules/once.js","../node_modules/underscore/modules/findKey.js","../node_modules/underscore/modules/_createPredicateIndexFinder.js","../node_modules/underscore/modules/findIndex.js","../node_modules/underscore/modules/findLastIndex.js","../node_modules/underscore/modules/sortedIndex.js","../node_modules/underscore/modules/_createIndexFinder.js","../node_modules/underscore/modules/indexOf.js","../node_modules/underscore/modules/lastIndexOf.js","../node_modules/underscore/modules/find.js","../node_modules/underscore/modules/findWhere.js","../node_modules/underscore/modules/each.js","../node_modules/underscore/modules/map.js","../node_modules/underscore/modules/_createReduce.js","../node_modules/underscore/modules/reduce.js","../node_modules/underscore/modules/reduceRight.js","../node_modules/underscore/modules/filter.js","../node_modules/underscore/modules/reject.js","../node_modules/underscore/modules/every.js","../node_modules/underscore/modules/some.js","../node_modules/underscore/modules/contains.js","../node_modules/underscore/modules/invoke.js","../node_modules/underscore/modules/pluck.js","../node_modules/underscore/modules/where.js","../node_modules/underscore/modules/max.js","../node_modules/underscore/modules/min.js","../node_modules/underscore/modules/toArray.js","../node_modules/underscore/modules/sample.js","../node_modules/underscore/modules/shuffle.js","../node_modules/underscore/modules/sortBy.js","../node_modules/underscore/modules/_group.js","../node_modules/underscore/modules/groupBy.js","../node_modules/underscore/modules/indexBy.js","../node_modules/underscore/modules/countBy.js","../node_modules/underscore/modules/partition.js","../node_modules/underscore/modules/size.js","../node_modules/underscore/modules/_keyInObj.js","../node_modules/underscore/modules/pick.js","../node_modules/underscore/modules/omit.js","../node_modules/underscore/modules/initial.js","../node_modules/underscore/modules/first.js","../node_modules/underscore/modules/rest.js","../node_modules/underscore/modules/last.js","../node_modules/underscore/modules/compact.js","../node_modules/underscore/modules/flatten.js","../node_modules/underscore/modules/difference.js","../node_modules/underscore/modules/without.js","../node_modules/underscore/modules/uniq.js","../node_modules/underscore/modules/union.js","../node_modules/underscore/modules/intersection.js","../node_modules/underscore/modules/unzip.js","../node_modules/underscore/modules/zip.js","../node_modules/underscore/modules/object.js","../node_modules/underscore/modules/range.js","../node_modules/underscore/modules/chunk.js","../node_modules/underscore/modules/_chainResult.js","../node_modules/underscore/modules/mixin.js","../node_modules/underscore/modules/underscore-array-methods.js","../node_modules/underscore/modules/index-default.js","../node_modules/react-is/index.js","../node_modules/react-is/cjs/react-is.production.min.js","../node_modules/streamlit-component-lib/node_modules/react/cjs/react.production.min.js","../node_modules/object-assign/index.js","../node_modules/webpack/buildin/global.js"],"names":["VERSION","root","self","global","Function","ArrayProto","Array","prototype","ObjProto","Object","SymbolProto","Symbol","push","slice","toString","hasOwnProperty","supportsArrayBuffer","ArrayBuffer","supportsDataView","DataView","nativeIsArray","isArray","nativeKeys","keys","nativeCreate","create","nativeIsView","isView","_isNaN","isNaN","_isFinite","isFinite","hasEnumBug","propertyIsEnumerable","nonEnumerableProps","MAX_ARRAY_INDEX","Math","pow","module","exports","require","privateData","WeakMap","wrappers","pd","event","retv","get","console","assert","setCancelFlag","data","passiveListener","cancelable","canceled","preventDefault","error","Event","eventTarget","set","this","eventPhase","currentTarget","stopped","immediateStopped","timeStamp","Date","now","defineProperty","value","enumerable","i","length","key","defineRedirectDescriptor","configurable","defineCallDescriptor","apply","arguments","getWrapper","proto","wrapper","BaseEvent","CustomEvent","call","constructor","writable","isFunc","getOwnPropertyDescriptor","defineWrapper","getPrototypeOf","isStopped","setPassiveListener","type","target","composedPath","NONE","CAPTURING_PHASE","AT_TARGET","BUBBLING_PHASE","stopPropagation","stopImmediatePropagation","bubbles","Boolean","defaultPrevented","composed","srcElement","cancelBubble","returnValue","initEvent","window","setPrototypeOf","listenersMap","isObject","x","getListeners","listeners","TypeError","defineEventAttribute","eventTargetPrototype","eventName","node","listenerType","listener","next","prev","delete","newNode","passive","once","defineEventAttributeDescriptor","defineCustomEventTarget","eventNames","CustomEventTarget","EventTarget","types","Map","addEventListener","options","optionsIsObj","capture","undefined","removeEventListener","dispatchEvent","wrappedEvent","wrapEvent","err","handleEvent","setEventPhase","setCurrentTarget","_arrayLikeToArray","arr","len","arr2","_unsupportedIterableToArray","o","minLen","n","name","from","test","_createForOfIteratorHelper","allowArrayLike","it","iterator","F","s","done","e","_e","f","normalCompletion","didErr","step","_e2","asyncGeneratorStep","gen","resolve","reject","_next","_throw","arg","info","Promise","then","_asyncToGenerator","fn","args","_classCallCheck","instance","Constructor","_defineProperties","props","descriptor","_createClass","protoProps","staticProps","_typeof","obj","_regeneratorRuntime","Op","hasOwn","$Symbol","iteratorSymbol","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","toStringTag","define","wrap","innerFn","outerFn","tryLocsList","protoGenerator","Generator","generator","context","Context","_invoke","state","method","Error","doneResult","delegate","delegateResult","maybeInvokeDelegate","ContinueSentinel","sent","_sent","dispatchException","abrupt","record","tryCatch","GeneratorFunction","GeneratorFunctionPrototype","IteratorPrototype","getProto","NativeIteratorPrototype","values","Gp","defineIteratorMethods","forEach","AsyncIterator","PromiseImpl","invoke","result","__await","unwrapped","previousPromise","callInvokeWithMethodAndArg","resultName","nextLoc","pushTryEntry","locs","entry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","resetTryEntry","completion","reset","iterable","iteratorMethod","displayName","isGeneratorFunction","genFun","ctor","mark","__proto__","awrap","async","iter","object","reverse","pop","skipTempReset","charAt","stop","rootRecord","rval","exception","handle","loc","caught","hasCatch","hasFinally","finallyEntry","complete","finish","thrown","delegateYield","_slicedToArray","_i","_s","_arr","_n","_d","_AwaitValue","wrapped","_awaitAsyncGenerator","AsyncGenerator","front","back","resume","wrappedAwait","settle","request","_wrapAsyncGenerator","_asyncIterator","sync","retry","AsyncFromSyncIterator","AsyncFromSyncIteratorContinuation","r","ret","thr","_asyncGeneratorDelegate","inner","awaitWrap","waiting","pump","flatbuffers","inRange","a","min","max","ToDictionary","Offset","Table","SIZEOF_SHORT","SIZEOF_INT","FILE_IDENTIFIER_LENGTH","Encoding","UTF8_BYTES","UTF16_STRING","int32","Int32Array","float32","Float32Array","buffer","float64","Float64Array","isLittleEndian","Uint16Array","Uint8Array","Long","low","high","ZERO","toFloat64","equals","other","Builder","opt_initial_size","initial_size","bb","ByteBuffer","allocate","space","minalign","vtable","vtable_in_use","isNested","object_start","vtables","vector_num_elems","force_defaults","clear","capacity","forceDefaults","dataBuffer","asUint8Array","bytes","subarray","position","offset","prep","size","additional_bytes","align_size","old_buf_size","growByteBuffer","pad","byte_size","writeInt8","writeInt16","writeInt32","writeInt64","writeFloat32","writeFloat64","addInt8","addInt16","addInt32","addInt64","addFloat32","addFloat64","addFieldInt8","voffset","defaultValue","slot","addFieldInt16","addFieldInt32","addFieldInt64","addFieldFloat32","addFieldFloat64","addFieldOffset","addOffset","addFieldStruct","nested","notNested","new_buf_size","nbb","setPosition","startObject","numfields","endObject","vtableloc","trimmed_size","existing_vtable","vt1","outer_loop","vt2","readInt16","j","root_table","opt_file_identifier","file_identifier","charCodeAt","requiredField","table","field","table_start","vtable_start","readInt32","startVector","elem_size","num_elems","alignment","endVector","createString","utf8","codePoint","createLong","bytes_","position_","readInt8","readUint8","readUint16","readUint32","readInt64","readUint64","readFloat32","readFloat64","writeUint8","writeUint16","writeUint32","writeUint64","getBufferIdentifier","String","fromCharCode","__offset","bb_pos","vtable_offset","__union","t","__string","opt_encoding","b","c","__indirect","__vector","__vector_len","__has_identifier","ident","Stream","tokens","endOfStream","read","shift","prepend","token","unshift","finished","decoderError","fatal","opt_code_point","DEFAULT_ENCODING","TextDecoder","encoding","toLowerCase","_streaming","_BOMseen","_decoder","_fatal","_ignoreBOM","TextEncoder","_encoder","_options","UTF8Decoder","utf8_code_point","utf8_bytes_seen","utf8_bytes_needed","utf8_lower_boundary","utf8_upper_boundary","handler","stream","bite","code_point","UTF8Encoder","count","temp","decode","input","byteOffset","byteLength","input_stream","code_points","indexOf","cp","codePointsToString","encode","opt_string","string","u","d","stringToCodePoints","_Buffer","Buffer","useNativeEncoders","decodeUtf8","decoder","toUint8Array","TextDecoderPolyfill","encodeUtf8","encoder","TextEncoderPolyfill","_setPrototypeOf","p","bind","_inherits","subClass","superClass","_getPrototypeOf","_isNativeReflectConstruct","Reflect","construct","sham","Proxy","valueOf","_assertThisInitialized","ReferenceError","_possibleConstructorReturn","_createSuper","Derived","hasNativeReflectConstruct","Super","NewTarget","ITERATOR_DONE","freeze","ArrowJSON","_json","ReadableInterop","_getDOMStream","tee","_getNodeStream","pipe","pipeTo","duplex","pipeThrough","_DOMStream","toDOMStream","_nodeStream","toNodeStream","AsyncQueue","_values","resolvers","_closedPromise","_closedPromiseResolve","reason","return","_ensureOpen","_error","streamAdapters","_","abort","close","BigIntUnavailableError","BigIntUnavailable","asIntN","asUintN","BigInt","BigIntCtor","BigIntAvailable","BigInt64ArrayUnavailableError","BigInt64Array","BigInt64ArrayCtor","BigUint64ArrayUnavailableError","BigUint64Array","BigUint64ArrayCtor","isNumber","isBoolean","isFunction","isPromise","isIterable","isAsyncIterable","isArrowJSON","isIteratorResult","isFileHandle","isFetchResponse","isReadableDOMStream","isWritableDOMStream","isWritableNodeStream","isReadableNodeStream","toArrayBufferViewIterator","SharedArrayBuf","SharedArrayBuffer","memcpy","source","targetByteOffset","sourceByteLength","targetByteLength","dst","src","joinUint8Arrays","chunks","sliced","xOffset","yOffset","xLen","yLen","y","collapseContiguousByteRanges","reduce","index","Infinity","toArrayBufferView","ArrayBufferViewCtor","BYTES_PER_ELEMENT","toInt8Array","Int8Array","toInt16Array","Int16Array","toInt32Array","toBigInt64Array","toUint16Array","toUint32Array","Uint32Array","toBigUint64Array","toFloat32Array","toFloat64Array","toUint8ClampedArray","Uint8ClampedArray","ArrayCtor","buffers","toInt8ArrayIterator","toInt16ArrayIterator","toInt32ArrayIterator","toUint8ArrayIterator","toUint16ArrayIterator","toUint32ArrayIterator","toFloat32ArrayIterator","toFloat64ArrayIterator","toUint8ClampedArrayIterator","toArrayBufferViewAsyncIterator","emit","toInt8ArrayAsyncIterator","toInt16ArrayAsyncIterator","toInt32ArrayAsyncIterator","toUint8ArrayAsyncIterator","toUint16ArrayAsyncIterator","toUint32ArrayAsyncIterator","toFloat32ArrayAsyncIterator","toFloat64ArrayAsyncIterator","toUint8ClampedArrayAsyncIterator","rebaseValueOffsets","valueOffsets","compareArrayLike","fromIterable","fromAsyncIterable","fromDOMStream","fromNodeStream","byteRange","cmd","bufferLength","threw","throw","AdaptiveByteReader","releaseLock","byobReader","defaultReader","supportsBYOB","reader","getBYOBReader","getDefaultReader","catch","readFromBYOBReader","mode","readInto","onEvent","cleanup","events","evt","destroy","race","map","_defineProperty","enumerableOnly","getOwnPropertySymbols","symbols","filter","sym","_objectSpread2","getOwnPropertyDescriptors","defineProperties","_superPropBase","property","receiver","base","desc","org","flatbuf","arrow","apache","AbstractVector","MetadataVersion","UnionMode","Precision","DateUnit","TimeUnit","IntervalUnit","Type","Endianness","Null","__init","builder","startNull","endNull","Struct_","startStruct_","endStruct_","List","startList","endList","LargeList","startLargeList","endLargeList","FixedSizeList","listSize","startFixedSizeList","addListSize","endFixedSizeList","keysSorted","startMap","addKeysSorted","endMap","Union","Sparse","typeIdsOffset","numElems","startUnion","addMode","addTypeIds","endUnion","Int","bitWidth","isSigned","startInt","addBitWidth","addIsSigned","endInt","FloatingPoint","HALF","precision","startFloatingPoint","addPrecision","endFloatingPoint","Utf8","startUtf8","endUtf8","Binary","startBinary","endBinary","LargeUtf8","startLargeUtf8","endLargeUtf8","LargeBinary","startLargeBinary","endLargeBinary","FixedSizeBinary","byteWidth","startFixedSizeBinary","addByteWidth","endFixedSizeBinary","Bool","startBool","endBool","Decimal","scale","startDecimal","addScale","endDecimal","MILLISECOND","unit","startDate","addUnit","endDate","Time","startTime","endTime","Timestamp","SECOND","optionalEncoding","timezoneOffset","startTimestamp","addTimezone","endTimestamp","Interval","YEAR_MONTH","startInterval","endInterval","Duration","startDuration","endDuration","KeyValue","keyOffset","valueOffset","startKeyValue","addKey","addValue","endKeyValue","DictionaryEncoding","id","indexTypeOffset","isOrdered","startDictionaryEncoding","addId","addIndexType","addIsOrdered","endDictionaryEncoding","Field","nameOffset","nullable","typeType","typeOffset","dictionaryOffset","childrenOffset","customMetadataOffset","startField","addName","addNullable","addTypeType","addType","addDictionary","addChildren","addCustomMetadata","endField","Schema","Little","endianness","fieldsOffset","startSchema","addEndianness","addFields","endSchema","NS7624605610262437867","MessageHeader","FieldNode","null_count","RecordBatch","nodesOffset","buffersOffset","startRecordBatch","addLength","addNodes","addBuffers","endRecordBatch","DictionaryBatch","dataOffset","isDelta","startDictionaryBatch","addData","addIsDelta","endDictionaryBatch","Message","V1","version","headerType","headerOffset","bodyLength","startMessage","addVersion","addHeaderType","addHeader","addBodyLength","endMessage","Schema_","BufferType","Message_","iterateBits","getBool","_data","_index","byte","bit","getBit","setBool","truncateBitmap","bitmap","alignedSize","packBools","xs","begin","byteIndex","remaining","popcnt_bit_range","lhs","rhs","sum","rhsInside","lhsInside","popcnt_array","cnt","pos","view","popcnt_uint32","getUint32","getUint16","getUint8","uint32","_toConsumableArray","Visitor","nodes","visit","getVisitFn","throwIfNotFound","_node","visitor","dtype","Data","Vector","inferDType","DataType","visitNull","visitBool","visitInt","Int8","visitInt8","Int16","visitInt16","Int32","visitInt32","Int64","visitInt64","Uint8","visitUint8","Uint16","visitUint16","Uint32","visitUint32","Uint64","visitUint64","Float","visitFloat","Float16","visitFloat16","Float32","visitFloat32","Float64","visitFloat64","visitUtf8","visitBinary","visitFixedSizeBinary","visitDate","DateDay","visitDateDay","DateMillisecond","visitDateMillisecond","visitTimestamp","TimestampSecond","visitTimestampSecond","TimestampMillisecond","visitTimestampMillisecond","TimestampMicrosecond","visitTimestampMicrosecond","TimestampNanosecond","visitTimestampNanosecond","visitTime","TimeSecond","visitTimeSecond","TimeMillisecond","visitTimeMillisecond","TimeMicrosecond","visitTimeMicrosecond","TimeNanosecond","visitTimeNanosecond","visitDecimal","visitList","Struct","visitStruct","visitUnion","DenseUnion","visitDenseUnion","SparseUnion","visitSparseUnion","Dictionary","visitDictionary","visitInterval","IntervalDayTime","visitIntervalDayTime","IntervalYearMonth","visitIntervalYearMonth","visitFixedSizeList","visitMap","typeId","SINGLE","DOUBLE","MICROSECOND","NANOSECOND","DAY","DAY_TIME","Dense","TypeComparator","schema","compareFields","fields","others","every","compareField","compareConstructor","compareAny","compareInt","compareFloat","compareDate","compareTimestamp","timezone","compareTime","compareUnion","typeIds","children","compareInterval","indices","dictionary","comparer","ArrayType","Int_","Date_","Time_","Timestamp_","Interval_","child","valueType","join","Union_","typeIdToChildIndex","idx","Map_","atomicDictionaryId","getId","strideForType","nullCount","childData","floor","_nullCount","stride","nullBitmap","childStride","_sliceBuffers","clone","_sliceChildren","newLength","fill","VALIDITY","TYPE","OFFSET","DATA","valueOffsetsOrChildren","valueToString","toPrimitive","JSON","stringify","createIsValidFunction","nullValues","fnBody","noNaNs","valueToCase","roundLengthUpToNearest64Bytes","BPE","sliceOrExtendArray","BufferBuilder","_resize","extra","reserved","array","DataBufferBuilder","reserve","BitmapBufferBuilder","numValid","val","cur","OffsetsBufferBuilder","WideBufferBuilder","_ArrayType64","buffer64","ArrayType64","nulls","_nulls","_isValid","new","flush","numInvalid","_offsets","_typeIds","reservedLength","reservedByteLength","setValid","isValid","setValue","_setValue","valid","numChildren","offsets","last","queueingStrategy","highWaterMark","sizeProperty","numChunks","append","toVector","throughIterable","throughAsyncIterable","FixedWidthBuilder","opts","VariableWidthBuilder","_pendingLength","pending","_pending","current","_flush","pendingLength","_flushPending","BoolBuilder","NullBuilder","DateBuilder","DateDayBuilder","DateMillisecondBuilder","DecimalBuilder","DictionaryBuilder","hashFn","_dictionaryOffset","_keysToIndices","valueToKey","keysToIndices","_dictionary","curr","concat","FixedSizeBinaryBuilder","f64","u32","uint16ToFloat64","h","expo","sigf","sign","NaN","float64ToUint16","FloatBuilder","Float16Builder","Float32Builder","Float64Builder","Parent","Class","bignumToString","bignumToBigInt","isArrowBigNumSymbol","for","BigNum","SignedBigNum","UnsignedBigNum","DecimalBigNum","bignumToNumber","bn","hi","lo","signed","words","number","decimalToString","digits","base64","base32","checks","toJSON","hint","assign","memo","BN","num","IntBuilder","Int8Builder","Int16Builder","Int32Builder","Int64Builder","toBigInt","Uint8Builder","Uint16Builder","Uint32Builder","Uint64Builder","TimeBuilder","TimeSecondBuilder","TimeMillisecondBuilder","TimeMicrosecondBuilder","TimeNanosecondBuilder","TimestampBuilder","TimestampSecondBuilder","TimestampMillisecondBuilder","TimestampMicrosecondBuilder","TimestampNanosecondBuilder","IntervalBuilder","IntervalDayTimeBuilder","IntervalYearMonthBuilder","BinaryBuilder","Utf8Builder","Run","kParent","kRowIndex","kKeyToIdx","kIdxToVal","kCustomInspect","Row","parent","numKeys","ktoi","itov","getValue","getIndex","ki","vi","kr","vr","k","v","has","callbackfn","thisArg","callback","m","str","MapRow","createRowProxy","getChildAt","StructRow","defineRowProxyProperties","findIndex","tmp","row","getter","setter","getKey","RowProxyHandler","isExtensible","deleteProperty","preventExtensions","ownKeys","clampIndex","adjust","clampRange","end","big0","isNaNFast","createElementComparator","search","typeofSearch","valueOfSearch","comparators","createSubElementsComparator","creatMapComparator","createArrayLikeComparator","createVectorComparator","createObjectComparator","compareArray","compareObject","vec","compareVector","lKeyItr","rKeyItr","rValItr","rVal","lKey","rKey","Chunked","calculateOffsets","_type","_chunks","_chunkOffsets","_length","_numChildren","chunk","isDictionary","_indices","flatten","_sliceInternal","columns","_children","vector","mid","isValidInternal","getInternal","element","indexOfInternal","toArray","arraySet","typedSet","chunkIndex","fromIndex","start","found","slices","chunkOffsets","chunkLength","chunkOffset","to","vectors","selectChunkArgs","Column","_field","SingleChunkColumn","metadata","column","rest","some","_chunk","selectArgs","Ctor","vals","_selectArgs","selectColumnArgs","_selectFieldArgs","selectFieldArgs","_selectChunkArgs","selectVectorChildrenArgs","_selectVectorChildrenArgs","res","toKeysAndValues","entries","fieldIndex","valueIndex","dictionaries","generateDictionaryMap","compareSchemas","columnNames","names","columnIndices","curFields","mergeMaps","newFields","f2","newDictionaries","m1","m2","ListBuilder","_run","run","FixedSizeListBuilder","childIndex","MapBuilder","StructBuilder","UnionBuilder","_valueToChildTypeId","childTypeId","SparseUnionBuilder","DenseUnionBuilder","SetVisitor","setEpochMsToMillisecondsLong","epochMs","setVariableWidthBytes","setDateDay","setEpochMsToDays","setDateMillisecond","setNumeric","setFloat16","setNumericX2","values64","long","setTimestampSecond","setTimestampMillisecond","setTimestampMicrosecond","setEpochMsToMicrosecondsLong","setTimestampNanosecond","setEpochMsToNanosecondsLong","setTimeSecond","setTimeMillisecond","setTimeMicrosecond","setTimeNanosecond","setDenseUnion","setSparseUnion","setIntervalDayTime","setIntervalYearMonth","itr","_setStructVectorValue","_setStructArrayValue","_setStructObjectValue","GetBuilderCtor","newBuilder","getBuilderConstructor","defaultOptions","getChildOptions","T","setVisitor","Footer","Block","schemaOffset","dictionariesOffset","recordBatchesOffset","startFooter","addSchema","addDictionaries","addRecordBatches","endFooter","metaDataLength","_Block","File_","_Footer","Footer_","V4","recordBatches","dictionaryBatches","_recordBatches","_dictionaryBatches","numRecordBatches","block","getRecordBatch","numDictionaries","getDictionaryBatch","buf","footer","getRootAsFooter","OffHeapFooter","startRecordBatchesVector","rb","FileBlock","startDictionariesVector","db","dictionaryBatchesOffset","finishFooterBuffer","_footer","recordBatchesLength","dictionariesLength","fileBlock","createBlock","AsyncByteQueue","ByteStream","ByteStreamSource","peek","AsyncByteStream","AsyncByteStreamSource","body","closed","cancel","RandomAccessFile","readAt","getInt32","nBytes","AsyncRandomAccessFile","file","_handle","stat","bytesRead","intAsHex","kPowersOfTen","BaseInt64","L","R","product","lessThan","_times","_plus","out_buffer","fromString","out","posn","group","parseInt","substr","multiple","times","plus","left","right","this_high","other_high","negate","startsWith","Int128","L0","L1","L2","L3","R0","R1","R2","R3","multiply","sums","VectorLoader","nodesIndex","buffersIndex","nextFieldNode","readNullBitmap","readData","readOffsets","visitMany","readTypeIds","readDictionary","nextBufferRange","JSONVectorLoader","sources","isTimestamp","isInt","isTime","isDate","convertArray","isDecimal","isBinary","isFixedSizeBinary","binaryDataFromJSON","isBool","isUtf8","joined","TypeAssembler","startTypeIdsVector","createTypeIdsVector","indexType","recordBatchFromJSON","fieldNodesFromJSON","buffersFromJSON","schemaFieldsFromJSON","_schema","fromJSON","fieldChildrenFromJSON","fieldNodes","validity","BufferRegion","customMetadataFromJSON","_metadata","indexTypeFromJSON","typeFromJSON","_Field","_Schema","_Message","_KeyValue","_FieldNode","_Endianness","_RecordBatch","_DictionaryBatch","header","_version","_headerType","_createHeader","_bodyLength","msg","message","messageHeaderFromJSON","_message","getRootAsMessage","decodeMessageHeader","isSchema","isRecordBatch","isDictionaryBatch","finishMessageBuffer","_nodes","_buffers","_isDelta","_id","decodeFieldNodes","batch","nodesLength","decodeBuffers","bufferRegions","buffersLength","decodeSchemaFields","fieldsLength","decodeFieldChildren","childrenLength","decodeCustomMetadata","customMetadataLength","customMetadata","decodeIndexType","decodeFieldType","typeIdsArray","typeAssembler","childOffsets","childrenVectorOffset","createChildrenVector","metadataOffset","createCustomMetadataVector","dictType","dictMeta","fieldOffsets","startFieldsVector","fieldsVectorOffset","createFieldsVector","platformIsLittleEndian","Big","recordBatch","startNodesVector","nodesVectorOffset","startBuffersVector","b_","buffersVectorOffset","dictionaryBatch","createFieldNode","createBuffer","setInt16","invalidMessageType","nullMessage","invalidMessageMetadata","expected","actual","invalidMessageBodyLength","MessageReader","readMetadataLength","readMetadata","throwIfNull","readMessage","PADDING","metadataLength","AsyncMessageReader","JSONMessageReader","_body","_batchIndex","_dictionaryIndex","batches","flattenDataSources","MAGIC_STR","MAGIC","checkForMagicArrowString","magicLength","magicAndPadding","magicX2AndPadding","VectorAssembler","_byteLength","_bufferRegions","RangeError","isNull","addBuffer","_nullV","assembler","vectorChildren","assembleResult","assembleFlatVector","assembleFlatListVector","firstOffset","lastOffset","assembleListVector","assembleNestedVector","maxChildTypeId","childLengths","shiftedOffsets","unshiftedOffsets","childLength","RecordBatchWriter","_position","_started","_sink","_dictionaryBlocks","_recordBatchBlocks","_dictionaryDeltaOffsets","autoDestroy","writeLegacyIpcFormat","_autoDestroy","_writeLegacyIpcFormat","writeAll","writeAllAsync","sink","objectMode","_writeFooter","compareTo","_writeSchema","payload","_InternalEmptyPlaceholderRecordBatch","_writeRecordBatch","flatbufferSize","prefixSize","nPaddingBytes","_write","of","_writePadding","write","_writeMessage","assemble","_writeDictionaries","_writeBodyBuffers","padding","_writeDictionaryBatch","writableStrategy","readableStrategy","RecordBatchStreamWriter","writer","RecordBatchFileWriter","_writeMagic","noopBuf","nullBufs","bitmapLength","ensureSameLengthData","batchLength","l","batchData","_changeLengthAndBackfillNullBitmap","distributeColumnsIntoRecordBatches","distributeVectorsIntoRecordBatches","vecs","batchArgs","numBatches","numColumns","Number","POSITIVE_INFINITY","distributeChildData","uniformlyDistributeChunksAcrossRecordBatches","_objectWithoutProperties","excluded","sourceKeys","sourceSymbolKeys","BaseVector","_bindDataAccessors","VectorName","isConcatSpreadable","BinaryVector","BoolVector","vectorFromValuesWithType","DateVector","DateDayVector","DateMillisecondVector","DecimalVector","DictionaryVector","FixedSizeBinaryVector","FixedSizeListVector","FloatVector","ArrowType","vectorTypeToDataType","InputType","arrayTypeToDataType","convertTo16Bit","Float16Vector","Float32Vector","Float64Vector","typeCtor","dataCtor","IntervalVector","IntervalDayTimeVector","IntervalYearMonthVector","IntVector","is64bit","convert32To64Bit","Int8Vector","Int16Vector","Int32Vector","Int64Vector","_values64","Uint8Vector","Uint16Vector","Uint32Vector","Uint64Vector","ListVector","MapVector","NullVector","StructVector","_row","bound","TimestampVector","TimestampSecondVector","TimestampMillisecondVector","TimestampMicrosecondVector","TimestampNanosecondVector","TimeVector","TimeSecondVector","TimeMillisecondVector","TimeMicrosecondVector","TimeNanosecondVector","UnionVector","DenseUnionVector","SparseUnionVector","Utf8Vector","partial0","partial2","GetVisitor","epochMillisecondsLongToMs","epochMillisecondsToDate","getVariableWidthBytes","getDateDay","epochDaysToMs","epochDaysToDate","getDateMillisecond","epochMillisecondsLongToDate","getNumeric","getFloat16","getBigInts","getTimestampSecond","getTimestampMillisecond","getTimestampMicrosecond","epochMicrosecondsLongToMs","getTimestampNanosecond","epochNanosecondsLongToMs","getTimeSecond","getTimeMillisecond","getTimeMicrosecond","getTimeNanosecond","getDenseUnion","getSparseUnion","getIntervalDayTime","getIntervalYearMonth","interval","int32s","_vector","decimal","IndexOfVisitor","indexOfValue","searchElement","indexOfNull","compare","indexOfUnion","IteratorVisitor","vectorIterator","getFn","getVisitor","nullByte","nullBit","nullableIterator","ToArrayVisitor","arrayOfVector","iteratorVisitor","variableWidthColumnErrorMessage","ByteWidthVisitor","____","visitFields","GetVectorConstructor","newDataType","getVectorConstructor","transform","indexOfVisitor","toArrayVisitor","getByteWidth","byteWidthVisitor","wrapNullableSet","VectorCtor","partialType0","getColumnAt","getColumnIndex","Writer","nameToIndex","selectAt","columnName","newIdx","oldToNew","_f","_fs","empty","fromStruct","tableFromIterable","tableFromAsyncIterable","RecordBatchReader","isSync","open","opening","cols","_dictionaries","DictionaryCollector","collect","fs","vs","readAllSync","impl","_impl","isFile","isAsync","isStream","readRecordBatch","RecordBatchStreamReader","RecordBatchJSONReaderImpl","fromArrowJSON","fromFileHandle","fromAsyncByteStream","RecordBatchFileReader","RecordBatchFileReaderImpl","RecordBatchStreamReaderImpl","fromByteStream","readAllAsync","AsyncRecordBatchStreamReader","AsyncRecordBatchFileReader","RecordBatchReaderImpl","_recordBatchIndex","_loadVectors","_reader","shouldAutoDestroy","readSchema","_readNextMessageAndValidate","readMessageBody","_loadRecordBatch","_loadDictionaryBatch","AsyncRecordBatchStreamReaderImpl","_readFooter","_readDictionaryBatch","seek","AsyncRecordBatchFileReaderImpl","BuilderTransform","_numChunks","_finished","_bufferedSize","builderOptions","_controller","_builder","_getSize","chunkByteLength","readableHighWaterMark","writableHighWaterMark","ReadableStream","_maybeFlush","WritableStream","_writeValueAndReturnChunkSize","bufferedSize","controller","desiredSize","_enqueue","enqueue","Value","Literal","Equals","LTeq","GTeq","Not","ge","le","eq","Col","colidx","Predicate","expr","And","Or","ComparisonPredicate","_bindLitLit","_bindLitCol","_bindColLit","_bindColCol","CombinationPredicate","accum","_batch","rtrn","left_func","right_func","col","lit","col_func","lastDictionary","reverseLookup","lastKey","func","countBy","DataFrame","scan","scanReverse","predicate","FilteredDataFrame","batchIndex","numRows","count_by","countByteLength","ceil","log","counts","CountByResult","_predicate","isBound","and","util_bn_","util_int_","util_bit_","util_math_","util_buffer_","util_vector_","bm","hwm","pull","asyncIterableAsReadableDOMStream","iterableAsReadableDOMStream","queue","readable","ComponentMessageType","ArrowTable","indexBuffer","columnsBuffer","styler","_this","getCell","rowIndex","columnIndex","isBlankCell","headerRows","headerColumns","isIndexCell","isColumnsCell","classNames","content","dataColumnIndex","getContent","columnsTable","dataRowIndex","uuid","indexTable","displayValuesTable","dataTable","getColumnTypeId","nanosToDate","caption","displayValues","styles","numCols","rows","dataRows","dataColumns","serialize","nanos","__assign","Streamlit","API_VERSION","RENDER_EVENT","registeredMessageListener","setComponentReady","onMessageEvent","sendBackMsg","COMPONENT_READY","apiVersion","setFrameHeight","height","document","scrollHeight","lastFrameHeight","SET_FRAME_HEIGHT","setComponentValue","dataType","isBigIntArray","isTypedArray","SET_COMPONENT_VALUE","onRenderMessage","dataframeArgs","argsDataframeToObject","disabled","theme","_injectTheme","eventData","detail","argsDataframe","argsDataframeArrow","_a","toArrowTable","fromEntries","df","postMessage","isStreamlitMessage","style","createElement","head","appendChild","innerHTML","primaryColor","backgroundColor","secondaryBackgroundColor","textColor","font","__extends","extendStatics","__","_super","StreamlitComponentBase","componentDidMount","componentDidUpdate","React","PureComponent","reactIs","REACT_STATICS","childContextTypes","contextType","contextTypes","defaultProps","getDefaultProps","getDerivedStateFromError","getDerivedStateFromProps","mixins","propTypes","KNOWN_STATICS","caller","callee","arity","MEMO_STATICS","TYPE_STATICS","getStatics","component","isMemo","ForwardRef","render","Memo","getOwnPropertyNames","objectPrototype","hoistNonReactStatics","targetComponent","sourceComponent","blacklist","inheritedComponent","targetStatics","sourceStatics","restArguments","startIndex","isUndefined","isElement","nodeType","tagTester","tag","nodelist","childNodes","hasStringTagBug","hasObjectTag","isIE11","isDataView","getInt8","isArrayBuffer","isArguments","isSymbol","parseFloat","constant","createSizePropertyCheck","getSizeProperty","collection","shallowProperty","getByteLength","typedArrayPattern","isBufferLike","collectNonEnumProps","hash","contains","emulatedSet","nonEnumIdx","prop","isEmpty","getLength","isString","isMatch","attrs","_keys","_wrapped","toBufferView","bufferSource","tagDataView","aStack","bStack","deepEq","className","areArrays","aCtor","bCtor","isEqual","allKeys","ie11fingerprint","methods","weakMapMethods","forEachName","commonInit","mapTail","mapMethods","setMethods","pairs","invert","functions","sort","createAssigner","keysFunc","defaults","baseCreate","extendOwn","extend","tap","interceptor","toPath","path","deepGet","_has","identity","matcher","optimizeCb","argCount","accumulator","baseIteratee","iteratee","cb","mapObject","results","currentKey","noop","propertyOf","random","getTime","createEscaper","escaper","match","testRegexp","RegExp","replaceRegexp","replace","escapeMap","templateSettings","evaluate","interpolate","escape","noMatch","escapes","escapeRegExp","escapeChar","bareIdentifier","template","text","settings","oldSettings","argument","variable","fallback","idCounter","uniqueId","prefix","chain","_chain","executeBound","sourceFunc","boundFunc","callingContext","partial","boundArgs","placeholder","callArgs","depth","strict","output","isArrayLike","memoize","hasher","cache","address","wait","setTimeout","delay","throttle","timeout","previous","later","leading","throttled","_now","clearTimeout","trailing","debounce","immediate","passed","debounced","_args","compose","after","before","findKey","createPredicateIndexFinder","dir","sortedIndex","createIndexFinder","predicateFind","item","findLastIndex","find","findWhere","each","createReduce","reducer","initial","list","guard","contextPath","pluck","where","computed","lastComputed","reStrSymbol","sample","rand","shuffle","sortBy","criteria","behavior","partition","pass","keyInObj","pick","first","compact","_flatten","otherArrays","difference","uniq","isSorted","seen","arrays","intersection","argsLength","unzip","range","chainResult","mixin","allExports","g","q","w","z","$$typeof","A","AsyncMode","ConcurrentMode","ContextConsumer","ContextProvider","Element","Fragment","Lazy","Portal","Profiler","StrictMode","Suspense","isAsyncMode","isConcurrentMode","isContextConsumer","isContextProvider","isForwardRef","isFragment","isLazy","isPortal","isProfiler","isStrictMode","isSuspense","isValidElementType","typeOf","B","C","encodeURIComponent","D","isMounted","enqueueForceUpdate","enqueueReplaceState","enqueueSetState","E","refs","updater","G","H","isReactComponent","setState","forceUpdate","I","isPureReactComponent","J","K","ref","__self","__source","M","_owner","O","P","Q","keyPrefix","S","U","V","W","aa","X","N","Y","Z","ba","ReactCurrentDispatcher","ReactCurrentBatchConfig","suspense","ReactCurrentOwner","IsSomeRendererActing","Children","only","Component","__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED","cloneElement","createContext","_calculateChangedBits","_currentValue","_currentValue2","_threadCount","Provider","Consumer","_context","createFactory","createRef","forwardRef","isValidElement","lazy","_ctor","_status","_result","useCallback","useContext","useDebugValue","useEffect","useImperativeHandle","useLayoutEffect","useMemo","useReducer","useRef","useState","propIsEnumerable","toObject","test1","test2","test3","split","letter","shouldUseNative"],"mappings":"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","file":"static/js/2.45bff57d.chunk.js","sourcesContent":["// Current version.\nexport var VERSION = '1.13.4';\n\n// Establish the root object, `window` (`self`) in the browser, `global`\n// on the server, or `this` in some virtual machines. We use `self`\n// instead of `window` for `WebWorker` support.\nexport var root = (typeof self == 'object' && self.self === self && self) ||\n          (typeof global == 'object' && global.global === global && global) ||\n          Function('return this')() ||\n          {};\n\n// Save bytes in the minified (but not gzipped) version:\nexport var ArrayProto = Array.prototype, ObjProto = Object.prototype;\nexport var SymbolProto = typeof Symbol !== 'undefined' ? Symbol.prototype : null;\n\n// Create quick reference variables for speed access to core prototypes.\nexport var push = ArrayProto.push,\n    slice = ArrayProto.slice,\n    toString = ObjProto.toString,\n    hasOwnProperty = ObjProto.hasOwnProperty;\n\n// Modern feature detection.\nexport var supportsArrayBuffer = typeof ArrayBuffer !== 'undefined',\n    supportsDataView = typeof DataView !== 'undefined';\n\n// All **ECMAScript 5+** native function implementations that we hope to use\n// are declared here.\nexport var nativeIsArray = Array.isArray,\n    nativeKeys = Object.keys,\n    nativeCreate = Object.create,\n    nativeIsView = supportsArrayBuffer && ArrayBuffer.isView;\n\n// Create references to these builtin functions because we override them.\nexport var _isNaN = isNaN,\n    _isFinite = isFinite;\n\n// Keys in IE < 9 that won't be iterated by `for key in ...` and thus missed.\nexport var hasEnumBug = !{toString: null}.propertyIsEnumerable('toString');\nexport var nonEnumerableProps = ['valueOf', 'isPrototypeOf', 'toString',\n  'propertyIsEnumerable', 'hasOwnProperty', 'toLocaleString'];\n\n// The largest integer that can be represented exactly.\nexport var MAX_ARRAY_INDEX = Math.pow(2, 53) - 1;\n","'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./cjs/react.production.min.js');\n} else {\n  module.exports = require('./cjs/react.development.js');\n}\n","/**\n * @typedef {object} PrivateData\n * @property {EventTarget} eventTarget The event target.\n * @property {{type:string}} event The original event object.\n * @property {number} eventPhase The current event phase.\n * @property {EventTarget|null} currentTarget The current event target.\n * @property {boolean} canceled The flag to prevent default.\n * @property {boolean} stopped The flag to stop propagation.\n * @property {boolean} immediateStopped The flag to stop propagation immediately.\n * @property {Function|null} passiveListener The listener if the current listener is passive. Otherwise this is null.\n * @property {number} timeStamp The unix time.\n * @private\n */\n\n/**\n * Private data for event wrappers.\n * @type {WeakMap<Event, PrivateData>}\n * @private\n */\nconst privateData = new WeakMap()\n\n/**\n * Cache for wrapper classes.\n * @type {WeakMap<Object, Function>}\n * @private\n */\nconst wrappers = new WeakMap()\n\n/**\n * Get private data.\n * @param {Event} event The event object to get private data.\n * @returns {PrivateData} The private data of the event.\n * @private\n */\nfunction pd(event) {\n    const retv = privateData.get(event)\n    console.assert(\n        retv != null,\n        \"'this' is expected an Event object, but got\",\n        event\n    )\n    return retv\n}\n\n/**\n * https://dom.spec.whatwg.org/#set-the-canceled-flag\n * @param data {PrivateData} private data.\n */\nfunction setCancelFlag(data) {\n    if (data.passiveListener != null) {\n        if (\n            typeof console !== \"undefined\" &&\n            typeof console.error === \"function\"\n        ) {\n            console.error(\n                \"Unable to preventDefault inside passive event listener invocation.\",\n                data.passiveListener\n            )\n        }\n        return\n    }\n    if (!data.event.cancelable) {\n        return\n    }\n\n    data.canceled = true\n    if (typeof data.event.preventDefault === \"function\") {\n        data.event.preventDefault()\n    }\n}\n\n/**\n * @see https://dom.spec.whatwg.org/#interface-event\n * @private\n */\n/**\n * The event wrapper.\n * @constructor\n * @param {EventTarget} eventTarget The event target of this dispatching.\n * @param {Event|{type:string}} event The original event to wrap.\n */\nfunction Event(eventTarget, event) {\n    privateData.set(this, {\n        eventTarget,\n        event,\n        eventPhase: 2,\n        currentTarget: eventTarget,\n        canceled: false,\n        stopped: false,\n        immediateStopped: false,\n        passiveListener: null,\n        timeStamp: event.timeStamp || Date.now(),\n    })\n\n    // https://heycam.github.io/webidl/#Unforgeable\n    Object.defineProperty(this, \"isTrusted\", { value: false, enumerable: true })\n\n    // Define accessors\n    const keys = Object.keys(event)\n    for (let i = 0; i < keys.length; ++i) {\n        const key = keys[i]\n        if (!(key in this)) {\n            Object.defineProperty(this, key, defineRedirectDescriptor(key))\n        }\n    }\n}\n\n// Should be enumerable, but class methods are not enumerable.\nEvent.prototype = {\n    /**\n     * The type of this event.\n     * @type {string}\n     */\n    get type() {\n        return pd(this).event.type\n    },\n\n    /**\n     * The target of this event.\n     * @type {EventTarget}\n     */\n    get target() {\n        return pd(this).eventTarget\n    },\n\n    /**\n     * The target of this event.\n     * @type {EventTarget}\n     */\n    get currentTarget() {\n        return pd(this).currentTarget\n    },\n\n    /**\n     * @returns {EventTarget[]} The composed path of this event.\n     */\n    composedPath() {\n        const currentTarget = pd(this).currentTarget\n        if (currentTarget == null) {\n            return []\n        }\n        return [currentTarget]\n    },\n\n    /**\n     * Constant of NONE.\n     * @type {number}\n     */\n    get NONE() {\n        return 0\n    },\n\n    /**\n     * Constant of CAPTURING_PHASE.\n     * @type {number}\n     */\n    get CAPTURING_PHASE() {\n        return 1\n    },\n\n    /**\n     * Constant of AT_TARGET.\n     * @type {number}\n     */\n    get AT_TARGET() {\n        return 2\n    },\n\n    /**\n     * Constant of BUBBLING_PHASE.\n     * @type {number}\n     */\n    get BUBBLING_PHASE() {\n        return 3\n    },\n\n    /**\n     * The target of this event.\n     * @type {number}\n     */\n    get eventPhase() {\n        return pd(this).eventPhase\n    },\n\n    /**\n     * Stop event bubbling.\n     * @returns {void}\n     */\n    stopPropagation() {\n        const data = pd(this)\n\n        data.stopped = true\n        if (typeof data.event.stopPropagation === \"function\") {\n            data.event.stopPropagation()\n        }\n    },\n\n    /**\n     * Stop event bubbling.\n     * @returns {void}\n     */\n    stopImmediatePropagation() {\n        const data = pd(this)\n\n        data.stopped = true\n        data.immediateStopped = true\n        if (typeof data.event.stopImmediatePropagation === \"function\") {\n            data.event.stopImmediatePropagation()\n        }\n    },\n\n    /**\n     * The flag to be bubbling.\n     * @type {boolean}\n     */\n    get bubbles() {\n        return Boolean(pd(this).event.bubbles)\n    },\n\n    /**\n     * The flag to be cancelable.\n     * @type {boolean}\n     */\n    get cancelable() {\n        return Boolean(pd(this).event.cancelable)\n    },\n\n    /**\n     * Cancel this event.\n     * @returns {void}\n     */\n    preventDefault() {\n        setCancelFlag(pd(this))\n    },\n\n    /**\n     * The flag to indicate cancellation state.\n     * @type {boolean}\n     */\n    get defaultPrevented() {\n        return pd(this).canceled\n    },\n\n    /**\n     * The flag to be composed.\n     * @type {boolean}\n     */\n    get composed() {\n        return Boolean(pd(this).event.composed)\n    },\n\n    /**\n     * The unix time of this event.\n     * @type {number}\n     */\n    get timeStamp() {\n        return pd(this).timeStamp\n    },\n\n    /**\n     * The target of this event.\n     * @type {EventTarget}\n     * @deprecated\n     */\n    get srcElement() {\n        return pd(this).eventTarget\n    },\n\n    /**\n     * The flag to stop event bubbling.\n     * @type {boolean}\n     * @deprecated\n     */\n    get cancelBubble() {\n        return pd(this).stopped\n    },\n    set cancelBubble(value) {\n        if (!value) {\n            return\n        }\n        const data = pd(this)\n\n        data.stopped = true\n        if (typeof data.event.cancelBubble === \"boolean\") {\n            data.event.cancelBubble = true\n        }\n    },\n\n    /**\n     * The flag to indicate cancellation state.\n     * @type {boolean}\n     * @deprecated\n     */\n    get returnValue() {\n        return !pd(this).canceled\n    },\n    set returnValue(value) {\n        if (!value) {\n            setCancelFlag(pd(this))\n        }\n    },\n\n    /**\n     * Initialize this event object. But do nothing under event dispatching.\n     * @param {string} type The event type.\n     * @param {boolean} [bubbles=false] The flag to be possible to bubble up.\n     * @param {boolean} [cancelable=false] The flag to be possible to cancel.\n     * @deprecated\n     */\n    initEvent() {\n        // Do nothing.\n    },\n}\n\n// `constructor` is not enumerable.\nObject.defineProperty(Event.prototype, \"constructor\", {\n    value: Event,\n    configurable: true,\n    writable: true,\n})\n\n// Ensure `event instanceof window.Event` is `true`.\nif (typeof window !== \"undefined\" && typeof window.Event !== \"undefined\") {\n    Object.setPrototypeOf(Event.prototype, window.Event.prototype)\n\n    // Make association for wrappers.\n    wrappers.set(window.Event.prototype, Event)\n}\n\n/**\n * Get the property descriptor to redirect a given property.\n * @param {string} key Property name to define property descriptor.\n * @returns {PropertyDescriptor} The property descriptor to redirect the property.\n * @private\n */\nfunction defineRedirectDescriptor(key) {\n    return {\n        get() {\n            return pd(this).event[key]\n        },\n        set(value) {\n            pd(this).event[key] = value\n        },\n        configurable: true,\n        enumerable: true,\n    }\n}\n\n/**\n * Get the property descriptor to call a given method property.\n * @param {string} key Property name to define property descriptor.\n * @returns {PropertyDescriptor} The property descriptor to call the method property.\n * @private\n */\nfunction defineCallDescriptor(key) {\n    return {\n        value() {\n            const event = pd(this).event\n            return event[key].apply(event, arguments)\n        },\n        configurable: true,\n        enumerable: true,\n    }\n}\n\n/**\n * Define new wrapper class.\n * @param {Function} BaseEvent The base wrapper class.\n * @param {Object} proto The prototype of the original event.\n * @returns {Function} The defined wrapper class.\n * @private\n */\nfunction defineWrapper(BaseEvent, proto) {\n    const keys = Object.keys(proto)\n    if (keys.length === 0) {\n        return BaseEvent\n    }\n\n    /** CustomEvent */\n    function CustomEvent(eventTarget, event) {\n        BaseEvent.call(this, eventTarget, event)\n    }\n\n    CustomEvent.prototype = Object.create(BaseEvent.prototype, {\n        constructor: { value: CustomEvent, configurable: true, writable: true },\n    })\n\n    // Define accessors.\n    for (let i = 0; i < keys.length; ++i) {\n        const key = keys[i]\n        if (!(key in BaseEvent.prototype)) {\n            const descriptor = Object.getOwnPropertyDescriptor(proto, key)\n            const isFunc = typeof descriptor.value === \"function\"\n            Object.defineProperty(\n                CustomEvent.prototype,\n                key,\n                isFunc\n                    ? defineCallDescriptor(key)\n                    : defineRedirectDescriptor(key)\n            )\n        }\n    }\n\n    return CustomEvent\n}\n\n/**\n * Get the wrapper class of a given prototype.\n * @param {Object} proto The prototype of the original event to get its wrapper.\n * @returns {Function} The wrapper class.\n * @private\n */\nfunction getWrapper(proto) {\n    if (proto == null || proto === Object.prototype) {\n        return Event\n    }\n\n    let wrapper = wrappers.get(proto)\n    if (wrapper == null) {\n        wrapper = defineWrapper(getWrapper(Object.getPrototypeOf(proto)), proto)\n        wrappers.set(proto, wrapper)\n    }\n    return wrapper\n}\n\n/**\n * Wrap a given event to management a dispatching.\n * @param {EventTarget} eventTarget The event target of this dispatching.\n * @param {Object} event The event to wrap.\n * @returns {Event} The wrapper instance.\n * @private\n */\nexport function wrapEvent(eventTarget, event) {\n    const Wrapper = getWrapper(Object.getPrototypeOf(event))\n    return new Wrapper(eventTarget, event)\n}\n\n/**\n * Get the immediateStopped flag of a given event.\n * @param {Event} event The event to get.\n * @returns {boolean} The flag to stop propagation immediately.\n * @private\n */\nexport function isStopped(event) {\n    return pd(event).immediateStopped\n}\n\n/**\n * Set the current event phase of a given event.\n * @param {Event} event The event to set current target.\n * @param {number} eventPhase New event phase.\n * @returns {void}\n * @private\n */\nexport function setEventPhase(event, eventPhase) {\n    pd(event).eventPhase = eventPhase\n}\n\n/**\n * Set the current target of a given event.\n * @param {Event} event The event to set current target.\n * @param {EventTarget|null} currentTarget New current target.\n * @returns {void}\n * @private\n */\nexport function setCurrentTarget(event, currentTarget) {\n    pd(event).currentTarget = currentTarget\n}\n\n/**\n * Set a passive listener of a given event.\n * @param {Event} event The event to set current target.\n * @param {Function|null} passiveListener New passive listener.\n * @returns {void}\n * @private\n */\nexport function setPassiveListener(event, passiveListener) {\n    pd(event).passiveListener = passiveListener\n}\n","import {\n    isStopped,\n    setCurrentTarget,\n    setEventPhase,\n    setPassiveListener,\n    wrapEvent,\n} from \"./event.mjs\"\n\n/**\n * @typedef {object} ListenerNode\n * @property {Function} listener\n * @property {1|2|3} listenerType\n * @property {boolean} passive\n * @property {boolean} once\n * @property {ListenerNode|null} next\n * @private\n */\n\n/**\n * @type {WeakMap<object, Map<string, ListenerNode>>}\n * @private\n */\nconst listenersMap = new WeakMap()\n\n// Listener types\nconst CAPTURE = 1\nconst BUBBLE = 2\nconst ATTRIBUTE = 3\n\n/**\n * Check whether a given value is an object or not.\n * @param {any} x The value to check.\n * @returns {boolean} `true` if the value is an object.\n */\nfunction isObject(x) {\n    return x !== null && typeof x === \"object\" //eslint-disable-line no-restricted-syntax\n}\n\n/**\n * Get listeners.\n * @param {EventTarget} eventTarget The event target to get.\n * @returns {Map<string, ListenerNode>} The listeners.\n * @private\n */\nfunction getListeners(eventTarget) {\n    const listeners = listenersMap.get(eventTarget)\n    if (listeners == null) {\n        throw new TypeError(\n            \"'this' is expected an EventTarget object, but got another value.\"\n        )\n    }\n    return listeners\n}\n\n/**\n * Get the property descriptor for the event attribute of a given event.\n * @param {string} eventName The event name to get property descriptor.\n * @returns {PropertyDescriptor} The property descriptor.\n * @private\n */\nfunction defineEventAttributeDescriptor(eventName) {\n    return {\n        get() {\n            const listeners = getListeners(this)\n            let node = listeners.get(eventName)\n            while (node != null) {\n                if (node.listenerType === ATTRIBUTE) {\n                    return node.listener\n                }\n                node = node.next\n            }\n            return null\n        },\n\n        set(listener) {\n            if (typeof listener !== \"function\" && !isObject(listener)) {\n                listener = null // eslint-disable-line no-param-reassign\n            }\n            const listeners = getListeners(this)\n\n            // Traverse to the tail while removing old value.\n            let prev = null\n            let node = listeners.get(eventName)\n            while (node != null) {\n                if (node.listenerType === ATTRIBUTE) {\n                    // Remove old value.\n                    if (prev !== null) {\n                        prev.next = node.next\n                    } else if (node.next !== null) {\n                        listeners.set(eventName, node.next)\n                    } else {\n                        listeners.delete(eventName)\n                    }\n                } else {\n                    prev = node\n                }\n\n                node = node.next\n            }\n\n            // Add new value.\n            if (listener !== null) {\n                const newNode = {\n                    listener,\n                    listenerType: ATTRIBUTE,\n                    passive: false,\n                    once: false,\n                    next: null,\n                }\n                if (prev === null) {\n                    listeners.set(eventName, newNode)\n                } else {\n                    prev.next = newNode\n                }\n            }\n        },\n        configurable: true,\n        enumerable: true,\n    }\n}\n\n/**\n * Define an event attribute (e.g. `eventTarget.onclick`).\n * @param {Object} eventTargetPrototype The event target prototype to define an event attrbite.\n * @param {string} eventName The event name to define.\n * @returns {void}\n */\nfunction defineEventAttribute(eventTargetPrototype, eventName) {\n    Object.defineProperty(\n        eventTargetPrototype,\n        `on${eventName}`,\n        defineEventAttributeDescriptor(eventName)\n    )\n}\n\n/**\n * Define a custom EventTarget with event attributes.\n * @param {string[]} eventNames Event names for event attributes.\n * @returns {EventTarget} The custom EventTarget.\n * @private\n */\nfunction defineCustomEventTarget(eventNames) {\n    /** CustomEventTarget */\n    function CustomEventTarget() {\n        EventTarget.call(this)\n    }\n\n    CustomEventTarget.prototype = Object.create(EventTarget.prototype, {\n        constructor: {\n            value: CustomEventTarget,\n            configurable: true,\n            writable: true,\n        },\n    })\n\n    for (let i = 0; i < eventNames.length; ++i) {\n        defineEventAttribute(CustomEventTarget.prototype, eventNames[i])\n    }\n\n    return CustomEventTarget\n}\n\n/**\n * EventTarget.\n *\n * - This is constructor if no arguments.\n * - This is a function which returns a CustomEventTarget constructor if there are arguments.\n *\n * For example:\n *\n *     class A extends EventTarget {}\n *     class B extends EventTarget(\"message\") {}\n *     class C extends EventTarget(\"message\", \"error\") {}\n *     class D extends EventTarget([\"message\", \"error\"]) {}\n */\nfunction EventTarget() {\n    /*eslint-disable consistent-return */\n    if (this instanceof EventTarget) {\n        listenersMap.set(this, new Map())\n        return\n    }\n    if (arguments.length === 1 && Array.isArray(arguments[0])) {\n        return defineCustomEventTarget(arguments[0])\n    }\n    if (arguments.length > 0) {\n        const types = new Array(arguments.length)\n        for (let i = 0; i < arguments.length; ++i) {\n            types[i] = arguments[i]\n        }\n        return defineCustomEventTarget(types)\n    }\n    throw new TypeError(\"Cannot call a class as a function\")\n    /*eslint-enable consistent-return */\n}\n\n// Should be enumerable, but class methods are not enumerable.\nEventTarget.prototype = {\n    /**\n     * Add a given listener to this event target.\n     * @param {string} eventName The event name to add.\n     * @param {Function} listener The listener to add.\n     * @param {boolean|{capture?:boolean,passive?:boolean,once?:boolean}} [options] The options for this listener.\n     * @returns {void}\n     */\n    addEventListener(eventName, listener, options) {\n        if (listener == null) {\n            return\n        }\n        if (typeof listener !== \"function\" && !isObject(listener)) {\n            throw new TypeError(\"'listener' should be a function or an object.\")\n        }\n\n        const listeners = getListeners(this)\n        const optionsIsObj = isObject(options)\n        const capture = optionsIsObj\n            ? Boolean(options.capture)\n            : Boolean(options)\n        const listenerType = capture ? CAPTURE : BUBBLE\n        const newNode = {\n            listener,\n            listenerType,\n            passive: optionsIsObj && Boolean(options.passive),\n            once: optionsIsObj && Boolean(options.once),\n            next: null,\n        }\n\n        // Set it as the first node if the first node is null.\n        let node = listeners.get(eventName)\n        if (node === undefined) {\n            listeners.set(eventName, newNode)\n            return\n        }\n\n        // Traverse to the tail while checking duplication..\n        let prev = null\n        while (node != null) {\n            if (\n                node.listener === listener &&\n                node.listenerType === listenerType\n            ) {\n                // Should ignore duplication.\n                return\n            }\n            prev = node\n            node = node.next\n        }\n\n        // Add it.\n        prev.next = newNode\n    },\n\n    /**\n     * Remove a given listener from this event target.\n     * @param {string} eventName The event name to remove.\n     * @param {Function} listener The listener to remove.\n     * @param {boolean|{capture?:boolean,passive?:boolean,once?:boolean}} [options] The options for this listener.\n     * @returns {void}\n     */\n    removeEventListener(eventName, listener, options) {\n        if (listener == null) {\n            return\n        }\n\n        const listeners = getListeners(this)\n        const capture = isObject(options)\n            ? Boolean(options.capture)\n            : Boolean(options)\n        const listenerType = capture ? CAPTURE : BUBBLE\n\n        let prev = null\n        let node = listeners.get(eventName)\n        while (node != null) {\n            if (\n                node.listener === listener &&\n                node.listenerType === listenerType\n            ) {\n                if (prev !== null) {\n                    prev.next = node.next\n                } else if (node.next !== null) {\n                    listeners.set(eventName, node.next)\n                } else {\n                    listeners.delete(eventName)\n                }\n                return\n            }\n\n            prev = node\n            node = node.next\n        }\n    },\n\n    /**\n     * Dispatch a given event.\n     * @param {Event|{type:string}} event The event to dispatch.\n     * @returns {boolean} `false` if canceled.\n     */\n    dispatchEvent(event) {\n        if (event == null || typeof event.type !== \"string\") {\n            throw new TypeError('\"event.type\" should be a string.')\n        }\n\n        // If listeners aren't registered, terminate.\n        const listeners = getListeners(this)\n        const eventName = event.type\n        let node = listeners.get(eventName)\n        if (node == null) {\n            return true\n        }\n\n        // Since we cannot rewrite several properties, so wrap object.\n        const wrappedEvent = wrapEvent(this, event)\n\n        // This doesn't process capturing phase and bubbling phase.\n        // This isn't participating in a tree.\n        let prev = null\n        while (node != null) {\n            // Remove this listener if it's once\n            if (node.once) {\n                if (prev !== null) {\n                    prev.next = node.next\n                } else if (node.next !== null) {\n                    listeners.set(eventName, node.next)\n                } else {\n                    listeners.delete(eventName)\n                }\n            } else {\n                prev = node\n            }\n\n            // Call this listener\n            setPassiveListener(\n                wrappedEvent,\n                node.passive ? node.listener : null\n            )\n            if (typeof node.listener === \"function\") {\n                try {\n                    node.listener.call(this, wrappedEvent)\n                } catch (err) {\n                    if (\n                        typeof console !== \"undefined\" &&\n                        typeof console.error === \"function\"\n                    ) {\n                        console.error(err)\n                    }\n                }\n            } else if (\n                node.listenerType !== ATTRIBUTE &&\n                typeof node.listener.handleEvent === \"function\"\n            ) {\n                node.listener.handleEvent(wrappedEvent)\n            }\n\n            // Break if `event.stopImmediatePropagation` was called.\n            if (isStopped(wrappedEvent)) {\n                break\n            }\n\n            node = node.next\n        }\n        setPassiveListener(wrappedEvent, null)\n        setEventPhase(wrappedEvent, 0)\n        setCurrentTarget(wrappedEvent, null)\n\n        return !wrappedEvent.defaultPrevented\n    },\n}\n\n// `constructor` is not enumerable.\nObject.defineProperty(EventTarget.prototype, \"constructor\", {\n    value: EventTarget,\n    configurable: true,\n    writable: true,\n})\n\n// Ensure `eventTarget instanceof window.EventTarget` is `true`.\nif (\n    typeof window !== \"undefined\" &&\n    typeof window.EventTarget !== \"undefined\"\n) {\n    Object.setPrototypeOf(EventTarget.prototype, window.EventTarget.prototype)\n}\n\nexport { defineEventAttribute, EventTarget }\nexport default EventTarget\n","export default function _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}","import arrayLikeToArray from \"./arrayLikeToArray.js\";\nexport default function _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return arrayLikeToArray(o, minLen);\n}","import unsupportedIterableToArray from \"./unsupportedIterableToArray.js\";\nexport default function _createForOfIteratorHelper(o, allowArrayLike) {\n  var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"];\n\n  if (!it) {\n    if (Array.isArray(o) || (it = unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") {\n      if (it) o = it;\n      var i = 0;\n\n      var F = function F() {};\n\n      return {\n        s: F,\n        n: function n() {\n          if (i >= o.length) return {\n            done: true\n          };\n          return {\n            done: false,\n            value: o[i++]\n          };\n        },\n        e: function e(_e) {\n          throw _e;\n        },\n        f: F\n      };\n    }\n\n    throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n  }\n\n  var normalCompletion = true,\n      didErr = false,\n      err;\n  return {\n    s: function s() {\n      it = it.call(o);\n    },\n    n: function n() {\n      var step = it.next();\n      normalCompletion = step.done;\n      return step;\n    },\n    e: function e(_e2) {\n      didErr = true;\n      err = _e2;\n    },\n    f: function f() {\n      try {\n        if (!normalCompletion && it[\"return\"] != null) it[\"return\"]();\n      } finally {\n        if (didErr) throw err;\n      }\n    }\n  };\n}","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}","export default function _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}","function _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nexport default function _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  Object.defineProperty(Constructor, \"prototype\", {\n    writable: false\n  });\n  return Constructor;\n}","export default function _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) {\n    return typeof obj;\n  } : function (obj) {\n    return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n  }, _typeof(obj);\n}","import _typeof from \"./typeof.js\";\nexport default function _regeneratorRuntime() {\n  \"use strict\";\n  /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */\n\n  _regeneratorRuntime = function _regeneratorRuntime() {\n    return exports;\n  };\n\n  var exports = {},\n      Op = Object.prototype,\n      hasOwn = Op.hasOwnProperty,\n      $Symbol = \"function\" == typeof Symbol ? Symbol : {},\n      iteratorSymbol = $Symbol.iterator || \"@@iterator\",\n      asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\",\n      toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\";\n\n  function define(obj, key, value) {\n    return Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: !0,\n      configurable: !0,\n      writable: !0\n    }), obj[key];\n  }\n\n  try {\n    define({}, \"\");\n  } catch (err) {\n    define = function define(obj, key, value) {\n      return obj[key] = value;\n    };\n  }\n\n  function wrap(innerFn, outerFn, self, tryLocsList) {\n    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator,\n        generator = Object.create(protoGenerator.prototype),\n        context = new Context(tryLocsList || []);\n    return generator._invoke = function (innerFn, self, context) {\n      var state = \"suspendedStart\";\n      return function (method, arg) {\n        if (\"executing\" === state) throw new Error(\"Generator is already running\");\n\n        if (\"completed\" === state) {\n          if (\"throw\" === method) throw arg;\n          return doneResult();\n        }\n\n        for (context.method = method, context.arg = arg;;) {\n          var delegate = context.delegate;\n\n          if (delegate) {\n            var delegateResult = maybeInvokeDelegate(delegate, context);\n\n            if (delegateResult) {\n              if (delegateResult === ContinueSentinel) continue;\n              return delegateResult;\n            }\n          }\n\n          if (\"next\" === context.method) context.sent = context._sent = context.arg;else if (\"throw\" === context.method) {\n            if (\"suspendedStart\" === state) throw state = \"completed\", context.arg;\n            context.dispatchException(context.arg);\n          } else \"return\" === context.method && context.abrupt(\"return\", context.arg);\n          state = \"executing\";\n          var record = tryCatch(innerFn, self, context);\n\n          if (\"normal\" === record.type) {\n            if (state = context.done ? \"completed\" : \"suspendedYield\", record.arg === ContinueSentinel) continue;\n            return {\n              value: record.arg,\n              done: context.done\n            };\n          }\n\n          \"throw\" === record.type && (state = \"completed\", context.method = \"throw\", context.arg = record.arg);\n        }\n      };\n    }(innerFn, self, context), generator;\n  }\n\n  function tryCatch(fn, obj, arg) {\n    try {\n      return {\n        type: \"normal\",\n        arg: fn.call(obj, arg)\n      };\n    } catch (err) {\n      return {\n        type: \"throw\",\n        arg: err\n      };\n    }\n  }\n\n  exports.wrap = wrap;\n  var ContinueSentinel = {};\n\n  function Generator() {}\n\n  function GeneratorFunction() {}\n\n  function GeneratorFunctionPrototype() {}\n\n  var IteratorPrototype = {};\n  define(IteratorPrototype, iteratorSymbol, function () {\n    return this;\n  });\n  var getProto = Object.getPrototypeOf,\n      NativeIteratorPrototype = getProto && getProto(getProto(values([])));\n  NativeIteratorPrototype && NativeIteratorPrototype !== Op && hasOwn.call(NativeIteratorPrototype, iteratorSymbol) && (IteratorPrototype = NativeIteratorPrototype);\n  var Gp = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(IteratorPrototype);\n\n  function defineIteratorMethods(prototype) {\n    [\"next\", \"throw\", \"return\"].forEach(function (method) {\n      define(prototype, method, function (arg) {\n        return this._invoke(method, arg);\n      });\n    });\n  }\n\n  function AsyncIterator(generator, PromiseImpl) {\n    function invoke(method, arg, resolve, reject) {\n      var record = tryCatch(generator[method], generator, arg);\n\n      if (\"throw\" !== record.type) {\n        var result = record.arg,\n            value = result.value;\n        return value && \"object\" == _typeof(value) && hasOwn.call(value, \"__await\") ? PromiseImpl.resolve(value.__await).then(function (value) {\n          invoke(\"next\", value, resolve, reject);\n        }, function (err) {\n          invoke(\"throw\", err, resolve, reject);\n        }) : PromiseImpl.resolve(value).then(function (unwrapped) {\n          result.value = unwrapped, resolve(result);\n        }, function (error) {\n          return invoke(\"throw\", error, resolve, reject);\n        });\n      }\n\n      reject(record.arg);\n    }\n\n    var previousPromise;\n\n    this._invoke = function (method, arg) {\n      function callInvokeWithMethodAndArg() {\n        return new PromiseImpl(function (resolve, reject) {\n          invoke(method, arg, resolve, reject);\n        });\n      }\n\n      return previousPromise = previousPromise ? previousPromise.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg();\n    };\n  }\n\n  function maybeInvokeDelegate(delegate, context) {\n    var method = delegate.iterator[context.method];\n\n    if (undefined === method) {\n      if (context.delegate = null, \"throw\" === context.method) {\n        if (delegate.iterator[\"return\"] && (context.method = \"return\", context.arg = undefined, maybeInvokeDelegate(delegate, context), \"throw\" === context.method)) return ContinueSentinel;\n        context.method = \"throw\", context.arg = new TypeError(\"The iterator does not provide a 'throw' method\");\n      }\n\n      return ContinueSentinel;\n    }\n\n    var record = tryCatch(method, delegate.iterator, context.arg);\n    if (\"throw\" === record.type) return context.method = \"throw\", context.arg = record.arg, context.delegate = null, ContinueSentinel;\n    var info = record.arg;\n    return info ? info.done ? (context[delegate.resultName] = info.value, context.next = delegate.nextLoc, \"return\" !== context.method && (context.method = \"next\", context.arg = undefined), context.delegate = null, ContinueSentinel) : info : (context.method = \"throw\", context.arg = new TypeError(\"iterator result is not an object\"), context.delegate = null, ContinueSentinel);\n  }\n\n  function pushTryEntry(locs) {\n    var entry = {\n      tryLoc: locs[0]\n    };\n    1 in locs && (entry.catchLoc = locs[1]), 2 in locs && (entry.finallyLoc = locs[2], entry.afterLoc = locs[3]), this.tryEntries.push(entry);\n  }\n\n  function resetTryEntry(entry) {\n    var record = entry.completion || {};\n    record.type = \"normal\", delete record.arg, entry.completion = record;\n  }\n\n  function Context(tryLocsList) {\n    this.tryEntries = [{\n      tryLoc: \"root\"\n    }], tryLocsList.forEach(pushTryEntry, this), this.reset(!0);\n  }\n\n  function values(iterable) {\n    if (iterable) {\n      var iteratorMethod = iterable[iteratorSymbol];\n      if (iteratorMethod) return iteratorMethod.call(iterable);\n      if (\"function\" == typeof iterable.next) return iterable;\n\n      if (!isNaN(iterable.length)) {\n        var i = -1,\n            next = function next() {\n          for (; ++i < iterable.length;) {\n            if (hasOwn.call(iterable, i)) return next.value = iterable[i], next.done = !1, next;\n          }\n\n          return next.value = undefined, next.done = !0, next;\n        };\n\n        return next.next = next;\n      }\n    }\n\n    return {\n      next: doneResult\n    };\n  }\n\n  function doneResult() {\n    return {\n      value: undefined,\n      done: !0\n    };\n  }\n\n  return GeneratorFunction.prototype = GeneratorFunctionPrototype, define(Gp, \"constructor\", GeneratorFunctionPrototype), define(GeneratorFunctionPrototype, \"constructor\", GeneratorFunction), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, toStringTagSymbol, \"GeneratorFunction\"), exports.isGeneratorFunction = function (genFun) {\n    var ctor = \"function\" == typeof genFun && genFun.constructor;\n    return !!ctor && (ctor === GeneratorFunction || \"GeneratorFunction\" === (ctor.displayName || ctor.name));\n  }, exports.mark = function (genFun) {\n    return Object.setPrototypeOf ? Object.setPrototypeOf(genFun, GeneratorFunctionPrototype) : (genFun.__proto__ = GeneratorFunctionPrototype, define(genFun, toStringTagSymbol, \"GeneratorFunction\")), genFun.prototype = Object.create(Gp), genFun;\n  }, exports.awrap = function (arg) {\n    return {\n      __await: arg\n    };\n  }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, asyncIteratorSymbol, function () {\n    return this;\n  }), exports.AsyncIterator = AsyncIterator, exports.async = function (innerFn, outerFn, self, tryLocsList, PromiseImpl) {\n    void 0 === PromiseImpl && (PromiseImpl = Promise);\n    var iter = new AsyncIterator(wrap(innerFn, outerFn, self, tryLocsList), PromiseImpl);\n    return exports.isGeneratorFunction(outerFn) ? iter : iter.next().then(function (result) {\n      return result.done ? result.value : iter.next();\n    });\n  }, defineIteratorMethods(Gp), define(Gp, toStringTagSymbol, \"Generator\"), define(Gp, iteratorSymbol, function () {\n    return this;\n  }), define(Gp, \"toString\", function () {\n    return \"[object Generator]\";\n  }), exports.keys = function (object) {\n    var keys = [];\n\n    for (var key in object) {\n      keys.push(key);\n    }\n\n    return keys.reverse(), function next() {\n      for (; keys.length;) {\n        var key = keys.pop();\n        if (key in object) return next.value = key, next.done = !1, next;\n      }\n\n      return next.done = !0, next;\n    };\n  }, exports.values = values, Context.prototype = {\n    constructor: Context,\n    reset: function reset(skipTempReset) {\n      if (this.prev = 0, this.next = 0, this.sent = this._sent = undefined, this.done = !1, this.delegate = null, this.method = \"next\", this.arg = undefined, this.tryEntries.forEach(resetTryEntry), !skipTempReset) for (var name in this) {\n        \"t\" === name.charAt(0) && hasOwn.call(this, name) && !isNaN(+name.slice(1)) && (this[name] = undefined);\n      }\n    },\n    stop: function stop() {\n      this.done = !0;\n      var rootRecord = this.tryEntries[0].completion;\n      if (\"throw\" === rootRecord.type) throw rootRecord.arg;\n      return this.rval;\n    },\n    dispatchException: function dispatchException(exception) {\n      if (this.done) throw exception;\n      var context = this;\n\n      function handle(loc, caught) {\n        return record.type = \"throw\", record.arg = exception, context.next = loc, caught && (context.method = \"next\", context.arg = undefined), !!caught;\n      }\n\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i],\n            record = entry.completion;\n        if (\"root\" === entry.tryLoc) return handle(\"end\");\n\n        if (entry.tryLoc <= this.prev) {\n          var hasCatch = hasOwn.call(entry, \"catchLoc\"),\n              hasFinally = hasOwn.call(entry, \"finallyLoc\");\n\n          if (hasCatch && hasFinally) {\n            if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0);\n            if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc);\n          } else if (hasCatch) {\n            if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0);\n          } else {\n            if (!hasFinally) throw new Error(\"try statement without catch or finally\");\n            if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc);\n          }\n        }\n      }\n    },\n    abrupt: function abrupt(type, arg) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n\n        if (entry.tryLoc <= this.prev && hasOwn.call(entry, \"finallyLoc\") && this.prev < entry.finallyLoc) {\n          var finallyEntry = entry;\n          break;\n        }\n      }\n\n      finallyEntry && (\"break\" === type || \"continue\" === type) && finallyEntry.tryLoc <= arg && arg <= finallyEntry.finallyLoc && (finallyEntry = null);\n      var record = finallyEntry ? finallyEntry.completion : {};\n      return record.type = type, record.arg = arg, finallyEntry ? (this.method = \"next\", this.next = finallyEntry.finallyLoc, ContinueSentinel) : this.complete(record);\n    },\n    complete: function complete(record, afterLoc) {\n      if (\"throw\" === record.type) throw record.arg;\n      return \"break\" === record.type || \"continue\" === record.type ? this.next = record.arg : \"return\" === record.type ? (this.rval = this.arg = record.arg, this.method = \"return\", this.next = \"end\") : \"normal\" === record.type && afterLoc && (this.next = afterLoc), ContinueSentinel;\n    },\n    finish: function finish(finallyLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.finallyLoc === finallyLoc) return this.complete(entry.completion, entry.afterLoc), resetTryEntry(entry), ContinueSentinel;\n      }\n    },\n    \"catch\": function _catch(tryLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n\n        if (entry.tryLoc === tryLoc) {\n          var record = entry.completion;\n\n          if (\"throw\" === record.type) {\n            var thrown = record.arg;\n            resetTryEntry(entry);\n          }\n\n          return thrown;\n        }\n      }\n\n      throw new Error(\"illegal catch attempt\");\n    },\n    delegateYield: function delegateYield(iterable, resultName, nextLoc) {\n      return this.delegate = {\n        iterator: values(iterable),\n        resultName: resultName,\n        nextLoc: nextLoc\n      }, \"next\" === this.method && (this.arg = undefined), ContinueSentinel;\n    }\n  }, exports;\n}","import arrayWithHoles from \"./arrayWithHoles.js\";\nimport iterableToArrayLimit from \"./iterableToArrayLimit.js\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray.js\";\nimport nonIterableRest from \"./nonIterableRest.js\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  var _i = arr == null ? null : typeof Symbol !== \"undefined\" && arr[Symbol.iterator] || arr[\"@@iterator\"];\n\n  if (_i == null) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n\n  var _s, _e;\n\n  try {\n    for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","export default function _AwaitValue(value) {\n  this.wrapped = value;\n}","import AwaitValue from \"./AwaitValue.js\";\nexport default function _awaitAsyncGenerator(value) {\n  return new AwaitValue(value);\n}","import AwaitValue from \"./AwaitValue.js\";\nexport default function AsyncGenerator(gen) {\n  var front, back;\n\n  function send(key, arg) {\n    return new Promise(function (resolve, reject) {\n      var request = {\n        key: key,\n        arg: arg,\n        resolve: resolve,\n        reject: reject,\n        next: null\n      };\n\n      if (back) {\n        back = back.next = request;\n      } else {\n        front = back = request;\n        resume(key, arg);\n      }\n    });\n  }\n\n  function resume(key, arg) {\n    try {\n      var result = gen[key](arg);\n      var value = result.value;\n      var wrappedAwait = value instanceof AwaitValue;\n      Promise.resolve(wrappedAwait ? value.wrapped : value).then(function (arg) {\n        if (wrappedAwait) {\n          resume(key === \"return\" ? \"return\" : \"next\", arg);\n          return;\n        }\n\n        settle(result.done ? \"return\" : \"normal\", arg);\n      }, function (err) {\n        resume(\"throw\", err);\n      });\n    } catch (err) {\n      settle(\"throw\", err);\n    }\n  }\n\n  function settle(type, value) {\n    switch (type) {\n      case \"return\":\n        front.resolve({\n          value: value,\n          done: true\n        });\n        break;\n\n      case \"throw\":\n        front.reject(value);\n        break;\n\n      default:\n        front.resolve({\n          value: value,\n          done: false\n        });\n        break;\n    }\n\n    front = front.next;\n\n    if (front) {\n      resume(front.key, front.arg);\n    } else {\n      back = null;\n    }\n  }\n\n  this._invoke = send;\n\n  if (typeof gen[\"return\"] !== \"function\") {\n    this[\"return\"] = undefined;\n  }\n}\n\nAsyncGenerator.prototype[typeof Symbol === \"function\" && Symbol.asyncIterator || \"@@asyncIterator\"] = function () {\n  return this;\n};\n\nAsyncGenerator.prototype.next = function (arg) {\n  return this._invoke(\"next\", arg);\n};\n\nAsyncGenerator.prototype[\"throw\"] = function (arg) {\n  return this._invoke(\"throw\", arg);\n};\n\nAsyncGenerator.prototype[\"return\"] = function (arg) {\n  return this._invoke(\"return\", arg);\n};","import AsyncGenerator from \"./AsyncGenerator.js\";\nexport default function _wrapAsyncGenerator(fn) {\n  return function () {\n    return new AsyncGenerator(fn.apply(this, arguments));\n  };\n}","export default function _asyncIterator(iterable) {\n  var method,\n      async,\n      sync,\n      retry = 2;\n\n  for (\"undefined\" != typeof Symbol && (async = Symbol.asyncIterator, sync = Symbol.iterator); retry--;) {\n    if (async && null != (method = iterable[async])) return method.call(iterable);\n    if (sync && null != (method = iterable[sync])) return new AsyncFromSyncIterator(method.call(iterable));\n    async = \"@@asyncIterator\", sync = \"@@iterator\";\n  }\n\n  throw new TypeError(\"Object is not async iterable\");\n}\n\nfunction AsyncFromSyncIterator(s) {\n  function AsyncFromSyncIteratorContinuation(r) {\n    if (Object(r) !== r) return Promise.reject(new TypeError(r + \" is not an object.\"));\n    var done = r.done;\n    return Promise.resolve(r.value).then(function (value) {\n      return {\n        value: value,\n        done: done\n      };\n    });\n  }\n\n  return AsyncFromSyncIterator = function AsyncFromSyncIterator(s) {\n    this.s = s, this.n = s.next;\n  }, AsyncFromSyncIterator.prototype = {\n    s: null,\n    n: null,\n    next: function next() {\n      return AsyncFromSyncIteratorContinuation(this.n.apply(this.s, arguments));\n    },\n    \"return\": function _return(value) {\n      var ret = this.s[\"return\"];\n      return void 0 === ret ? Promise.resolve({\n        value: value,\n        done: !0\n      }) : AsyncFromSyncIteratorContinuation(ret.apply(this.s, arguments));\n    },\n    \"throw\": function _throw(value) {\n      var thr = this.s[\"return\"];\n      return void 0 === thr ? Promise.reject(value) : AsyncFromSyncIteratorContinuation(thr.apply(this.s, arguments));\n    }\n  }, new AsyncFromSyncIterator(s);\n}","export default function _asyncGeneratorDelegate(inner, awaitWrap) {\n  var iter = {},\n      waiting = false;\n\n  function pump(key, value) {\n    waiting = true;\n    value = new Promise(function (resolve) {\n      resolve(inner[key](value));\n    });\n    return {\n      done: false,\n      value: awaitWrap(value)\n    };\n  }\n\n  ;\n\n  iter[typeof Symbol !== \"undefined\" && Symbol.iterator || \"@@iterator\"] = function () {\n    return this;\n  };\n\n  iter.next = function (value) {\n    if (waiting) {\n      waiting = false;\n      return value;\n    }\n\n    return pump(\"next\", value);\n  };\n\n  if (typeof inner[\"throw\"] === \"function\") {\n    iter[\"throw\"] = function (value) {\n      if (waiting) {\n        waiting = false;\n        throw value;\n      }\n\n      return pump(\"throw\", value);\n    };\n  }\n\n  if (typeof inner[\"return\"] === \"function\") {\n    iter[\"return\"] = function (value) {\n      if (waiting) {\n        waiting = false;\n        return value;\n      }\n\n      return pump(\"return\", value);\n    };\n  }\n\n  return iter;\n}","/// @file\n/// @addtogroup flatbuffers_javascript_api\n/// @{\n/// @cond FLATBUFFERS_INTERNAL\n\n/**\n * @fileoverview\n *\n * Need to suppress 'global this' error so the Node.js export line doesn't cause\n * closure compile to error out.\n * @suppress {globalThis}\n */\n\n/**\n * @const\n * @namespace\n */\nvar flatbuffers = {};\n\n/**\n * @typedef {number}\n */\nflatbuffers.Offset;\n\n/**\n * @typedef {{\n *   bb: flatbuffers.ByteBuffer,\n *   bb_pos: number\n * }}\n */\nflatbuffers.Table;\n\n/**\n * @type {number}\n * @const\n */\nflatbuffers.SIZEOF_SHORT = 2;\n\n/**\n * @type {number}\n * @const\n */\nflatbuffers.SIZEOF_INT = 4;\n\n/**\n * @type {number}\n * @const\n */\nflatbuffers.FILE_IDENTIFIER_LENGTH = 4;\n\n/**\n * @enum {number}\n */\nflatbuffers.Encoding = {\n  UTF8_BYTES: 1,\n  UTF16_STRING: 2\n};\n\n/**\n * @type {Int32Array}\n * @const\n */\nflatbuffers.int32 = new Int32Array(2);\n\n/**\n * @type {Float32Array}\n * @const\n */\nflatbuffers.float32 = new Float32Array(flatbuffers.int32.buffer);\n\n/**\n * @type {Float64Array}\n * @const\n */\nflatbuffers.float64 = new Float64Array(flatbuffers.int32.buffer);\n\n/**\n * @type {boolean}\n * @const\n */\nflatbuffers.isLittleEndian = new Uint16Array(new Uint8Array([1, 0]).buffer)[0] === 1;\n\n////////////////////////////////////////////////////////////////////////////////\n\n/**\n * @constructor\n * @param {number} low\n * @param {number} high\n */\nflatbuffers.Long = function(low, high) {\n  /**\n   * @type {number}\n   * @const\n   */\n  this.low = low | 0;\n\n  /**\n   * @type {number}\n   * @const\n   */\n  this.high = high | 0;\n};\n\n/**\n * @param {number} low\n * @param {number} high\n * @returns {flatbuffers.Long}\n */\nflatbuffers.Long.create = function(low, high) {\n  // Special-case zero to avoid GC overhead for default values\n  return low == 0 && high == 0 ? flatbuffers.Long.ZERO : new flatbuffers.Long(low, high);\n};\n\n/**\n * @returns {number}\n */\nflatbuffers.Long.prototype.toFloat64 = function() {\n  return (this.low >>> 0) + this.high * 0x100000000;\n};\n\n/**\n * @param {flatbuffers.Long} other\n * @returns {boolean}\n */\nflatbuffers.Long.prototype.equals = function(other) {\n  return this.low == other.low && this.high == other.high;\n};\n\n/**\n * @type {flatbuffers.Long}\n * @const\n */\nflatbuffers.Long.ZERO = new flatbuffers.Long(0, 0);\n\n/// @endcond\n////////////////////////////////////////////////////////////////////////////////\n/**\n * Create a FlatBufferBuilder.\n *\n * @constructor\n * @param {number=} opt_initial_size\n */\nflatbuffers.Builder = function(opt_initial_size) {\n  if (!opt_initial_size) {\n    var initial_size = 1024;\n  } else {\n    var initial_size = opt_initial_size;\n  }\n\n  /**\n   * @type {flatbuffers.ByteBuffer}\n   * @private\n   */\n  this.bb = flatbuffers.ByteBuffer.allocate(initial_size);\n\n  /**\n   * Remaining space in the ByteBuffer.\n   *\n   * @type {number}\n   * @private\n   */\n  this.space = initial_size;\n\n  /**\n   * Minimum alignment encountered so far.\n   *\n   * @type {number}\n   * @private\n   */\n  this.minalign = 1;\n\n  /**\n   * The vtable for the current table.\n   *\n   * @type {Array.<number>}\n   * @private\n   */\n  this.vtable = null;\n\n  /**\n   * The amount of fields we're actually using.\n   *\n   * @type {number}\n   * @private\n   */\n  this.vtable_in_use = 0;\n\n  /**\n   * Whether we are currently serializing a table.\n   *\n   * @type {boolean}\n   * @private\n   */\n  this.isNested = false;\n\n  /**\n   * Starting offset of the current struct/table.\n   *\n   * @type {number}\n   * @private\n   */\n  this.object_start = 0;\n\n  /**\n   * List of offsets of all vtables.\n   *\n   * @type {Array.<number>}\n   * @private\n   */\n  this.vtables = [];\n\n  /**\n   * For the current vector being built.\n   *\n   * @type {number}\n   * @private\n   */\n  this.vector_num_elems = 0;\n\n  /**\n   * False omits default values from the serialized data\n   *\n   * @type {boolean}\n   * @private\n   */\n  this.force_defaults = false;\n};\n\nflatbuffers.Builder.prototype.clear = function() {\n  this.bb.clear();\n  this.space = this.bb.capacity();\n  this.minalign = 1;\n  this.vtable = null;\n  this.vtable_in_use = 0;\n  this.isNested = false;\n  this.object_start = 0;\n  this.vtables = [];\n  this.vector_num_elems = 0;\n  this.force_defaults = false;\n};\n\n/**\n * In order to save space, fields that are set to their default value\n * don't get serialized into the buffer. Forcing defaults provides a\n * way to manually disable this optimization.\n *\n * @param {boolean} forceDefaults true always serializes default values\n */\nflatbuffers.Builder.prototype.forceDefaults = function(forceDefaults) {\n  this.force_defaults = forceDefaults;\n};\n\n/**\n * Get the ByteBuffer representing the FlatBuffer. Only call this after you've\n * called finish(). The actual data starts at the ByteBuffer's current position,\n * not necessarily at 0.\n *\n * @returns {flatbuffers.ByteBuffer}\n */\nflatbuffers.Builder.prototype.dataBuffer = function() {\n  return this.bb;\n};\n\n/**\n * Get the bytes representing the FlatBuffer. Only call this after you've\n * called finish().\n *\n * @returns {Uint8Array}\n */\nflatbuffers.Builder.prototype.asUint8Array = function() {\n  return this.bb.bytes().subarray(this.bb.position(), this.bb.position() + this.offset());\n};\n\n/// @cond FLATBUFFERS_INTERNAL\n/**\n * Prepare to write an element of `size` after `additional_bytes` have been\n * written, e.g. if you write a string, you need to align such the int length\n * field is aligned to 4 bytes, and the string data follows it directly. If all\n * you need to do is alignment, `additional_bytes` will be 0.\n *\n * @param {number} size This is the of the new element to write\n * @param {number} additional_bytes The padding size\n */\nflatbuffers.Builder.prototype.prep = function(size, additional_bytes) {\n  // Track the biggest thing we've ever aligned to.\n  if (size > this.minalign) {\n    this.minalign = size;\n  }\n\n  // Find the amount of alignment needed such that `size` is properly\n  // aligned after `additional_bytes`\n  var align_size = ((~(this.bb.capacity() - this.space + additional_bytes)) + 1) & (size - 1);\n\n  // Reallocate the buffer if needed.\n  while (this.space < align_size + size + additional_bytes) {\n    var old_buf_size = this.bb.capacity();\n    this.bb = flatbuffers.Builder.growByteBuffer(this.bb);\n    this.space += this.bb.capacity() - old_buf_size;\n  }\n\n  this.pad(align_size);\n};\n\n/**\n * @param {number} byte_size\n */\nflatbuffers.Builder.prototype.pad = function(byte_size) {\n  for (var i = 0; i < byte_size; i++) {\n    this.bb.writeInt8(--this.space, 0);\n  }\n};\n\n/**\n * @param {number} value\n */\nflatbuffers.Builder.prototype.writeInt8 = function(value) {\n  this.bb.writeInt8(this.space -= 1, value);\n};\n\n/**\n * @param {number} value\n */\nflatbuffers.Builder.prototype.writeInt16 = function(value) {\n  this.bb.writeInt16(this.space -= 2, value);\n};\n\n/**\n * @param {number} value\n */\nflatbuffers.Builder.prototype.writeInt32 = function(value) {\n  this.bb.writeInt32(this.space -= 4, value);\n};\n\n/**\n * @param {flatbuffers.Long} value\n */\nflatbuffers.Builder.prototype.writeInt64 = function(value) {\n  this.bb.writeInt64(this.space -= 8, value);\n};\n\n/**\n * @param {number} value\n */\nflatbuffers.Builder.prototype.writeFloat32 = function(value) {\n  this.bb.writeFloat32(this.space -= 4, value);\n};\n\n/**\n * @param {number} value\n */\nflatbuffers.Builder.prototype.writeFloat64 = function(value) {\n  this.bb.writeFloat64(this.space -= 8, value);\n};\n/// @endcond\n\n/**\n * Add an `int8` to the buffer, properly aligned, and grows the buffer (if necessary).\n * @param {number} value The `int8` to add the the buffer.\n */\nflatbuffers.Builder.prototype.addInt8 = function(value) {\n  this.prep(1, 0);\n  this.writeInt8(value);\n};\n\n/**\n * Add an `int16` to the buffer, properly aligned, and grows the buffer (if necessary).\n * @param {number} value The `int16` to add the the buffer.\n */\nflatbuffers.Builder.prototype.addInt16 = function(value) {\n  this.prep(2, 0);\n  this.writeInt16(value);\n};\n\n/**\n * Add an `int32` to the buffer, properly aligned, and grows the buffer (if necessary).\n * @param {number} value The `int32` to add the the buffer.\n */\nflatbuffers.Builder.prototype.addInt32 = function(value) {\n  this.prep(4, 0);\n  this.writeInt32(value);\n};\n\n/**\n * Add an `int64` to the buffer, properly aligned, and grows the buffer (if necessary).\n * @param {flatbuffers.Long} value The `int64` to add the the buffer.\n */\nflatbuffers.Builder.prototype.addInt64 = function(value) {\n  this.prep(8, 0);\n  this.writeInt64(value);\n};\n\n/**\n * Add a `float32` to the buffer, properly aligned, and grows the buffer (if necessary).\n * @param {number} value The `float32` to add the the buffer.\n */\nflatbuffers.Builder.prototype.addFloat32 = function(value) {\n  this.prep(4, 0);\n  this.writeFloat32(value);\n};\n\n/**\n * Add a `float64` to the buffer, properly aligned, and grows the buffer (if necessary).\n * @param {number} value The `float64` to add the the buffer.\n */\nflatbuffers.Builder.prototype.addFloat64 = function(value) {\n  this.prep(8, 0);\n  this.writeFloat64(value);\n};\n\n/// @cond FLATBUFFERS_INTERNAL\n/**\n * @param {number} voffset\n * @param {number} value\n * @param {number} defaultValue\n */\nflatbuffers.Builder.prototype.addFieldInt8 = function(voffset, value, defaultValue) {\n  if (this.force_defaults || value != defaultValue) {\n    this.addInt8(value);\n    this.slot(voffset);\n  }\n};\n\n/**\n * @param {number} voffset\n * @param {number} value\n * @param {number} defaultValue\n */\nflatbuffers.Builder.prototype.addFieldInt16 = function(voffset, value, defaultValue) {\n  if (this.force_defaults || value != defaultValue) {\n    this.addInt16(value);\n    this.slot(voffset);\n  }\n};\n\n/**\n * @param {number} voffset\n * @param {number} value\n * @param {number} defaultValue\n */\nflatbuffers.Builder.prototype.addFieldInt32 = function(voffset, value, defaultValue) {\n  if (this.force_defaults || value != defaultValue) {\n    this.addInt32(value);\n    this.slot(voffset);\n  }\n};\n\n/**\n * @param {number} voffset\n * @param {flatbuffers.Long} value\n * @param {flatbuffers.Long} defaultValue\n */\nflatbuffers.Builder.prototype.addFieldInt64 = function(voffset, value, defaultValue) {\n  if (this.force_defaults || !value.equals(defaultValue)) {\n    this.addInt64(value);\n    this.slot(voffset);\n  }\n};\n\n/**\n * @param {number} voffset\n * @param {number} value\n * @param {number} defaultValue\n */\nflatbuffers.Builder.prototype.addFieldFloat32 = function(voffset, value, defaultValue) {\n  if (this.force_defaults || value != defaultValue) {\n    this.addFloat32(value);\n    this.slot(voffset);\n  }\n};\n\n/**\n * @param {number} voffset\n * @param {number} value\n * @param {number} defaultValue\n */\nflatbuffers.Builder.prototype.addFieldFloat64 = function(voffset, value, defaultValue) {\n  if (this.force_defaults || value != defaultValue) {\n    this.addFloat64(value);\n    this.slot(voffset);\n  }\n};\n\n/**\n * @param {number} voffset\n * @param {flatbuffers.Offset} value\n * @param {flatbuffers.Offset} defaultValue\n */\nflatbuffers.Builder.prototype.addFieldOffset = function(voffset, value, defaultValue) {\n  if (this.force_defaults || value != defaultValue) {\n    this.addOffset(value);\n    this.slot(voffset);\n  }\n};\n\n/**\n * Structs are stored inline, so nothing additional is being added. `d` is always 0.\n *\n * @param {number} voffset\n * @param {flatbuffers.Offset} value\n * @param {flatbuffers.Offset} defaultValue\n */\nflatbuffers.Builder.prototype.addFieldStruct = function(voffset, value, defaultValue) {\n  if (value != defaultValue) {\n    this.nested(value);\n    this.slot(voffset);\n  }\n};\n\n/**\n * Structures are always stored inline, they need to be created right\n * where they're used.  You'll get this assertion failure if you\n * created it elsewhere.\n *\n * @param {flatbuffers.Offset} obj The offset of the created object\n */\nflatbuffers.Builder.prototype.nested = function(obj) {\n  if (obj != this.offset()) {\n    throw new Error('FlatBuffers: struct must be serialized inline.');\n  }\n};\n\n/**\n * Should not be creating any other object, string or vector\n * while an object is being constructed\n */\nflatbuffers.Builder.prototype.notNested = function() {\n  if (this.isNested) {\n    throw new Error('FlatBuffers: object serialization must not be nested.');\n  }\n};\n\n/**\n * Set the current vtable at `voffset` to the current location in the buffer.\n *\n * @param {number} voffset\n */\nflatbuffers.Builder.prototype.slot = function(voffset) {\n  this.vtable[voffset] = this.offset();\n};\n\n/**\n * @returns {flatbuffers.Offset} Offset relative to the end of the buffer.\n */\nflatbuffers.Builder.prototype.offset = function() {\n  return this.bb.capacity() - this.space;\n};\n\n/**\n * Doubles the size of the backing ByteBuffer and copies the old data towards\n * the end of the new buffer (since we build the buffer backwards).\n *\n * @param {flatbuffers.ByteBuffer} bb The current buffer with the existing data\n * @returns {flatbuffers.ByteBuffer} A new byte buffer with the old data copied\n * to it. The data is located at the end of the buffer.\n *\n * uint8Array.set() formally takes {Array<number>|ArrayBufferView}, so to pass\n * it a uint8Array we need to suppress the type check:\n * @suppress {checkTypes}\n */\nflatbuffers.Builder.growByteBuffer = function(bb) {\n  var old_buf_size = bb.capacity();\n\n  // Ensure we don't grow beyond what fits in an int.\n  if (old_buf_size & 0xC0000000) {\n    throw new Error('FlatBuffers: cannot grow buffer beyond 2 gigabytes.');\n  }\n\n  var new_buf_size = old_buf_size << 1;\n  var nbb = flatbuffers.ByteBuffer.allocate(new_buf_size);\n  nbb.setPosition(new_buf_size - old_buf_size);\n  nbb.bytes().set(bb.bytes(), new_buf_size - old_buf_size);\n  return nbb;\n};\n/// @endcond\n\n/**\n * Adds on offset, relative to where it will be written.\n *\n * @param {flatbuffers.Offset} offset The offset to add.\n */\nflatbuffers.Builder.prototype.addOffset = function(offset) {\n  this.prep(flatbuffers.SIZEOF_INT, 0); // Ensure alignment is already done.\n  this.writeInt32(this.offset() - offset + flatbuffers.SIZEOF_INT);\n};\n\n/// @cond FLATBUFFERS_INTERNAL\n/**\n * Start encoding a new object in the buffer.  Users will not usually need to\n * call this directly. The FlatBuffers compiler will generate helper methods\n * that call this method internally.\n *\n * @param {number} numfields\n */\nflatbuffers.Builder.prototype.startObject = function(numfields) {\n  this.notNested();\n  if (this.vtable == null) {\n    this.vtable = [];\n  }\n  this.vtable_in_use = numfields;\n  for (var i = 0; i < numfields; i++) {\n    this.vtable[i] = 0; // This will push additional elements as needed\n  }\n  this.isNested = true;\n  this.object_start = this.offset();\n};\n\n/**\n * Finish off writing the object that is under construction.\n *\n * @returns {flatbuffers.Offset} The offset to the object inside `dataBuffer`\n */\nflatbuffers.Builder.prototype.endObject = function() {\n  if (this.vtable == null || !this.isNested) {\n    throw new Error('FlatBuffers: endObject called without startObject');\n  }\n\n  this.addInt32(0);\n  var vtableloc = this.offset();\n\n  // Trim trailing zeroes.\n  var i = this.vtable_in_use - 1;\n  for (; i >= 0 && this.vtable[i] == 0; i--) {}\n  var trimmed_size = i + 1;\n\n  // Write out the current vtable.\n  for (; i >= 0; i--) {\n    // Offset relative to the start of the table.\n    this.addInt16(this.vtable[i] != 0 ? vtableloc - this.vtable[i] : 0);\n  }\n\n  var standard_fields = 2; // The fields below:\n  this.addInt16(vtableloc - this.object_start);\n  var len = (trimmed_size + standard_fields) * flatbuffers.SIZEOF_SHORT;\n  this.addInt16(len);\n\n  // Search for an existing vtable that matches the current one.\n  var existing_vtable = 0;\n  var vt1 = this.space;\nouter_loop:\n  for (i = 0; i < this.vtables.length; i++) {\n    var vt2 = this.bb.capacity() - this.vtables[i];\n    if (len == this.bb.readInt16(vt2)) {\n      for (var j = flatbuffers.SIZEOF_SHORT; j < len; j += flatbuffers.SIZEOF_SHORT) {\n        if (this.bb.readInt16(vt1 + j) != this.bb.readInt16(vt2 + j)) {\n          continue outer_loop;\n        }\n      }\n      existing_vtable = this.vtables[i];\n      break;\n    }\n  }\n\n  if (existing_vtable) {\n    // Found a match:\n    // Remove the current vtable.\n    this.space = this.bb.capacity() - vtableloc;\n\n    // Point table to existing vtable.\n    this.bb.writeInt32(this.space, existing_vtable - vtableloc);\n  } else {\n    // No match:\n    // Add the location of the current vtable to the list of vtables.\n    this.vtables.push(this.offset());\n\n    // Point table to current vtable.\n    this.bb.writeInt32(this.bb.capacity() - vtableloc, this.offset() - vtableloc);\n  }\n\n  this.isNested = false;\n  return vtableloc;\n};\n/// @endcond\n\n/**\n * Finalize a buffer, poiting to the given `root_table`.\n *\n * @param {flatbuffers.Offset} root_table\n * @param {string=} opt_file_identifier\n */\nflatbuffers.Builder.prototype.finish = function(root_table, opt_file_identifier) {\n  if (opt_file_identifier) {\n    var file_identifier = opt_file_identifier;\n    this.prep(this.minalign, flatbuffers.SIZEOF_INT +\n      flatbuffers.FILE_IDENTIFIER_LENGTH);\n    if (file_identifier.length != flatbuffers.FILE_IDENTIFIER_LENGTH) {\n      throw new Error('FlatBuffers: file identifier must be length ' +\n        flatbuffers.FILE_IDENTIFIER_LENGTH);\n    }\n    for (var i = flatbuffers.FILE_IDENTIFIER_LENGTH - 1; i >= 0; i--) {\n      this.writeInt8(file_identifier.charCodeAt(i));\n    }\n  }\n  this.prep(this.minalign, flatbuffers.SIZEOF_INT);\n  this.addOffset(root_table);\n  this.bb.setPosition(this.space);\n};\n\n/// @cond FLATBUFFERS_INTERNAL\n/**\n * This checks a required field has been set in a given table that has\n * just been constructed.\n *\n * @param {flatbuffers.Offset} table\n * @param {number} field\n */\nflatbuffers.Builder.prototype.requiredField = function(table, field) {\n  var table_start = this.bb.capacity() - table;\n  var vtable_start = table_start - this.bb.readInt32(table_start);\n  var ok = this.bb.readInt16(vtable_start + field) != 0;\n\n  // If this fails, the caller will show what field needs to be set.\n  if (!ok) {\n    throw new Error('FlatBuffers: field ' + field + ' must be set');\n  }\n};\n\n/**\n * Start a new array/vector of objects.  Users usually will not call\n * this directly. The FlatBuffers compiler will create a start/end\n * method for vector types in generated code.\n *\n * @param {number} elem_size The size of each element in the array\n * @param {number} num_elems The number of elements in the array\n * @param {number} alignment The alignment of the array\n */\nflatbuffers.Builder.prototype.startVector = function(elem_size, num_elems, alignment) {\n  this.notNested();\n  this.vector_num_elems = num_elems;\n  this.prep(flatbuffers.SIZEOF_INT, elem_size * num_elems);\n  this.prep(alignment, elem_size * num_elems); // Just in case alignment > int.\n};\n\n/**\n * Finish off the creation of an array and all its elements. The array must be\n * created with `startVector`.\n *\n * @returns {flatbuffers.Offset} The offset at which the newly created array\n * starts.\n */\nflatbuffers.Builder.prototype.endVector = function() {\n  this.writeInt32(this.vector_num_elems);\n  return this.offset();\n};\n/// @endcond\n\n/**\n * Encode the string `s` in the buffer using UTF-8. If a Uint8Array is passed\n * instead of a string, it is assumed to contain valid UTF-8 encoded data.\n *\n * @param {string|Uint8Array} s The string to encode\n * @return {flatbuffers.Offset} The offset in the buffer where the encoded string starts\n */\nflatbuffers.Builder.prototype.createString = function(s) {\n  if (s instanceof Uint8Array) {\n    var utf8 = s;\n  } else {\n    var utf8 = [];\n    var i = 0;\n\n    while (i < s.length) {\n      var codePoint;\n\n      // Decode UTF-16\n      var a = s.charCodeAt(i++);\n      if (a < 0xD800 || a >= 0xDC00) {\n        codePoint = a;\n      } else {\n        var b = s.charCodeAt(i++);\n        codePoint = (a << 10) + b + (0x10000 - (0xD800 << 10) - 0xDC00);\n      }\n\n      // Encode UTF-8\n      if (codePoint < 0x80) {\n        utf8.push(codePoint);\n      } else {\n        if (codePoint < 0x800) {\n          utf8.push(((codePoint >> 6) & 0x1F) | 0xC0);\n        } else {\n          if (codePoint < 0x10000) {\n            utf8.push(((codePoint >> 12) & 0x0F) | 0xE0);\n          } else {\n            utf8.push(\n              ((codePoint >> 18) & 0x07) | 0xF0,\n              ((codePoint >> 12) & 0x3F) | 0x80);\n          }\n          utf8.push(((codePoint >> 6) & 0x3F) | 0x80);\n        }\n        utf8.push((codePoint & 0x3F) | 0x80);\n      }\n    }\n  }\n\n  this.addInt8(0);\n  this.startVector(1, utf8.length, 1);\n  this.bb.setPosition(this.space -= utf8.length);\n  for (var i = 0, offset = this.space, bytes = this.bb.bytes(); i < utf8.length; i++) {\n    bytes[offset++] = utf8[i];\n  }\n  return this.endVector();\n};\n\n/**\n * A helper function to avoid generated code depending on this file directly.\n *\n * @param {number} low\n * @param {number} high\n * @returns {flatbuffers.Long}\n */\nflatbuffers.Builder.prototype.createLong = function(low, high) {\n  return flatbuffers.Long.create(low, high);\n};\n////////////////////////////////////////////////////////////////////////////////\n/// @cond FLATBUFFERS_INTERNAL\n/**\n * Create a new ByteBuffer with a given array of bytes (`Uint8Array`).\n *\n * @constructor\n * @param {Uint8Array} bytes\n */\nflatbuffers.ByteBuffer = function(bytes) {\n  /**\n   * @type {Uint8Array}\n   * @private\n   */\n  this.bytes_ = bytes;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.position_ = 0;\n};\n\n/**\n * Create and allocate a new ByteBuffer with a given size.\n *\n * @param {number} byte_size\n * @returns {flatbuffers.ByteBuffer}\n */\nflatbuffers.ByteBuffer.allocate = function(byte_size) {\n  return new flatbuffers.ByteBuffer(new Uint8Array(byte_size));\n};\n\nflatbuffers.ByteBuffer.prototype.clear = function() {\n  this.position_ = 0;\n};\n\n/**\n * Get the underlying `Uint8Array`.\n *\n * @returns {Uint8Array}\n */\nflatbuffers.ByteBuffer.prototype.bytes = function() {\n  return this.bytes_;\n};\n\n/**\n * Get the buffer's position.\n *\n * @returns {number}\n */\nflatbuffers.ByteBuffer.prototype.position = function() {\n  return this.position_;\n};\n\n/**\n * Set the buffer's position.\n *\n * @param {number} position\n */\nflatbuffers.ByteBuffer.prototype.setPosition = function(position) {\n  this.position_ = position;\n};\n\n/**\n * Get the buffer's capacity.\n *\n * @returns {number}\n */\nflatbuffers.ByteBuffer.prototype.capacity = function() {\n  return this.bytes_.length;\n};\n\n/**\n * @param {number} offset\n * @returns {number}\n */\nflatbuffers.ByteBuffer.prototype.readInt8 = function(offset) {\n  return this.readUint8(offset) << 24 >> 24;\n};\n\n/**\n * @param {number} offset\n * @returns {number}\n */\nflatbuffers.ByteBuffer.prototype.readUint8 = function(offset) {\n  return this.bytes_[offset];\n};\n\n/**\n * @param {number} offset\n * @returns {number}\n */\nflatbuffers.ByteBuffer.prototype.readInt16 = function(offset) {\n  return this.readUint16(offset) << 16 >> 16;\n};\n\n/**\n * @param {number} offset\n * @returns {number}\n */\nflatbuffers.ByteBuffer.prototype.readUint16 = function(offset) {\n  return this.bytes_[offset] | this.bytes_[offset + 1] << 8;\n};\n\n/**\n * @param {number} offset\n * @returns {number}\n */\nflatbuffers.ByteBuffer.prototype.readInt32 = function(offset) {\n  return this.bytes_[offset] | this.bytes_[offset + 1] << 8 | this.bytes_[offset + 2] << 16 | this.bytes_[offset + 3] << 24;\n};\n\n/**\n * @param {number} offset\n * @returns {number}\n */\nflatbuffers.ByteBuffer.prototype.readUint32 = function(offset) {\n  return this.readInt32(offset) >>> 0;\n};\n\n/**\n * @param {number} offset\n * @returns {flatbuffers.Long}\n */\nflatbuffers.ByteBuffer.prototype.readInt64 = function(offset) {\n  return new flatbuffers.Long(this.readInt32(offset), this.readInt32(offset + 4));\n};\n\n/**\n * @param {number} offset\n * @returns {flatbuffers.Long}\n */\nflatbuffers.ByteBuffer.prototype.readUint64 = function(offset) {\n  return new flatbuffers.Long(this.readUint32(offset), this.readUint32(offset + 4));\n};\n\n/**\n * @param {number} offset\n * @returns {number}\n */\nflatbuffers.ByteBuffer.prototype.readFloat32 = function(offset) {\n  flatbuffers.int32[0] = this.readInt32(offset);\n  return flatbuffers.float32[0];\n};\n\n/**\n * @param {number} offset\n * @returns {number}\n */\nflatbuffers.ByteBuffer.prototype.readFloat64 = function(offset) {\n  flatbuffers.int32[flatbuffers.isLittleEndian ? 0 : 1] = this.readInt32(offset);\n  flatbuffers.int32[flatbuffers.isLittleEndian ? 1 : 0] = this.readInt32(offset + 4);\n  return flatbuffers.float64[0];\n};\n\n/**\n * @param {number} offset\n * @param {number|boolean} value\n */\nflatbuffers.ByteBuffer.prototype.writeInt8 = function(offset, value) {\n  this.bytes_[offset] = /** @type {number} */(value);\n};\n\n/**\n * @param {number} offset\n * @param {number} value\n */\nflatbuffers.ByteBuffer.prototype.writeUint8 = function(offset, value) {\n  this.bytes_[offset] = value;\n};\n\n/**\n * @param {number} offset\n * @param {number} value\n */\nflatbuffers.ByteBuffer.prototype.writeInt16 = function(offset, value) {\n  this.bytes_[offset] = value;\n  this.bytes_[offset + 1] = value >> 8;\n};\n\n/**\n * @param {number} offset\n * @param {number} value\n */\nflatbuffers.ByteBuffer.prototype.writeUint16 = function(offset, value) {\n    this.bytes_[offset] = value;\n    this.bytes_[offset + 1] = value >> 8;\n};\n\n/**\n * @param {number} offset\n * @param {number} value\n */\nflatbuffers.ByteBuffer.prototype.writeInt32 = function(offset, value) {\n  this.bytes_[offset] = value;\n  this.bytes_[offset + 1] = value >> 8;\n  this.bytes_[offset + 2] = value >> 16;\n  this.bytes_[offset + 3] = value >> 24;\n};\n\n/**\n * @param {number} offset\n * @param {number} value\n */\nflatbuffers.ByteBuffer.prototype.writeUint32 = function(offset, value) {\n    this.bytes_[offset] = value;\n    this.bytes_[offset + 1] = value >> 8;\n    this.bytes_[offset + 2] = value >> 16;\n    this.bytes_[offset + 3] = value >> 24;\n};\n\n/**\n * @param {number} offset\n * @param {flatbuffers.Long} value\n */\nflatbuffers.ByteBuffer.prototype.writeInt64 = function(offset, value) {\n  this.writeInt32(offset, value.low);\n  this.writeInt32(offset + 4, value.high);\n};\n\n/**\n * @param {number} offset\n * @param {flatbuffers.Long} value\n */\nflatbuffers.ByteBuffer.prototype.writeUint64 = function(offset, value) {\n    this.writeUint32(offset, value.low);\n    this.writeUint32(offset + 4, value.high);\n};\n\n/**\n * @param {number} offset\n * @param {number} value\n */\nflatbuffers.ByteBuffer.prototype.writeFloat32 = function(offset, value) {\n  flatbuffers.float32[0] = value;\n  this.writeInt32(offset, flatbuffers.int32[0]);\n};\n\n/**\n * @param {number} offset\n * @param {number} value\n */\nflatbuffers.ByteBuffer.prototype.writeFloat64 = function(offset, value) {\n  flatbuffers.float64[0] = value;\n  this.writeInt32(offset, flatbuffers.int32[flatbuffers.isLittleEndian ? 0 : 1]);\n  this.writeInt32(offset + 4, flatbuffers.int32[flatbuffers.isLittleEndian ? 1 : 0]);\n};\n\n/**\n * Return the file identifier.   Behavior is undefined for FlatBuffers whose\n * schema does not include a file_identifier (likely points at padding or the\n * start of a the root vtable).\n * @returns {string}\n */\nflatbuffers.ByteBuffer.prototype.getBufferIdentifier = function() {\n  if (this.bytes_.length < this.position_ + flatbuffers.SIZEOF_INT +\n      flatbuffers.FILE_IDENTIFIER_LENGTH) {\n    throw new Error(\n        'FlatBuffers: ByteBuffer is too short to contain an identifier.');\n  }\n  var result = \"\";\n  for (var i = 0; i < flatbuffers.FILE_IDENTIFIER_LENGTH; i++) {\n    result += String.fromCharCode(\n        this.readInt8(this.position_ + flatbuffers.SIZEOF_INT + i));\n  }\n  return result;\n};\n\n/**\n * Look up a field in the vtable, return an offset into the object, or 0 if the\n * field is not present.\n *\n * @param {number} bb_pos\n * @param {number} vtable_offset\n * @returns {number}\n */\nflatbuffers.ByteBuffer.prototype.__offset = function(bb_pos, vtable_offset) {\n  var vtable = bb_pos - this.readInt32(bb_pos);\n  return vtable_offset < this.readInt16(vtable) ? this.readInt16(vtable + vtable_offset) : 0;\n};\n\n/**\n * Initialize any Table-derived type to point to the union at the given offset.\n *\n * @param {flatbuffers.Table} t\n * @param {number} offset\n * @returns {flatbuffers.Table}\n */\nflatbuffers.ByteBuffer.prototype.__union = function(t, offset) {\n  t.bb_pos = offset + this.readInt32(offset);\n  t.bb = this;\n  return t;\n};\n\n/**\n * Create a JavaScript string from UTF-8 data stored inside the FlatBuffer.\n * This allocates a new string and converts to wide chars upon each access.\n *\n * To avoid the conversion to UTF-16, pass flatbuffers.Encoding.UTF8_BYTES as\n * the \"optionalEncoding\" argument. This is useful for avoiding conversion to\n * and from UTF-16 when the data will just be packaged back up in another\n * FlatBuffer later on.\n *\n * @param {number} offset\n * @param {flatbuffers.Encoding=} opt_encoding Defaults to UTF16_STRING\n * @returns {string|Uint8Array}\n */\nflatbuffers.ByteBuffer.prototype.__string = function(offset, opt_encoding) {\n  offset += this.readInt32(offset);\n\n  var length = this.readInt32(offset);\n  var result = '';\n  var i = 0;\n\n  offset += flatbuffers.SIZEOF_INT;\n\n  if (opt_encoding === flatbuffers.Encoding.UTF8_BYTES) {\n    return this.bytes_.subarray(offset, offset + length);\n  }\n\n  while (i < length) {\n    var codePoint;\n\n    // Decode UTF-8\n    var a = this.readUint8(offset + i++);\n    if (a < 0xC0) {\n      codePoint = a;\n    } else {\n      var b = this.readUint8(offset + i++);\n      if (a < 0xE0) {\n        codePoint =\n          ((a & 0x1F) << 6) |\n          (b & 0x3F);\n      } else {\n        var c = this.readUint8(offset + i++);\n        if (a < 0xF0) {\n          codePoint =\n            ((a & 0x0F) << 12) |\n            ((b & 0x3F) << 6) |\n            (c & 0x3F);\n        } else {\n          var d = this.readUint8(offset + i++);\n          codePoint =\n            ((a & 0x07) << 18) |\n            ((b & 0x3F) << 12) |\n            ((c & 0x3F) << 6) |\n            (d & 0x3F);\n        }\n      }\n    }\n\n    // Encode UTF-16\n    if (codePoint < 0x10000) {\n      result += String.fromCharCode(codePoint);\n    } else {\n      codePoint -= 0x10000;\n      result += String.fromCharCode(\n        (codePoint >> 10) + 0xD800,\n        (codePoint & ((1 << 10) - 1)) + 0xDC00);\n    }\n  }\n\n  return result;\n};\n\n/**\n * Retrieve the relative offset stored at \"offset\"\n * @param {number} offset\n * @returns {number}\n */\nflatbuffers.ByteBuffer.prototype.__indirect = function(offset) {\n  return offset + this.readInt32(offset);\n};\n\n/**\n * Get the start of data of a vector whose offset is stored at \"offset\" in this object.\n *\n * @param {number} offset\n * @returns {number}\n */\nflatbuffers.ByteBuffer.prototype.__vector = function(offset) {\n  return offset + this.readInt32(offset) + flatbuffers.SIZEOF_INT; // data starts after the length\n};\n\n/**\n * Get the length of a vector whose offset is stored at \"offset\" in this object.\n *\n * @param {number} offset\n * @returns {number}\n */\nflatbuffers.ByteBuffer.prototype.__vector_len = function(offset) {\n  return this.readInt32(offset + this.readInt32(offset));\n};\n\n/**\n * @param {string} ident\n * @returns {boolean}\n */\nflatbuffers.ByteBuffer.prototype.__has_identifier = function(ident) {\n  if (ident.length != flatbuffers.FILE_IDENTIFIER_LENGTH) {\n    throw new Error('FlatBuffers: file identifier must be length ' +\n                    flatbuffers.FILE_IDENTIFIER_LENGTH);\n  }\n  for (var i = 0; i < flatbuffers.FILE_IDENTIFIER_LENGTH; i++) {\n    if (ident.charCodeAt(i) != this.readInt8(this.position_ + flatbuffers.SIZEOF_INT + i)) {\n      return false;\n    }\n  }\n  return true;\n};\n\n/**\n * A helper function to avoid generated code depending on this file directly.\n *\n * @param {number} low\n * @param {number} high\n * @returns {flatbuffers.Long}\n */\nflatbuffers.ByteBuffer.prototype.createLong = function(low, high) {\n  return flatbuffers.Long.create(low, high);\n};\n\n// Exports for Node.js and RequireJS\nexport { flatbuffers };\n\n/// @endcond\n/// @}\n","'use strict';\n\n// This is free and unencumbered software released into the public domain.\n// See LICENSE.md for more information.\n\n//\n// Utilities\n//\n\n/**\n * @param {number} a The number to test.\n * @param {number} min The minimum value in the range, inclusive.\n * @param {number} max The maximum value in the range, inclusive.\n * @return {boolean} True if a >= min and a <= max.\n */\nfunction inRange(a, min, max) {\n  return min <= a && a <= max;\n}\n\n/**\n * @param {*} o\n * @return {Object}\n */\nfunction ToDictionary(o) {\n  if (o === undefined) return {};\n  if (o === Object(o)) return o;\n  throw TypeError('Could not convert argument to dictionary');\n}\n\n/**\n * @param {string} string Input string of UTF-16 code units.\n * @return {!Array.<number>} Code points.\n */\nfunction stringToCodePoints(string) {\n  // https://heycam.github.io/webidl/#dfn-obtain-unicode\n\n  // 1. Let S be the DOMString value.\n  var s = String(string);\n\n  // 2. Let n be the length of S.\n  var n = s.length;\n\n  // 3. Initialize i to 0.\n  var i = 0;\n\n  // 4. Initialize U to be an empty sequence of Unicode characters.\n  var u = [];\n\n  // 5. While i < n:\n  while (i < n) {\n\n    // 1. Let c be the code unit in S at index i.\n    var c = s.charCodeAt(i);\n\n    // 2. Depending on the value of c:\n\n    // c < 0xD800 or c > 0xDFFF\n    if (c < 0xD800 || c > 0xDFFF) {\n      // Append to U the Unicode character with code point c.\n      u.push(c);\n    }\n\n    // 0xDC00 ≤ c ≤ 0xDFFF\n    else if (0xDC00 <= c && c <= 0xDFFF) {\n      // Append to U a U+FFFD REPLACEMENT CHARACTER.\n      u.push(0xFFFD);\n    }\n\n    // 0xD800 ≤ c ≤ 0xDBFF\n    else if (0xD800 <= c && c <= 0xDBFF) {\n      // 1. If i = n−1, then append to U a U+FFFD REPLACEMENT\n      // CHARACTER.\n      if (i === n - 1) {\n        u.push(0xFFFD);\n      }\n      // 2. Otherwise, i < n−1:\n      else {\n        // 1. Let d be the code unit in S at index i+1.\n        var d = string.charCodeAt(i + 1);\n\n        // 2. If 0xDC00 ≤ d ≤ 0xDFFF, then:\n        if (0xDC00 <= d && d <= 0xDFFF) {\n          // 1. Let a be c & 0x3FF.\n          var a = c & 0x3FF;\n\n          // 2. Let b be d & 0x3FF.\n          var b = d & 0x3FF;\n\n          // 3. Append to U the Unicode character with code point\n          // 2^16+2^10*a+b.\n          u.push(0x10000 + (a << 10) + b);\n\n          // 4. Set i to i+1.\n          i += 1;\n        }\n\n        // 3. Otherwise, d < 0xDC00 or d > 0xDFFF. Append to U a\n        // U+FFFD REPLACEMENT CHARACTER.\n        else  {\n          u.push(0xFFFD);\n        }\n      }\n    }\n\n    // 3. Set i to i+1.\n    i += 1;\n  }\n\n  // 6. Return U.\n  return u;\n}\n\n/**\n * @param {!Array.<number>} code_points Array of code points.\n * @return {string} string String of UTF-16 code units.\n */\nfunction codePointsToString(code_points) {\n  var s = '';\n  for (var i = 0; i < code_points.length; ++i) {\n    var cp = code_points[i];\n    if (cp <= 0xFFFF) {\n      s += String.fromCharCode(cp);\n    } else {\n      cp -= 0x10000;\n      s += String.fromCharCode((cp >> 10) + 0xD800,\n                               (cp & 0x3FF) + 0xDC00);\n    }\n  }\n  return s;\n}\n\n\n//\n// Implementation of Encoding specification\n// https://encoding.spec.whatwg.org/\n//\n\n//\n// 3. Terminology\n//\n\n/**\n * End-of-stream is a special token that signifies no more tokens\n * are in the stream.\n * @const\n */ var end_of_stream = -1;\n\n/**\n * A stream represents an ordered sequence of tokens.\n *\n * @constructor\n * @param {!(Array.<number>|Uint8Array)} tokens Array of tokens that provide the\n * stream.\n */\nfunction Stream(tokens) {\n  /** @type {!Array.<number>} */\n  this.tokens = [].slice.call(tokens);\n}\n\nStream.prototype = {\n  /**\n   * @return {boolean} True if end-of-stream has been hit.\n   */\n  endOfStream: function() {\n    return !this.tokens.length;\n  },\n\n  /**\n   * When a token is read from a stream, the first token in the\n   * stream must be returned and subsequently removed, and\n   * end-of-stream must be returned otherwise.\n   *\n   * @return {number} Get the next token from the stream, or\n   * end_of_stream.\n   */\n   read: function() {\n    if (!this.tokens.length)\n      return end_of_stream;\n     return this.tokens.shift();\n   },\n\n  /**\n   * When one or more tokens are prepended to a stream, those tokens\n   * must be inserted, in given order, before the first token in the\n   * stream.\n   *\n   * @param {(number|!Array.<number>)} token The token(s) to prepend to the stream.\n   */\n  prepend: function(token) {\n    if (Array.isArray(token)) {\n      var tokens = /**@type {!Array.<number>}*/(token);\n      while (tokens.length)\n        this.tokens.unshift(tokens.pop());\n    } else {\n      this.tokens.unshift(token);\n    }\n  },\n\n  /**\n   * When one or more tokens are pushed to a stream, those tokens\n   * must be inserted, in given order, after the last token in the\n   * stream.\n   *\n   * @param {(number|!Array.<number>)} token The tokens(s) to prepend to the stream.\n   */\n  push: function(token) {\n    if (Array.isArray(token)) {\n      var tokens = /**@type {!Array.<number>}*/(token);\n      while (tokens.length)\n        this.tokens.push(tokens.shift());\n    } else {\n      this.tokens.push(token);\n    }\n  }\n};\n\n//\n// 4. Encodings\n//\n\n// 4.1 Encoders and decoders\n\n/** @const */\nvar finished = -1;\n\n/**\n * @param {boolean} fatal If true, decoding errors raise an exception.\n * @param {number=} opt_code_point Override the standard fallback code point.\n * @return {number} The code point to insert on a decoding error.\n */\nfunction decoderError(fatal, opt_code_point) {\n  if (fatal)\n    throw TypeError('Decoder error');\n  return opt_code_point || 0xFFFD;\n}\n\n/** @interface */\nfunction Decoder() {}\nDecoder.prototype = {\n  /**\n   * @param {Stream} stream The stream of bytes being decoded.\n   * @param {number} bite The next byte read from the stream.\n   * @return {?(number|!Array.<number>)} The next code point(s)\n   *     decoded, or null if not enough data exists in the input\n   *     stream to decode a complete code point, or |finished|.\n   */\n  handler: function(stream, bite) {}\n};\n\n/** @interface */\nfunction Encoder() {}\nEncoder.prototype = {\n  /**\n   * @param {Stream} stream The stream of code points being encoded.\n   * @param {number} code_point Next code point read from the stream.\n   * @return {(number|!Array.<number>)} Byte(s) to emit, or |finished|.\n   */\n  handler: function(stream, code_point) {}\n};\n\n//\n// 7. API\n//\n\n/** @const */ var DEFAULT_ENCODING = 'utf-8';\n\n// 7.1 Interface TextDecoder\n\n/**\n * @constructor\n * @param {string=} encoding The label of the encoding;\n *     defaults to 'utf-8'.\n * @param {Object=} options\n */\nfunction TextDecoder(encoding, options) {\n  if (!(this instanceof TextDecoder)) {\n    return new TextDecoder(encoding, options);\n  }\n  encoding = encoding !== undefined ? String(encoding).toLowerCase() : DEFAULT_ENCODING;\n  if (encoding !== DEFAULT_ENCODING) {\n    throw new Error('Encoding not supported. Only utf-8 is supported');\n  }\n  options = ToDictionary(options);\n\n  /** @private @type {boolean} */\n  this._streaming = false;\n  /** @private @type {boolean} */\n  this._BOMseen = false;\n  /** @private @type {?Decoder} */\n  this._decoder = null;\n  /** @private @type {boolean} */\n  this._fatal = Boolean(options['fatal']);\n  /** @private @type {boolean} */\n  this._ignoreBOM = Boolean(options['ignoreBOM']);\n\n  Object.defineProperty(this, 'encoding', {value: 'utf-8'});\n  Object.defineProperty(this, 'fatal', {value: this._fatal});\n  Object.defineProperty(this, 'ignoreBOM', {value: this._ignoreBOM});\n}\n\nTextDecoder.prototype = {\n  /**\n   * @param {ArrayBufferView=} input The buffer of bytes to decode.\n   * @param {Object=} options\n   * @return {string} The decoded string.\n   */\n  decode: function decode(input, options) {\n    var bytes;\n    if (typeof input === 'object' && input instanceof ArrayBuffer) {\n      bytes = new Uint8Array(input);\n    } else if (typeof input === 'object' && 'buffer' in input &&\n               input.buffer instanceof ArrayBuffer) {\n      bytes = new Uint8Array(input.buffer,\n                             input.byteOffset,\n                             input.byteLength);\n    } else {\n      bytes = new Uint8Array(0);\n    }\n\n    options = ToDictionary(options);\n\n    if (!this._streaming) {\n      this._decoder = new UTF8Decoder({fatal: this._fatal});\n      this._BOMseen = false;\n    }\n    this._streaming = Boolean(options['stream']);\n\n    var input_stream = new Stream(bytes);\n\n    var code_points = [];\n\n    /** @type {?(number|!Array.<number>)} */\n    var result;\n\n    while (!input_stream.endOfStream()) {\n      result = this._decoder.handler(input_stream, input_stream.read());\n      if (result === finished)\n        break;\n      if (result === null)\n        continue;\n      if (Array.isArray(result))\n        code_points.push.apply(code_points, /**@type {!Array.<number>}*/(result));\n      else\n        code_points.push(result);\n    }\n    if (!this._streaming) {\n      do {\n        result = this._decoder.handler(input_stream, input_stream.read());\n        if (result === finished)\n          break;\n        if (result === null)\n          continue;\n        if (Array.isArray(result))\n          code_points.push.apply(code_points, /**@type {!Array.<number>}*/(result));\n        else\n          code_points.push(result);\n      } while (!input_stream.endOfStream());\n      this._decoder = null;\n    }\n\n    if (code_points.length) {\n      // If encoding is one of utf-8, utf-16be, and utf-16le, and\n      // ignore BOM flag and BOM seen flag are unset, run these\n      // subsubsteps:\n      if (['utf-8'].indexOf(this.encoding) !== -1 &&\n          !this._ignoreBOM && !this._BOMseen) {\n        // If token is U+FEFF, set BOM seen flag.\n        if (code_points[0] === 0xFEFF) {\n          this._BOMseen = true;\n          code_points.shift();\n        } else {\n          // Otherwise, if token is not end-of-stream, set BOM seen\n          // flag and append token to output.\n          this._BOMseen = true;\n        }\n      }\n    }\n\n    return codePointsToString(code_points);\n  }\n};\n\n// 7.2 Interface TextEncoder\n\n/**\n * @constructor\n * @param {string=} encoding The label of the encoding;\n *     defaults to 'utf-8'.\n * @param {Object=} options\n */\nfunction TextEncoder(encoding, options) {\n  if (!(this instanceof TextEncoder))\n    return new TextEncoder(encoding, options);\n  encoding = encoding !== undefined ? String(encoding).toLowerCase() : DEFAULT_ENCODING;\n  if (encoding !== DEFAULT_ENCODING) {\n    throw new Error('Encoding not supported. Only utf-8 is supported');\n  }\n  options = ToDictionary(options);\n\n  /** @private @type {boolean} */\n  this._streaming = false;\n  /** @private @type {?Encoder} */\n  this._encoder = null;\n  /** @private @type {{fatal: boolean}} */\n  this._options = {fatal: Boolean(options['fatal'])};\n\n  Object.defineProperty(this, 'encoding', {value: 'utf-8'});\n}\n\nTextEncoder.prototype = {\n  /**\n   * @param {string=} opt_string The string to encode.\n   * @param {Object=} options\n   * @return {Uint8Array} Encoded bytes, as a Uint8Array.\n   */\n  encode: function encode(opt_string, options) {\n    opt_string = opt_string ? String(opt_string) : '';\n    options = ToDictionary(options);\n\n    // NOTE: This option is nonstandard. None of the encodings\n    // permitted for encoding (i.e. UTF-8, UTF-16) are stateful,\n    // so streaming is not necessary.\n    if (!this._streaming)\n      this._encoder = new UTF8Encoder(this._options);\n    this._streaming = Boolean(options['stream']);\n\n    var bytes = [];\n    var input_stream = new Stream(stringToCodePoints(opt_string));\n    /** @type {?(number|!Array.<number>)} */\n    var result;\n    while (!input_stream.endOfStream()) {\n      result = this._encoder.handler(input_stream, input_stream.read());\n      if (result === finished)\n        break;\n      if (Array.isArray(result))\n        bytes.push.apply(bytes, /**@type {!Array.<number>}*/(result));\n      else\n        bytes.push(result);\n    }\n    if (!this._streaming) {\n      while (true) {\n        result = this._encoder.handler(input_stream, input_stream.read());\n        if (result === finished)\n          break;\n        if (Array.isArray(result))\n          bytes.push.apply(bytes, /**@type {!Array.<number>}*/(result));\n        else\n          bytes.push(result);\n      }\n      this._encoder = null;\n    }\n    return new Uint8Array(bytes);\n  }\n};\n\n//\n// 8. The encoding\n//\n\n// 8.1 utf-8\n\n/**\n * @constructor\n * @implements {Decoder}\n * @param {{fatal: boolean}} options\n */\nfunction UTF8Decoder(options) {\n  var fatal = options.fatal;\n\n  // utf-8's decoder's has an associated utf-8 code point, utf-8\n  // bytes seen, and utf-8 bytes needed (all initially 0), a utf-8\n  // lower boundary (initially 0x80), and a utf-8 upper boundary\n  // (initially 0xBF).\n  var /** @type {number} */ utf8_code_point = 0,\n      /** @type {number} */ utf8_bytes_seen = 0,\n      /** @type {number} */ utf8_bytes_needed = 0,\n      /** @type {number} */ utf8_lower_boundary = 0x80,\n      /** @type {number} */ utf8_upper_boundary = 0xBF;\n\n  /**\n   * @param {Stream} stream The stream of bytes being decoded.\n   * @param {number} bite The next byte read from the stream.\n   * @return {?(number|!Array.<number>)} The next code point(s)\n   *     decoded, or null if not enough data exists in the input\n   *     stream to decode a complete code point.\n   */\n  this.handler = function(stream, bite) {\n    // 1. If byte is end-of-stream and utf-8 bytes needed is not 0,\n    // set utf-8 bytes needed to 0 and return error.\n    if (bite === end_of_stream && utf8_bytes_needed !== 0) {\n      utf8_bytes_needed = 0;\n      return decoderError(fatal);\n    }\n\n    // 2. If byte is end-of-stream, return finished.\n    if (bite === end_of_stream)\n      return finished;\n\n    // 3. If utf-8 bytes needed is 0, based on byte:\n    if (utf8_bytes_needed === 0) {\n\n      // 0x00 to 0x7F\n      if (inRange(bite, 0x00, 0x7F)) {\n        // Return a code point whose value is byte.\n        return bite;\n      }\n\n      // 0xC2 to 0xDF\n      if (inRange(bite, 0xC2, 0xDF)) {\n        // Set utf-8 bytes needed to 1 and utf-8 code point to byte\n        // − 0xC0.\n        utf8_bytes_needed = 1;\n        utf8_code_point = bite - 0xC0;\n      }\n\n      // 0xE0 to 0xEF\n      else if (inRange(bite, 0xE0, 0xEF)) {\n        // 1. If byte is 0xE0, set utf-8 lower boundary to 0xA0.\n        if (bite === 0xE0)\n          utf8_lower_boundary = 0xA0;\n        // 2. If byte is 0xED, set utf-8 upper boundary to 0x9F.\n        if (bite === 0xED)\n          utf8_upper_boundary = 0x9F;\n        // 3. Set utf-8 bytes needed to 2 and utf-8 code point to\n        // byte − 0xE0.\n        utf8_bytes_needed = 2;\n        utf8_code_point = bite - 0xE0;\n      }\n\n      // 0xF0 to 0xF4\n      else if (inRange(bite, 0xF0, 0xF4)) {\n        // 1. If byte is 0xF0, set utf-8 lower boundary to 0x90.\n        if (bite === 0xF0)\n          utf8_lower_boundary = 0x90;\n        // 2. If byte is 0xF4, set utf-8 upper boundary to 0x8F.\n        if (bite === 0xF4)\n          utf8_upper_boundary = 0x8F;\n        // 3. Set utf-8 bytes needed to 3 and utf-8 code point to\n        // byte − 0xF0.\n        utf8_bytes_needed = 3;\n        utf8_code_point = bite - 0xF0;\n      }\n\n      // Otherwise\n      else {\n        // Return error.\n        return decoderError(fatal);\n      }\n\n      // Then (byte is in the range 0xC2 to 0xF4) set utf-8 code\n      // point to utf-8 code point << (6 × utf-8 bytes needed) and\n      // return continue.\n      utf8_code_point = utf8_code_point << (6 * utf8_bytes_needed);\n      return null;\n    }\n\n    // 4. If byte is not in the range utf-8 lower boundary to utf-8\n    // upper boundary, run these substeps:\n    if (!inRange(bite, utf8_lower_boundary, utf8_upper_boundary)) {\n\n      // 1. Set utf-8 code point, utf-8 bytes needed, and utf-8\n      // bytes seen to 0, set utf-8 lower boundary to 0x80, and set\n      // utf-8 upper boundary to 0xBF.\n      utf8_code_point = utf8_bytes_needed = utf8_bytes_seen = 0;\n      utf8_lower_boundary = 0x80;\n      utf8_upper_boundary = 0xBF;\n\n      // 2. Prepend byte to stream.\n      stream.prepend(bite);\n\n      // 3. Return error.\n      return decoderError(fatal);\n    }\n\n    // 5. Set utf-8 lower boundary to 0x80 and utf-8 upper boundary\n    // to 0xBF.\n    utf8_lower_boundary = 0x80;\n    utf8_upper_boundary = 0xBF;\n\n    // 6. Increase utf-8 bytes seen by one and set utf-8 code point\n    // to utf-8 code point + (byte − 0x80) << (6 × (utf-8 bytes\n    // needed − utf-8 bytes seen)).\n    utf8_bytes_seen += 1;\n    utf8_code_point += (bite - 0x80) << (6 * (utf8_bytes_needed - utf8_bytes_seen));\n\n    // 7. If utf-8 bytes seen is not equal to utf-8 bytes needed,\n    // continue.\n    if (utf8_bytes_seen !== utf8_bytes_needed)\n      return null;\n\n    // 8. Let code point be utf-8 code point.\n    var code_point = utf8_code_point;\n\n    // 9. Set utf-8 code point, utf-8 bytes needed, and utf-8 bytes\n    // seen to 0.\n    utf8_code_point = utf8_bytes_needed = utf8_bytes_seen = 0;\n\n    // 10. Return a code point whose value is code point.\n    return code_point;\n  };\n}\n\n/**\n * @constructor\n * @implements {Encoder}\n * @param {{fatal: boolean}} options\n */\nfunction UTF8Encoder(options) {\n  var fatal = options.fatal;\n  /**\n   * @param {Stream} stream Input stream.\n   * @param {number} code_point Next code point read from the stream.\n   * @return {(number|!Array.<number>)} Byte(s) to emit.\n   */\n  this.handler = function(stream, code_point) {\n    // 1. If code point is end-of-stream, return finished.\n    if (code_point === end_of_stream)\n      return finished;\n\n    // 2. If code point is in the range U+0000 to U+007F, return a\n    // byte whose value is code point.\n    if (inRange(code_point, 0x0000, 0x007f))\n      return code_point;\n\n    // 3. Set count and offset based on the range code point is in:\n    var count, offset;\n    // U+0080 to U+07FF:    1 and 0xC0\n    if (inRange(code_point, 0x0080, 0x07FF)) {\n      count = 1;\n      offset = 0xC0;\n    }\n    // U+0800 to U+FFFF:    2 and 0xE0\n    else if (inRange(code_point, 0x0800, 0xFFFF)) {\n      count = 2;\n      offset = 0xE0;\n    }\n    // U+10000 to U+10FFFF: 3 and 0xF0\n    else if (inRange(code_point, 0x10000, 0x10FFFF)) {\n      count = 3;\n      offset = 0xF0;\n    }\n\n    // 4.Let bytes be a byte sequence whose first byte is (code\n    // point >> (6 × count)) + offset.\n    var bytes = [(code_point >> (6 * count)) + offset];\n\n    // 5. Run these substeps while count is greater than 0:\n    while (count > 0) {\n\n      // 1. Set temp to code point >> (6 × (count − 1)).\n      var temp = code_point >> (6 * (count - 1));\n\n      // 2. Append to bytes 0x80 | (temp & 0x3F).\n      bytes.push(0x80 | (temp & 0x3F));\n\n      // 3. Decrease count by one.\n      count -= 1;\n    }\n\n    // 6. Return bytes bytes, in order.\n    return bytes;\n  };\n}\n\nexport {TextEncoder, TextDecoder};\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { toUint8Array } from './buffer';\nimport {\n    TextDecoder as TextDecoderPolyfill,\n    TextEncoder as TextEncoderPolyfill,\n} from 'text-encoding-utf-8';\n\n/** @ignore @suppress {missingRequire} */\nconst _Buffer = typeof Buffer === 'function' ? Buffer : null;\n/** @ignore */\nconst useNativeEncoders = typeof TextDecoder === 'function' && typeof TextEncoder === 'function';\n\n/** @ignore */\nexport const decodeUtf8 = ((TextDecoder) => {\n    if (useNativeEncoders || !_Buffer) {\n        const decoder = new TextDecoder('utf-8');\n        return (buffer?: ArrayBuffer | ArrayBufferView) => decoder.decode(buffer);\n    }\n    return (input: ArrayBufferLike | ArrayBufferView) => {\n        const { buffer, byteOffset, length } = toUint8Array(input);\n        return _Buffer.from(buffer, byteOffset, length).toString();\n    };\n})(typeof TextDecoder !== 'undefined' ? TextDecoder : TextDecoderPolyfill);\n\n/** @ignore */\nexport const encodeUtf8 = ((TextEncoder) => {\n    if (useNativeEncoders || !_Buffer) {\n        const encoder = new TextEncoder();\n        return (value?: string) => encoder.encode(value);\n    }\n    return (input = '') => toUint8Array(_Buffer.from(input, 'utf8'));\n})(typeof TextEncoder !== 'undefined' ? TextEncoder : TextEncoderPolyfill);\n","export default function _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n  return _setPrototypeOf(o, p);\n}","import setPrototypeOf from \"./setPrototypeOf.js\";\nexport default function _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  Object.defineProperty(subClass, \"prototype\", {\n    writable: false\n  });\n  if (superClass) setPrototypeOf(subClass, superClass);\n}","export default function _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}","export default function _isNativeReflectConstruct() {\n  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n  if (Reflect.construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n\n  try {\n    Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}","export default function _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}","import _typeof from \"./typeof.js\";\nimport assertThisInitialized from \"./assertThisInitialized.js\";\nexport default function _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  } else if (call !== void 0) {\n    throw new TypeError(\"Derived constructors may only return object or undefined\");\n  }\n\n  return assertThisInitialized(self);\n}","import getPrototypeOf from \"./getPrototypeOf.js\";\nimport isNativeReflectConstruct from \"./isNativeReflectConstruct.js\";\nimport possibleConstructorReturn from \"./possibleConstructorReturn.js\";\nexport default function _createSuper(Derived) {\n  var hasNativeReflectConstruct = isNativeReflectConstruct();\n  return function _createSuperInternal() {\n    var Super = getPrototypeOf(Derived),\n        result;\n\n    if (hasNativeReflectConstruct) {\n      var NewTarget = getPrototypeOf(this).constructor;\n      result = Reflect.construct(Super, arguments, NewTarget);\n    } else {\n      result = Super.apply(this, arguments);\n    }\n\n    return possibleConstructorReturn(this, result);\n  };\n}","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport streamAdapters from './adapters';\n\n/** @ignore */\nexport const ITERATOR_DONE: any = Object.freeze({ done: true, value: void (0) });\n\n/** @ignore */\nexport type FileHandle = import('fs').promises.FileHandle;\n/** @ignore */\nexport type ArrowJSONLike = { schema: any; batches?: any[]; dictionaries?: any[]; };\n/** @ignore */\nexport type ReadableDOMStreamOptions = { type: 'bytes' | undefined, autoAllocateChunkSize?: number, highWaterMark?: number };\n\n/** @ignore */\nexport class ArrowJSON {\n    // @ts-ignore\n    constructor(private _json: ArrowJSONLike) {}\n    public get schema(): any { return this._json['schema']; }\n    public get batches(): any[] { return (this._json['batches'] || []) as any[]; }\n    public get dictionaries(): any[] { return (this._json['dictionaries'] || []) as any[]; }\n}\n\n/** @ignore */\nexport interface Readable<T> {\n\n    readonly closed: Promise<void>;\n    cancel(reason?: any): Promise<void>;\n\n    read(size?: number | null): Promise<T | null>;\n    peek(size?: number | null): Promise<T | null>;\n    throw(value?: any): Promise<IteratorResult<any>>;\n    return(value?: any): Promise<IteratorResult<any>>;\n    next(size?: number | null): Promise<IteratorResult<T>>;\n}\n\n/** @ignore */\nexport interface Writable<T> {\n    readonly closed: Promise<void>;\n    close(): void;\n    write(chunk: T): void;\n    abort(reason?: any): void;\n}\n\n/** @ignore */\nexport interface ReadableWritable<TReadable, TWritable> extends Readable<TReadable>, Writable<TWritable> {\n    [Symbol.asyncIterator](): AsyncIterableIterator<TReadable>;\n    toDOMStream(options?: ReadableDOMStreamOptions): ReadableStream<TReadable>;\n    toNodeStream(options?: import('stream').ReadableOptions): import('stream').Readable;\n}\n\n/** @ignore */\nexport abstract class ReadableInterop<T> {\n\n    public abstract toDOMStream(options?: ReadableDOMStreamOptions): ReadableStream<T>;\n    public abstract toNodeStream(options?: import('stream').ReadableOptions): import('stream').Readable;\n\n    public tee(): [ReadableStream<T>, ReadableStream<T>] {\n        return this._getDOMStream().tee();\n    }\n    public pipe<R extends NodeJS.WritableStream>(writable: R, options?: { end?: boolean; }) {\n        return this._getNodeStream().pipe(writable, options);\n    }\n    public pipeTo(writable: WritableStream<T>, options?: PipeOptions) { return this._getDOMStream().pipeTo(writable, options); }\n    public pipeThrough<R extends ReadableStream<any>>(duplex: { writable: WritableStream<T>, readable: R }, options?: PipeOptions) {\n        return this._getDOMStream().pipeThrough(duplex, options);\n    }\n\n    protected _DOMStream?: ReadableStream<T>;\n    private _getDOMStream() {\n        return this._DOMStream || (this._DOMStream = this.toDOMStream());\n    }\n\n    protected _nodeStream?: import('stream').Readable;\n    private _getNodeStream() {\n        return this._nodeStream || (this._nodeStream = this.toNodeStream());\n    }\n}\n\n/** @ignore */\ntype Resolution<T> = { resolve: (value?: T | PromiseLike<T>) => void; reject: (reason?: any) => void; };\n\n/** @ignore */\nexport class AsyncQueue<TReadable = Uint8Array, TWritable = TReadable> extends ReadableInterop<TReadable>\n    implements AsyncIterableIterator<TReadable>, ReadableWritable<TReadable, TWritable> {\n\n    protected _values: TWritable[] = [];\n    protected _error?: { error: any; };\n    protected _closedPromise: Promise<void>;\n    protected _closedPromiseResolve?: (value?: any) => void;\n    protected resolvers: Resolution<IteratorResult<TReadable>>[] = [];\n\n    constructor() {\n        super();\n        this._closedPromise = new Promise((r) => this._closedPromiseResolve = r);\n    }\n\n    public get closed(): Promise<void> { return this._closedPromise; }\n    public async cancel(reason?: any) { await this.return(reason); }\n    public write(value: TWritable) {\n        if (this._ensureOpen()) {\n            this.resolvers.length <= 0\n                ? (this._values.push(value))\n                : (this.resolvers.shift()!.resolve({ done: false, value } as any));\n        }\n    }\n    public abort(value?: any) {\n        if (this._closedPromiseResolve) {\n            this.resolvers.length <= 0\n                ? (this._error = { error: value })\n                : (this.resolvers.shift()!.reject({ done: true, value }));\n        }\n    }\n    public close() {\n        if (this._closedPromiseResolve) {\n            const { resolvers } = this;\n            while (resolvers.length > 0) {\n                resolvers.shift()!.resolve(ITERATOR_DONE);\n            }\n            this._closedPromiseResolve();\n            this._closedPromiseResolve = undefined;\n        }\n    }\n\n    public [Symbol.asyncIterator]() { return this; }\n    public toDOMStream(options?: ReadableDOMStreamOptions) {\n        return streamAdapters.toDOMStream(\n            (this._closedPromiseResolve || this._error)\n                ? (this as AsyncIterable<TReadable>)\n                : (this._values as any) as Iterable<TReadable>,\n            options);\n    }\n    public toNodeStream(options?: import('stream').ReadableOptions) {\n        return streamAdapters.toNodeStream(\n            (this._closedPromiseResolve || this._error)\n                ? (this as AsyncIterable<TReadable>)\n                : (this._values as any) as Iterable<TReadable>,\n            options);\n    }\n    public async throw(_?: any) { await this.abort(_); return ITERATOR_DONE; }\n    public async return(_?: any) { await this.close(); return ITERATOR_DONE; }\n\n    public async read(size?: number | null): Promise<TReadable | null> { return (await this.next(size, 'read')).value; }\n    public async peek(size?: number | null): Promise<TReadable | null> { return (await this.next(size, 'peek')).value; }\n    public next(..._args: any[]): Promise<IteratorResult<TReadable>> {\n        if (this._values.length > 0) {\n            return Promise.resolve({ done: false, value: this._values.shift()! } as any);\n        } else if (this._error) {\n            return Promise.reject({ done: true, value: this._error.error });\n        } else if (!this._closedPromiseResolve) {\n            return Promise.resolve(ITERATOR_DONE);\n        } else {\n            return new Promise<IteratorResult<TReadable>>((resolve, reject) => {\n                this.resolvers.push({ resolve, reject });\n            });\n        }\n    }\n\n    protected _ensureOpen() {\n        if (this._closedPromiseResolve) {\n            return true;\n        }\n        throw new Error(`${this} is closed`);\n    }\n}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { ReadableInterop, ArrowJSONLike } from '../io/interfaces';\n\n/** @ignore */\ntype FSReadStream = import('fs').ReadStream;\n/** @ignore */\ntype FileHandle = import('fs').promises.FileHandle;\n\n/** @ignore */\nexport interface Subscription {\n    unsubscribe: () => void;\n}\n\n/** @ignore */\nexport interface Observer<T> {\n    closed?: boolean;\n    next: (value: T) => void;\n    error: (err: any) => void;\n    complete: () => void;\n}\n\n/** @ignore */\nexport interface Observable<T> {\n    subscribe: (observer: Observer<T>) => Subscription;\n}\n\n/** @ignore */\nconst [BigIntCtor, BigIntAvailable] = (() => {\n    const BigIntUnavailableError = () => { throw new Error('BigInt is not available in this environment'); };\n    function BigIntUnavailable() { throw BigIntUnavailableError(); }\n    BigIntUnavailable.asIntN = () => { throw BigIntUnavailableError(); };\n    BigIntUnavailable.asUintN = () => { throw BigIntUnavailableError(); };\n    return typeof BigInt !== 'undefined' ? [BigInt, true] : [<any> BigIntUnavailable, false];\n})() as [BigIntConstructor, boolean];\n\n/** @ignore */\nconst [BigInt64ArrayCtor, BigInt64ArrayAvailable] = (() => {\n    const BigInt64ArrayUnavailableError = () => { throw new Error('BigInt64Array is not available in this environment'); };\n    class BigInt64ArrayUnavailable {\n        static get BYTES_PER_ELEMENT() { return 8; }\n        static of() { throw BigInt64ArrayUnavailableError(); }\n        static from() { throw BigInt64ArrayUnavailableError(); }\n        constructor() { throw BigInt64ArrayUnavailableError(); }\n    }\n    return typeof BigInt64Array !== 'undefined' ? [BigInt64Array, true] : [<any> BigInt64ArrayUnavailable, false];\n})() as [BigInt64ArrayConstructor, boolean];\n\n/** @ignore */\nconst [BigUint64ArrayCtor, BigUint64ArrayAvailable] = (() => {\n    const BigUint64ArrayUnavailableError = () => { throw new Error('BigUint64Array is not available in this environment'); };\n    class BigUint64ArrayUnavailable {\n        static get BYTES_PER_ELEMENT() { return 8; }\n        static of() { throw BigUint64ArrayUnavailableError(); }\n        static from() { throw BigUint64ArrayUnavailableError(); }\n        constructor() { throw BigUint64ArrayUnavailableError(); }\n    }\n    return typeof BigUint64Array !== 'undefined' ? [BigUint64Array, true] : [<any> BigUint64ArrayUnavailable, false];\n})() as [BigUint64ArrayConstructor, boolean];\n\nexport { BigIntCtor as BigInt, BigIntAvailable };\nexport { BigInt64ArrayCtor as BigInt64Array, BigInt64ArrayAvailable };\nexport { BigUint64ArrayCtor as BigUint64Array, BigUint64ArrayAvailable };\n\n/** @ignore */ const isNumber = (x: any) => typeof x === 'number';\n/** @ignore */ const isBoolean = (x: any) => typeof x === 'boolean';\n/** @ignore */ const isFunction = (x: any) => typeof x === 'function';\n/** @ignore */\nexport const isObject = (x: any): x is Object => x != null && Object(x) === x;\n\n/** @ignore */\nexport const isPromise = <T = any>(x: any): x is PromiseLike<T> => {\n    return isObject(x) && isFunction(x.then);\n};\n\n/** @ignore */\nexport const isObservable = <T = any>(x: any): x is Observable<T> => {\n    return isObject(x) && isFunction(x.subscribe);\n};\n\n/** @ignore */\nexport const isIterable = <T = any>(x: any): x is Iterable<T> => {\n    return isObject(x) && isFunction(x[Symbol.iterator]);\n};\n\n/** @ignore */\nexport const isAsyncIterable = <T = any>(x: any): x is AsyncIterable<T> => {\n    return isObject(x) && isFunction(x[Symbol.asyncIterator]);\n};\n\n/** @ignore */\nexport const isArrowJSON = (x: any): x is ArrowJSONLike  => {\n    return isObject(x) && isObject(x['schema']);\n};\n\n/** @ignore */\nexport const isArrayLike = <T = any>(x: any): x is ArrayLike<T> => {\n    return isObject(x) && isNumber(x['length']);\n};\n\n/** @ignore */\nexport const isIteratorResult = <T = any>(x: any): x is IteratorResult<T> => {\n    return isObject(x) && ('done' in x) && ('value' in x);\n};\n\n/** @ignore */\nexport const isUnderlyingSink = <T = any>(x: any): x is UnderlyingSink<T> => {\n    return isObject(x) &&\n        isFunction(x['abort']) &&\n        isFunction(x['close']) &&\n        isFunction(x['start']) &&\n        isFunction(x['write']);\n};\n\n/** @ignore */\nexport const isFileHandle = (x: any): x is FileHandle => {\n    return isObject(x) && isFunction(x['stat']) && isNumber(x['fd']);\n};\n\n/** @ignore */\nexport const isFSReadStream = (x: any): x is FSReadStream => {\n    return isReadableNodeStream(x) && isNumber((<any> x)['bytesRead']);\n};\n\n/** @ignore */\nexport const isFetchResponse = (x: any): x is Response => {\n    return isObject(x) && isReadableDOMStream(x['body']);\n};\n\n/** @ignore */\nexport const isWritableDOMStream = <T = any>(x: any): x is WritableStream<T> => {\n    return isObject(x) &&\n        isFunction(x['abort']) &&\n        isFunction(x['getWriter']) &&\n        !(x instanceof ReadableInterop);\n};\n\n/** @ignore */\nexport const isReadableDOMStream = <T = any>(x: any): x is ReadableStream<T> => {\n    return isObject(x) &&\n        isFunction(x['cancel']) &&\n        isFunction(x['getReader']) &&\n        !(x instanceof ReadableInterop);\n};\n\n/** @ignore */\nexport const isWritableNodeStream = (x: any): x is NodeJS.WritableStream => {\n    return isObject(x) &&\n        isFunction(x['end']) &&\n        isFunction(x['write']) &&\n        isBoolean(x['writable']) &&\n        !(x instanceof ReadableInterop);\n};\n\n/** @ignore */\nexport const isReadableNodeStream = (x: any): x is NodeJS.ReadableStream => {\n    return isObject(x) &&\n        isFunction(x['read']) &&\n        isFunction(x['pipe']) &&\n        isBoolean(x['readable']) &&\n        !(x instanceof ReadableInterop);\n};\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { flatbuffers } from 'flatbuffers';\nimport { encodeUtf8 } from '../util/utf8';\nimport ByteBuffer = flatbuffers.ByteBuffer;\nimport { TypedArray, TypedArrayConstructor } from '../interfaces';\nimport { BigIntArray, BigIntArrayConstructor } from '../interfaces';\nimport { isPromise, isIterable, isAsyncIterable, isIteratorResult, BigInt64Array, BigUint64Array } from './compat';\n\n/** @ignore */\nconst SharedArrayBuf = (typeof SharedArrayBuffer !== 'undefined' ? SharedArrayBuffer : ArrayBuffer);\n\n/** @ignore */\nfunction collapseContiguousByteRanges(chunks: Uint8Array[]) {\n    let result = chunks[0] ? [chunks[0]] : [];\n    let xOffset: number, yOffset: number, xLen: number, yLen: number;\n    for (let x, y, i = 0, j = 0, n = chunks.length; ++i < n;) {\n        x = result[j];\n        y = chunks[i];\n        // continue if x and y don't share the same underlying ArrayBuffer, or if x isn't before y\n        if (!x || !y || x.buffer !== y.buffer || y.byteOffset < x.byteOffset) {\n            y && (result[++j] = y);\n            continue;\n        }\n        ({ byteOffset: xOffset, byteLength: xLen } = x);\n        ({ byteOffset: yOffset, byteLength: yLen } = y);\n        // continue if the byte ranges of x and y aren't contiguous\n        if ((xOffset + xLen) < yOffset || (yOffset + yLen) < xOffset) {\n            y && (result[++j] = y);\n            continue;\n        }\n        result[j] = new Uint8Array(x.buffer, xOffset, yOffset - xOffset + yLen);\n    }\n    return result;\n}\n\n/** @ignore */\nexport function memcpy<TTarget extends ArrayBufferView, TSource extends ArrayBufferView>(target: TTarget, source: TSource, targetByteOffset = 0, sourceByteLength = source.byteLength) {\n    const targetByteLength = target.byteLength;\n    const dst = new Uint8Array(target.buffer, target.byteOffset, targetByteLength);\n    const src = new Uint8Array(source.buffer, source.byteOffset, Math.min(sourceByteLength, targetByteLength));\n    dst.set(src, targetByteOffset);\n    return target;\n}\n\n/** @ignore */\nexport function joinUint8Arrays(chunks: Uint8Array[], size?: number | null): [Uint8Array, Uint8Array[], number] {\n    // collapse chunks that share the same underlying ArrayBuffer and whose byte ranges overlap,\n    // to avoid unnecessarily copying the bytes to do this buffer join. This is a common case during\n    // streaming, where we may be reading partial byte ranges out of the same underlying ArrayBuffer\n    let result = collapseContiguousByteRanges(chunks);\n    let byteLength = result.reduce((x, b) => x + b.byteLength, 0);\n    let source: Uint8Array, sliced: Uint8Array, buffer: Uint8Array | void;\n    let offset = 0, index = -1, length = Math.min(size || Infinity, byteLength);\n    for (let n = result.length; ++index < n;) {\n        source = result[index];\n        sliced = source.subarray(0, Math.min(source.length, length - offset));\n        if (length <= (offset + sliced.length)) {\n            if (sliced.length < source.length) {\n                result[index] = source.subarray(sliced.length);\n            } else if (sliced.length === source.length) { index++; }\n            buffer ? memcpy(buffer, sliced, offset) : (buffer = sliced);\n            break;\n        }\n        memcpy(buffer || (buffer = new Uint8Array(length)), sliced, offset);\n        offset += sliced.length;\n    }\n    return [buffer || new Uint8Array(0), result.slice(index), byteLength - (buffer ? buffer.byteLength : 0)];\n}\n\n/** @ignore */\nexport type ArrayBufferViewInput = ArrayBufferView | ArrayBufferLike | ArrayBufferView | Iterable<number> | ArrayLike<number> | ByteBuffer | string | null | undefined  |\n                    IteratorResult<ArrayBufferView | ArrayBufferLike | ArrayBufferView | Iterable<number> | ArrayLike<number> | ByteBuffer | string | null | undefined> |\n          ReadableStreamReadResult<ArrayBufferView | ArrayBufferLike | ArrayBufferView | Iterable<number> | ArrayLike<number> | ByteBuffer | string | null | undefined> ;\n\n/** @ignore */\nexport function toArrayBufferView<T extends TypedArray>(ArrayBufferViewCtor: TypedArrayConstructor<T>, input: ArrayBufferViewInput): T;\nexport function toArrayBufferView<T extends BigIntArray>(ArrayBufferViewCtor: BigIntArrayConstructor<T>, input: ArrayBufferViewInput): T;\nexport function toArrayBufferView(ArrayBufferViewCtor: any, input: ArrayBufferViewInput) {\n\n    let value: any = isIteratorResult(input) ? input.value : input;\n\n    if (value instanceof ArrayBufferViewCtor) {\n        if (ArrayBufferViewCtor === Uint8Array) {\n            // Node's `Buffer` class passes the `instanceof Uint8Array` check, but we need\n            // a real Uint8Array, since Buffer#slice isn't the same as Uint8Array#slice :/\n            return new ArrayBufferViewCtor(value.buffer, value.byteOffset, value.byteLength);\n        }\n        return value;\n    }\n    if (!value) { return new ArrayBufferViewCtor(0); }\n    if (typeof value === 'string') { value = encodeUtf8(value); }\n    if (value instanceof ArrayBuffer) { return new ArrayBufferViewCtor(value); }\n    if (value instanceof SharedArrayBuf) { return new ArrayBufferViewCtor(value); }\n    if (value instanceof ByteBuffer) { return toArrayBufferView(ArrayBufferViewCtor, value.bytes()); }\n    return !ArrayBuffer.isView(value) ? ArrayBufferViewCtor.from(value) : value.byteLength <= 0 ? new ArrayBufferViewCtor(0)\n        : new ArrayBufferViewCtor(value.buffer, value.byteOffset, value.byteLength / ArrayBufferViewCtor.BYTES_PER_ELEMENT);\n}\n\n/** @ignore */ export const toInt8Array = (input: ArrayBufferViewInput) => toArrayBufferView(Int8Array, input);\n/** @ignore */ export const toInt16Array = (input: ArrayBufferViewInput) => toArrayBufferView(Int16Array, input);\n/** @ignore */ export const toInt32Array = (input: ArrayBufferViewInput) => toArrayBufferView(Int32Array, input);\n/** @ignore */ export const toBigInt64Array = (input: ArrayBufferViewInput) => toArrayBufferView(BigInt64Array, input);\n/** @ignore */ export const toUint8Array = (input: ArrayBufferViewInput) => toArrayBufferView(Uint8Array, input);\n/** @ignore */ export const toUint16Array = (input: ArrayBufferViewInput) => toArrayBufferView(Uint16Array, input);\n/** @ignore */ export const toUint32Array = (input: ArrayBufferViewInput) => toArrayBufferView(Uint32Array, input);\n/** @ignore */ export const toBigUint64Array = (input: ArrayBufferViewInput) => toArrayBufferView(BigUint64Array, input);\n/** @ignore */ export const toFloat32Array = (input: ArrayBufferViewInput) => toArrayBufferView(Float32Array, input);\n/** @ignore */ export const toFloat64Array = (input: ArrayBufferViewInput) => toArrayBufferView(Float64Array, input);\n/** @ignore */ export const toUint8ClampedArray = (input: ArrayBufferViewInput) => toArrayBufferView(Uint8ClampedArray, input);\n\n/** @ignore */\ntype ArrayBufferViewIteratorInput = Iterable<ArrayBufferViewInput> | ArrayBufferViewInput;\n\n/** @ignore */\nconst pump = <T extends Iterator<any> | AsyncIterator<any>>(iterator: T) => { iterator.next(); return iterator; };\n\n/** @ignore */\nexport function* toArrayBufferViewIterator<T extends TypedArray>(ArrayCtor: TypedArrayConstructor<T>, source: ArrayBufferViewIteratorInput) {\n\n    const wrap = function*<T>(x: T) { yield x; };\n    const buffers: Iterable<ArrayBufferViewInput> =\n                   (typeof source === 'string') ? wrap(source)\n                 : (ArrayBuffer.isView(source)) ? wrap(source)\n              : (source instanceof ArrayBuffer) ? wrap(source)\n           : (source instanceof SharedArrayBuf) ? wrap(source)\n    : !isIterable<ArrayBufferViewInput>(source) ? wrap(source) : source;\n\n    yield* pump((function* (it) {\n        let r: IteratorResult<any> = <any> null;\n        do {\n            r = it.next(yield toArrayBufferView(ArrayCtor, r));\n        } while (!r.done);\n    })(buffers[Symbol.iterator]()));\n}\n\n/** @ignore */ export const toInt8ArrayIterator = (input: ArrayBufferViewIteratorInput) => toArrayBufferViewIterator(Int8Array, input);\n/** @ignore */ export const toInt16ArrayIterator = (input: ArrayBufferViewIteratorInput) => toArrayBufferViewIterator(Int16Array, input);\n/** @ignore */ export const toInt32ArrayIterator = (input: ArrayBufferViewIteratorInput) => toArrayBufferViewIterator(Int32Array, input);\n/** @ignore */ export const toUint8ArrayIterator = (input: ArrayBufferViewIteratorInput) => toArrayBufferViewIterator(Uint8Array, input);\n/** @ignore */ export const toUint16ArrayIterator = (input: ArrayBufferViewIteratorInput) => toArrayBufferViewIterator(Uint16Array, input);\n/** @ignore */ export const toUint32ArrayIterator = (input: ArrayBufferViewIteratorInput) => toArrayBufferViewIterator(Uint32Array, input);\n/** @ignore */ export const toFloat32ArrayIterator = (input: ArrayBufferViewIteratorInput) => toArrayBufferViewIterator(Float32Array, input);\n/** @ignore */ export const toFloat64ArrayIterator = (input: ArrayBufferViewIteratorInput) => toArrayBufferViewIterator(Float64Array, input);\n/** @ignore */ export const toUint8ClampedArrayIterator = (input: ArrayBufferViewIteratorInput) => toArrayBufferViewIterator(Uint8ClampedArray, input);\n\n/** @ignore */\ntype ArrayBufferViewAsyncIteratorInput = AsyncIterable<ArrayBufferViewInput> | Iterable<ArrayBufferViewInput> | PromiseLike<ArrayBufferViewInput> | ArrayBufferViewInput;\n\n/** @ignore */\nexport async function* toArrayBufferViewAsyncIterator<T extends TypedArray>(ArrayCtor: TypedArrayConstructor<T>, source: ArrayBufferViewAsyncIteratorInput): AsyncIterableIterator<T> {\n\n    // if a Promise, unwrap the Promise and iterate the resolved value\n    if (isPromise<ArrayBufferViewInput>(source)) {\n        return yield* toArrayBufferViewAsyncIterator(ArrayCtor, await source);\n    }\n\n    const wrap = async function*<T>(x: T) { yield await x; };\n    const emit = async function* <T extends Iterable<any>>(source: T) {\n        yield* pump((function*(it: Iterator<any>) {\n            let r: IteratorResult<any> = <any> null;\n            do {\n                r = it.next(yield r && r.value);\n            } while (!r.done);\n        })(source[Symbol.iterator]()));\n    };\n\n    const buffers: AsyncIterable<ArrayBufferViewInput> =\n                        (typeof source === 'string') ? wrap(source) // if string, wrap in an AsyncIterableIterator\n                      : (ArrayBuffer.isView(source)) ? wrap(source) // if TypedArray, wrap in an AsyncIterableIterator\n                   : (source instanceof ArrayBuffer) ? wrap(source) // if ArrayBuffer, wrap in an AsyncIterableIterator\n                : (source instanceof SharedArrayBuf) ? wrap(source) // if SharedArrayBuffer, wrap in an AsyncIterableIterator\n          : isIterable<ArrayBufferViewInput>(source) ? emit(source) // If Iterable, wrap in an AsyncIterableIterator and compose the `next` values\n    : !isAsyncIterable<ArrayBufferViewInput>(source) ? wrap(source) // If not an AsyncIterable, treat as a sentinel and wrap in an AsyncIterableIterator\n                                                     : source; // otherwise if AsyncIterable, use it\n\n    yield* pump((async function* (it) {\n        let r: IteratorResult<any> = <any> null;\n        do {\n            r = await it.next(yield toArrayBufferView(ArrayCtor, r));\n        } while (!r.done);\n    })(buffers[Symbol.asyncIterator]()));\n}\n\n/** @ignore */ export const toInt8ArrayAsyncIterator = (input: ArrayBufferViewAsyncIteratorInput) => toArrayBufferViewAsyncIterator(Int8Array, input);\n/** @ignore */ export const toInt16ArrayAsyncIterator = (input: ArrayBufferViewAsyncIteratorInput) => toArrayBufferViewAsyncIterator(Int16Array, input);\n/** @ignore */ export const toInt32ArrayAsyncIterator = (input: ArrayBufferViewAsyncIteratorInput) => toArrayBufferViewAsyncIterator(Int32Array, input);\n/** @ignore */ export const toUint8ArrayAsyncIterator = (input: ArrayBufferViewAsyncIteratorInput) => toArrayBufferViewAsyncIterator(Uint8Array, input);\n/** @ignore */ export const toUint16ArrayAsyncIterator = (input: ArrayBufferViewAsyncIteratorInput) => toArrayBufferViewAsyncIterator(Uint16Array, input);\n/** @ignore */ export const toUint32ArrayAsyncIterator = (input: ArrayBufferViewAsyncIteratorInput) => toArrayBufferViewAsyncIterator(Uint32Array, input);\n/** @ignore */ export const toFloat32ArrayAsyncIterator = (input: ArrayBufferViewAsyncIteratorInput) => toArrayBufferViewAsyncIterator(Float32Array, input);\n/** @ignore */ export const toFloat64ArrayAsyncIterator = (input: ArrayBufferViewAsyncIteratorInput) => toArrayBufferViewAsyncIterator(Float64Array, input);\n/** @ignore */ export const toUint8ClampedArrayAsyncIterator = (input: ArrayBufferViewAsyncIteratorInput) => toArrayBufferViewAsyncIterator(Uint8ClampedArray, input);\n\n/** @ignore */\nexport function rebaseValueOffsets(offset: number, length: number, valueOffsets: Int32Array) {\n    // If we have a non-zero offset, create a new offsets array with the values\n    // shifted by the start offset, such that the new start offset is 0\n    if (offset !== 0) {\n        valueOffsets = valueOffsets.slice(0, length + 1);\n        for (let i = -1; ++i <= length;) {\n            valueOffsets[i] += offset;\n        }\n    }\n    return valueOffsets;\n}\n\n/** @ignore */\nexport function compareArrayLike<T extends ArrayLike<any>>(a: T, b: T) {\n    let i = 0, n = a.length;\n    if (n !== b.length) { return false; }\n    if (n > 0) {\n        do { if (a[i] !== b[i]) { return false; } } while (++i < n);\n    }\n    return true;\n}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport {\n    toUint8Array,\n    joinUint8Arrays,\n    ArrayBufferViewInput,\n    toUint8ArrayIterator,\n    toUint8ArrayAsyncIterator\n} from '../util/buffer';\n\nimport { ReadableDOMStreamOptions } from './interfaces';\n\n/** @ignore */\nexport default {\n    fromIterable<T extends ArrayBufferViewInput>(source: Iterable<T> | T): IterableIterator<Uint8Array> {\n        return pump(fromIterable<T>(source));\n    },\n    fromAsyncIterable<T extends ArrayBufferViewInput>(source: AsyncIterable<T> | PromiseLike<T>): AsyncIterableIterator<Uint8Array> {\n        return pump(fromAsyncIterable<T>(source));\n    },\n    fromDOMStream<T extends ArrayBufferViewInput>(source: ReadableStream<T>): AsyncIterableIterator<Uint8Array> {\n        return pump(fromDOMStream<T>(source));\n    },\n    fromNodeStream(stream: NodeJS.ReadableStream): AsyncIterableIterator<Uint8Array> {\n        return pump(fromNodeStream(stream));\n    },\n    // @ts-ignore\n    toDOMStream<T>(source: Iterable<T> | AsyncIterable<T>, options?: ReadableDOMStreamOptions): ReadableStream<T> {\n        throw new Error(`\"toDOMStream\" not available in this environment`);\n    },\n    // @ts-ignore\n    toNodeStream<T>(source: Iterable<T> | AsyncIterable<T>, options?: import('stream').ReadableOptions): import('stream').Readable {\n        throw new Error(`\"toNodeStream\" not available in this environment`);\n    },\n};\n\n/** @ignore */\nconst pump = <T extends Iterator<any> | AsyncIterator<any>>(iterator: T) => { iterator.next(); return iterator; };\n\n/** @ignore */\nfunction* fromIterable<T extends ArrayBufferViewInput>(source: Iterable<T> | T): IterableIterator<Uint8Array> {\n\n    let done: boolean, threw = false;\n    let buffers: Uint8Array[] = [], buffer: Uint8Array;\n    let cmd: 'peek' | 'read', size: number, bufferLength = 0;\n\n    function byteRange() {\n        if (cmd === 'peek') {\n            return joinUint8Arrays(buffers, size)[0];\n        }\n        [buffer, buffers, bufferLength] = joinUint8Arrays(buffers, size);\n        return buffer;\n    }\n\n    // Yield so the caller can inject the read command before creating the source Iterator\n    ({ cmd, size } = yield <any> null);\n\n    // initialize the iterator\n    let it = toUint8ArrayIterator(source)[Symbol.iterator]();\n\n    try {\n        do {\n            // read the next value\n            ({ done, value: buffer } = isNaN(size - bufferLength) ?\n                it.next(undefined) : it.next(size - bufferLength));\n            // if chunk is not null or empty, push it onto the queue\n            if (!done && buffer.byteLength > 0) {\n                buffers.push(buffer);\n                bufferLength += buffer.byteLength;\n            }\n            // If we have enough bytes in our buffer, yield chunks until we don't\n            if (done || size <= bufferLength) {\n                do {\n                    ({ cmd, size } = yield byteRange());\n                } while (size < bufferLength);\n            }\n        } while (!done);\n    } catch (e) {\n        (threw = true) && (typeof it.throw === 'function') && (it.throw(e));\n    } finally {\n        (threw === false) && (typeof it.return === 'function') && (it.return());\n    }\n}\n\n/** @ignore */\nasync function* fromAsyncIterable<T extends ArrayBufferViewInput>(source: AsyncIterable<T> | PromiseLike<T>): AsyncIterableIterator<Uint8Array> {\n\n    let done: boolean, threw = false;\n    let buffers: Uint8Array[] = [], buffer: Uint8Array;\n    let cmd: 'peek' | 'read', size: number, bufferLength = 0;\n\n    function byteRange() {\n        if (cmd === 'peek') {\n            return joinUint8Arrays(buffers, size)[0];\n        }\n        [buffer, buffers, bufferLength] = joinUint8Arrays(buffers, size);\n        return buffer;\n    }\n\n    // Yield so the caller can inject the read command before creating the source AsyncIterator\n    ({ cmd, size } = yield <any> null);\n\n    // initialize the iterator\n    let it = toUint8ArrayAsyncIterator(source)[Symbol.asyncIterator]();\n\n    try {\n        do {\n            // read the next value\n            ({ done, value: buffer } = isNaN(size - bufferLength)\n                ? await it.next(undefined)\n                : await it.next(size - bufferLength));\n            // if chunk is not null or empty, push it onto the queue\n            if (!done && buffer.byteLength > 0) {\n                buffers.push(buffer);\n                bufferLength += buffer.byteLength;\n            }\n            // If we have enough bytes in our buffer, yield chunks until we don't\n            if (done || size <= bufferLength) {\n                do {\n                    ({ cmd, size } = yield byteRange());\n                } while (size < bufferLength);\n            }\n        } while (!done);\n    } catch (e) {\n        (threw = true) && (typeof it.throw === 'function') && (await it.throw(e));\n    } finally {\n        (threw === false) && (typeof it.return === 'function') && (await it.return());\n    }\n}\n\n// All this manual Uint8Array chunk management can be avoided if/when engines\n// add support for ArrayBuffer.transfer() or ArrayBuffer.prototype.realloc():\n// https://github.com/domenic/proposal-arraybuffer-transfer\n/** @ignore */\nasync function* fromDOMStream<T extends ArrayBufferViewInput>(source: ReadableStream<T>): AsyncIterableIterator<Uint8Array> {\n\n    let done = false, threw = false;\n    let buffers: Uint8Array[] = [], buffer: Uint8Array;\n    let cmd: 'peek' | 'read', size: number, bufferLength = 0;\n\n    function byteRange() {\n        if (cmd === 'peek') {\n            return joinUint8Arrays(buffers, size)[0];\n        }\n        [buffer, buffers, bufferLength] = joinUint8Arrays(buffers, size);\n        return buffer;\n    }\n\n    // Yield so the caller can inject the read command before we establish the ReadableStream lock\n    ({ cmd, size } = yield <any> null);\n\n    // initialize the reader and lock the stream\n    let it = new AdaptiveByteReader(source);\n\n    try {\n        do {\n            // read the next value\n            ({ done, value: buffer } = isNaN(size - bufferLength)\n                ? await it['read'](undefined)\n                : await it['read'](size - bufferLength));\n            // if chunk is not null or empty, push it onto the queue\n            if (!done && buffer.byteLength > 0) {\n                buffers.push(toUint8Array(buffer));\n                bufferLength += buffer.byteLength;\n            }\n            // If we have enough bytes in our buffer, yield chunks until we don't\n            if (done || size <= bufferLength) {\n                do {\n                    ({ cmd, size } = yield byteRange());\n                } while (size < bufferLength);\n            }\n        } while (!done);\n    } catch (e) {\n        (threw = true) && (await it['cancel'](e));\n    } finally {\n        (threw === false) ? (await it['cancel']())\n            : source['locked'] && it.releaseLock();\n    }\n}\n\n/** @ignore */\nclass AdaptiveByteReader<T extends ArrayBufferViewInput> {\n\n    private supportsBYOB: boolean;\n    private byobReader: ReadableStreamBYOBReader | null = null;\n    private defaultReader: ReadableStreamDefaultReader<T> | null = null;\n    private reader: ReadableStreamBYOBReader | ReadableStreamDefaultReader<T> | null;\n\n    constructor(private source: ReadableStream<T>) {\n        try {\n            this.supportsBYOB = !!(this.reader = this.getBYOBReader());\n        } catch (e) {\n            this.supportsBYOB = !!!(this.reader = this.getDefaultReader());\n        }\n    }\n\n    get closed(): Promise<void> {\n        return this.reader ? this.reader['closed'].catch(() => {}) : Promise.resolve();\n    }\n\n    releaseLock(): void {\n        if (this.reader) {\n            this.reader.releaseLock();\n        }\n        this.reader = this.byobReader = this.defaultReader = null;\n    }\n\n    async cancel(reason?: any): Promise<void> {\n        const { reader, source } = this;\n        reader && (await reader['cancel'](reason).catch(() => {}));\n        source && (source['locked'] && this.releaseLock());\n    }\n\n    async read(size?: number): Promise<ReadableStreamReadResult<Uint8Array>> {\n        if (size === 0) {\n            return { done: this.reader == null, value: new Uint8Array(0) };\n        }\n        const result = !this.supportsBYOB || typeof size !== 'number'\n            ? await this.getDefaultReader().read()\n            : await this.readFromBYOBReader(size);\n        !result.done && (result.value = toUint8Array(result as ReadableStreamReadResult<Uint8Array>));\n        return result as ReadableStreamReadResult<Uint8Array>;\n    }\n\n    private getDefaultReader() {\n        if (this.byobReader) { this.releaseLock(); }\n        if (!this.defaultReader) {\n            this.defaultReader = this.source['getReader']();\n            // We have to catch and swallow errors here to avoid uncaught promise rejection exceptions\n            // that seem to be raised when we call `releaseLock()` on this reader. I'm still mystified\n            // about why these errors are raised, but I'm sure there's some important spec reason that\n            // I haven't considered. I hate to employ such an anti-pattern here, but it seems like the\n            // only solution in this case :/\n            this.defaultReader['closed'].catch(() => {});\n        }\n        return (this.reader = this.defaultReader);\n    }\n\n    private getBYOBReader() {\n        if (this.defaultReader) { this.releaseLock(); }\n        if (!this.byobReader) {\n            this.byobReader = this.source['getReader']({ mode: 'byob' });\n            // We have to catch and swallow errors here to avoid uncaught promise rejection exceptions\n            // that seem to be raised when we call `releaseLock()` on this reader. I'm still mystified\n            // about why these errors are raised, but I'm sure there's some important spec reason that\n            // I haven't considered. I hate to employ such an anti-pattern here, but it seems like the\n            // only solution in this case :/\n            this.byobReader['closed'].catch(() => {});\n        }\n        return (this.reader = this.byobReader);\n    }\n\n    // This strategy plucked from the example in the streams spec:\n    // https://streams.spec.whatwg.org/#example-manual-read-bytes\n    private async readFromBYOBReader(size: number) {\n        return await readInto(this.getBYOBReader(), new ArrayBuffer(size), 0, size);\n    }\n}\n\n/** @ignore */\nasync function readInto(reader: ReadableStreamBYOBReader, buffer: ArrayBufferLike, offset: number, size: number): Promise<ReadableStreamReadResult<Uint8Array>> {\n    if (offset >= size) {\n        return { done: false, value: new Uint8Array(buffer, 0, size) };\n    }\n    const { done, value } = await reader.read(new Uint8Array(buffer, offset, size - offset));\n    if (((offset += value.byteLength) < size) && !done) {\n        return await readInto(reader, value.buffer, offset, size);\n    }\n    return { done, value: new Uint8Array(value.buffer, 0, offset) };\n}\n\n/** @ignore */\ntype EventName = 'end' | 'error' | 'readable';\n/** @ignore */\ntype Event = [EventName, (_: any) => void, Promise<[EventName, Error | null]>];\n/** @ignore */\nconst onEvent = <T extends string>(stream: NodeJS.ReadableStream, event: T) => {\n    let handler = (_: any) => resolve([event, _]);\n    let resolve: (value?: [T, any] | PromiseLike<[T, any]>) => void;\n    return [event, handler, new Promise<[T, any]>(\n        (r) => (resolve = r) && stream['once'](event, handler)\n    )] as Event;\n};\n\n/** @ignore */\nasync function* fromNodeStream(stream: NodeJS.ReadableStream): AsyncIterableIterator<Uint8Array> {\n\n    let events: Event[] = [];\n    let event: EventName = 'error';\n    let done = false, err: Error | null = null;\n    let cmd: 'peek' | 'read', size: number, bufferLength = 0;\n    let buffers: Uint8Array[] = [], buffer: Uint8Array | Buffer | string;\n\n    function byteRange() {\n        if (cmd === 'peek') {\n            return joinUint8Arrays(buffers, size)[0];\n        }\n        [buffer, buffers, bufferLength] = joinUint8Arrays(buffers, size);\n        return buffer;\n    }\n\n    // Yield so the caller can inject the read command before we\n    // add the listener for the source stream's 'readable' event.\n    ({ cmd, size } = yield <any> null);\n\n    // ignore stdin if it's a TTY\n    if ((stream as any)['isTTY']) { return yield new Uint8Array(0); }\n\n    try {\n        // initialize the stream event handlers\n        events[0] = onEvent(stream, 'end');\n        events[1] = onEvent(stream, 'error');\n\n        do {\n            events[2] = onEvent(stream, 'readable');\n\n            // wait on the first message event from the stream\n            [event, err] = await Promise.race(events.map((x) => x[2]));\n\n            // if the stream emitted an Error, rethrow it\n            if (event === 'error') { break; }\n            if (!(done = event === 'end')) {\n                // If the size is NaN, request to read everything in the stream's internal buffer\n                if (!isFinite(size - bufferLength)) {\n                    buffer = toUint8Array(stream['read'](undefined));\n                } else {\n                    buffer = toUint8Array(stream['read'](size - bufferLength));\n                    // If the byteLength is 0, then the requested amount is more than the stream has\n                    // in its internal buffer. In this case the stream needs a \"kick\" to tell it to\n                    // continue emitting readable events, so request to read everything the stream\n                    // has in its internal buffer right now.\n                    if (buffer.byteLength < (size - bufferLength)) {\n                        buffer = toUint8Array(stream['read'](undefined));\n                    }\n                }\n                // if chunk is not null or empty, push it onto the queue\n                if (buffer.byteLength > 0) {\n                    buffers.push(buffer);\n                    bufferLength += buffer.byteLength;\n                }\n            }\n            // If we have enough bytes in our buffer, yield chunks until we don't\n            if (done || size <= bufferLength) {\n                do {\n                    ({ cmd, size } = yield byteRange());\n                } while (size < bufferLength);\n            }\n        } while (!done);\n    } finally {\n        await cleanup(events, event === 'error' ? err : null);\n    }\n\n    function cleanup<T extends Error | null | void>(events: Event[], err?: T) {\n        buffer = buffers = <any> null;\n        return new Promise<T>(async (resolve, reject) => {\n            for (const [evt, fn] of events) {\n                stream['off'](evt, fn);\n            }\n            try {\n                // Some stream implementations don't call the destroy callback,\n                // because it's really a node-internal API. Just calling `destroy`\n                // here should be enough to conform to the ReadableStream contract\n                const destroy = (stream as any)['destroy'];\n                destroy && destroy.call(stream, err);\n                err = undefined;\n            } catch (e) { err = e || err; } finally {\n                err != null ? reject(err) : resolve();\n            }\n        });\n    }\n}\n","export default function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}","import defineProperty from \"./defineProperty.js\";\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    enumerableOnly && (symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    })), keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nexport default function _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = null != arguments[i] ? arguments[i] : {};\n    i % 2 ? ownKeys(Object(source), !0).forEach(function (key) {\n      defineProperty(target, key, source[key]);\n    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) {\n      Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n    });\n  }\n\n  return target;\n}","import getPrototypeOf from \"./getPrototypeOf.js\";\nexport default function _superPropBase(object, property) {\n  while (!Object.prototype.hasOwnProperty.call(object, property)) {\n    object = getPrototypeOf(object);\n    if (object === null) break;\n  }\n\n  return object;\n}","import superPropBase from \"./superPropBase.js\";\nexport default function _get() {\n  if (typeof Reflect !== \"undefined\" && Reflect.get) {\n    _get = Reflect.get.bind();\n  } else {\n    _get = function _get(target, property, receiver) {\n      var base = superPropBase(target, property);\n      if (!base) return;\n      var desc = Object.getOwnPropertyDescriptor(base, property);\n\n      if (desc.get) {\n        return desc.get.call(arguments.length < 3 ? target : receiver);\n      }\n\n      return desc.value;\n    };\n  }\n\n  return _get.apply(this, arguments);\n}","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { Data } from './data';\nimport { DataType } from './type';\nimport { Chunked } from './vector/chunked';\n\n/** @ignore */\nexport interface Clonable<R extends AbstractVector> {\n    clone(...args: any[]): R;\n}\n\n/** @ignore */\nexport interface Sliceable<R extends AbstractVector> {\n    slice(begin?: number, end?: number): R;\n}\n\n/** @ignore */\nexport interface Applicative<T extends DataType, R extends Chunked> {\n    concat(...others: Vector<T>[]): R;\n    readonly [Symbol.isConcatSpreadable]: boolean;\n}\n\nexport interface AbstractVector<T extends DataType = any>\n    extends Clonable<Vector<T>>,\n            Sliceable<Vector<T>>,\n            Applicative<T, Chunked<T>> {\n\n    readonly TType: T['TType'];\n    readonly TArray: T['TArray'];\n    readonly TValue: T['TValue'];\n}\n\nexport abstract class AbstractVector<T extends DataType = any> implements Iterable<T['TValue'] | null> {\n\n    public abstract readonly data: Data<T>;\n    public abstract readonly type: T;\n    public abstract readonly typeId: T['TType'];\n    public abstract readonly length: number;\n    public abstract readonly stride: number;\n    public abstract readonly nullCount: number;\n    public abstract readonly byteLength: number;\n    public abstract readonly numChildren: number;\n\n    public abstract readonly ArrayType: T['ArrayType'];\n\n    public abstract isValid(index: number): boolean;\n    public abstract get(index: number): T['TValue'] | null;\n    public abstract set(index: number, value: T['TValue'] | null): void;\n    public abstract indexOf(value: T['TValue'] | null, fromIndex?: number): number;\n    public abstract [Symbol.iterator](): IterableIterator<T['TValue'] | null>;\n\n    public abstract toArray(): T['TArray'];\n    public abstract getChildAt<R extends DataType = any>(index: number): Vector<R> | null;\n}\n\nexport { AbstractVector as Vector };\n","/* tslint:disable:class-name */\n\n// automatically generated by the FlatBuffers compiler, do not modify\n\nimport { flatbuffers } from 'flatbuffers';\n/**\n * @enum {number}\n */\nexport namespace org.apache.arrow.flatbuf {\n    export enum MetadataVersion {\n        /**\n         * 0.1.0\n         */\n        V1 = 0,\n\n        /**\n         * 0.2.0\n         */\n        V2 = 1,\n\n        /**\n         * 0.3.0 -> 0.7.1\n         */\n        V3 = 2,\n\n        /**\n         * >= 0.8.0\n         */\n        V4 = 3\n    }\n}\n\n/**\n * @enum {number}\n */\nexport namespace org.apache.arrow.flatbuf {\n    export enum UnionMode {\n        Sparse = 0,\n        Dense = 1\n    }\n}\n\n/**\n * @enum {number}\n */\nexport namespace org.apache.arrow.flatbuf {\n    export enum Precision {\n        HALF = 0,\n        SINGLE = 1,\n        DOUBLE = 2\n    }\n}\n\n/**\n * @enum {number}\n */\nexport namespace org.apache.arrow.flatbuf {\n    export enum DateUnit {\n        DAY = 0,\n        MILLISECOND = 1\n    }\n}\n\n/**\n * @enum {number}\n */\nexport namespace org.apache.arrow.flatbuf {\n    export enum TimeUnit {\n        SECOND = 0,\n        MILLISECOND = 1,\n        MICROSECOND = 2,\n        NANOSECOND = 3\n    }\n}\n\n/**\n * @enum {number}\n */\nexport namespace org.apache.arrow.flatbuf {\n    export enum IntervalUnit {\n        YEAR_MONTH = 0,\n        DAY_TIME = 1\n    }\n}\n\n/**\n * ----------------------------------------------------------------------\n * Top-level Type value, enabling extensible type-specific metadata. We can\n * add new logical types to Type without breaking backwards compatibility\n *\n * @enum {number}\n */\nexport namespace org.apache.arrow.flatbuf {\n    export enum Type {\n        NONE = 0,\n        Null = 1,\n        Int = 2,\n        FloatingPoint = 3,\n        Binary = 4,\n        Utf8 = 5,\n        Bool = 6,\n        Decimal = 7,\n        Date = 8,\n        Time = 9,\n        Timestamp = 10,\n        Interval = 11,\n        List = 12,\n        Struct_ = 13,\n        Union = 14,\n        FixedSizeBinary = 15,\n        FixedSizeList = 16,\n        Map = 17,\n        Duration = 18,\n        LargeBinary = 19,\n        LargeUtf8 = 20,\n        LargeList = 21\n    }\n}\n\n/**\n * ----------------------------------------------------------------------\n * Endianness of the platform producing the data\n *\n * @enum {number}\n */\nexport namespace org.apache.arrow.flatbuf {\n    export enum Endianness {\n        Little = 0,\n        Big = 1\n    }\n}\n\n/**\n * These are stored in the flatbuffer in the Type union below\n *\n * @constructor\n */\nexport namespace org.apache.arrow.flatbuf {\n    export class Null {\n        bb: flatbuffers.ByteBuffer | null = null;\n\n        bb_pos: number = 0;\n        /**\n         * @param number i\n         * @param flatbuffers.ByteBuffer bb\n         * @returns Null\n         */\n        __init(i: number, bb: flatbuffers.ByteBuffer): Null {\n            this.bb_pos = i;\n            this.bb = bb;\n            return this;\n        }\n\n        /**\n         * @param flatbuffers.ByteBuffer bb\n         * @param Null= obj\n         * @returns Null\n         */\n        static getRootAsNull(bb: flatbuffers.ByteBuffer, obj?: Null): Null {\n            return (obj || new Null).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         */\n        static startNull(builder: flatbuffers.Builder) {\n            builder.startObject(0);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @returns flatbuffers.Offset\n         */\n        static endNull(builder: flatbuffers.Builder): flatbuffers.Offset {\n            let offset = builder.endObject();\n            return offset;\n        }\n\n        static createNull(builder: flatbuffers.Builder): flatbuffers.Offset {\n            Null.startNull(builder);\n            return Null.endNull(builder);\n        }\n    }\n}\n/**\n * A Struct_ in the flatbuffer metadata is the same as an Arrow Struct\n * (according to the physical memory layout). We used Struct_ here as\n * Struct is a reserved word in Flatbuffers\n *\n * @constructor\n */\nexport namespace org.apache.arrow.flatbuf {\n    export class Struct_ {\n        bb: flatbuffers.ByteBuffer | null = null;\n\n        bb_pos: number = 0;\n        /**\n         * @param number i\n         * @param flatbuffers.ByteBuffer bb\n         * @returns Struct_\n         */\n        __init(i: number, bb: flatbuffers.ByteBuffer): Struct_ {\n            this.bb_pos = i;\n            this.bb = bb;\n            return this;\n        }\n\n        /**\n         * @param flatbuffers.ByteBuffer bb\n         * @param Struct_= obj\n         * @returns Struct_\n         */\n        static getRootAsStruct_(bb: flatbuffers.ByteBuffer, obj?: Struct_): Struct_ {\n            return (obj || new Struct_).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         */\n        static startStruct_(builder: flatbuffers.Builder) {\n            builder.startObject(0);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @returns flatbuffers.Offset\n         */\n        static endStruct_(builder: flatbuffers.Builder): flatbuffers.Offset {\n            let offset = builder.endObject();\n            return offset;\n        }\n\n        static createStruct_(builder: flatbuffers.Builder): flatbuffers.Offset {\n            Struct_.startStruct_(builder);\n            return Struct_.endStruct_(builder);\n        }\n    }\n}\n/**\n * @constructor\n */\nexport namespace org.apache.arrow.flatbuf {\n    export class List {\n        bb: flatbuffers.ByteBuffer | null = null;\n\n        bb_pos: number = 0;\n        /**\n         * @param number i\n         * @param flatbuffers.ByteBuffer bb\n         * @returns List\n         */\n        __init(i: number, bb: flatbuffers.ByteBuffer): List {\n            this.bb_pos = i;\n            this.bb = bb;\n            return this;\n        }\n\n        /**\n         * @param flatbuffers.ByteBuffer bb\n         * @param List= obj\n         * @returns List\n         */\n        static getRootAsList(bb: flatbuffers.ByteBuffer, obj?: List): List {\n            return (obj || new List).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         */\n        static startList(builder: flatbuffers.Builder) {\n            builder.startObject(0);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @returns flatbuffers.Offset\n         */\n        static endList(builder: flatbuffers.Builder): flatbuffers.Offset {\n            let offset = builder.endObject();\n            return offset;\n        }\n\n        static createList(builder: flatbuffers.Builder): flatbuffers.Offset {\n            List.startList(builder);\n            return List.endList(builder);\n        }\n    }\n}\n/**\n * Same as List, but with 64-bit offsets, allowing to represent\n * extremely large data values.\n *\n * @constructor\n */\nexport namespace org.apache.arrow.flatbuf {\n    export class LargeList {\n        bb: flatbuffers.ByteBuffer | null = null;\n\n        bb_pos: number = 0;\n        /**\n         * @param number i\n         * @param flatbuffers.ByteBuffer bb\n         * @returns LargeList\n         */\n        __init(i: number, bb: flatbuffers.ByteBuffer): LargeList {\n            this.bb_pos = i;\n            this.bb = bb;\n            return this;\n        }\n\n        /**\n         * @param flatbuffers.ByteBuffer bb\n         * @param LargeList= obj\n         * @returns LargeList\n         */\n        static getRootAsLargeList(bb: flatbuffers.ByteBuffer, obj?: LargeList): LargeList {\n            return (obj || new LargeList).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         */\n        static startLargeList(builder: flatbuffers.Builder) {\n            builder.startObject(0);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @returns flatbuffers.Offset\n         */\n        static endLargeList(builder: flatbuffers.Builder): flatbuffers.Offset {\n            let offset = builder.endObject();\n            return offset;\n        }\n\n        static createLargeList(builder: flatbuffers.Builder): flatbuffers.Offset {\n            LargeList.startLargeList(builder);\n            return LargeList.endLargeList(builder);\n        }\n    }\n}\n/**\n * @constructor\n */\nexport namespace org.apache.arrow.flatbuf {\n    export class FixedSizeList {\n        bb: flatbuffers.ByteBuffer | null = null;\n\n        bb_pos: number = 0;\n        /**\n         * @param number i\n         * @param flatbuffers.ByteBuffer bb\n         * @returns FixedSizeList\n         */\n        __init(i: number, bb: flatbuffers.ByteBuffer): FixedSizeList {\n            this.bb_pos = i;\n            this.bb = bb;\n            return this;\n        }\n\n        /**\n         * @param flatbuffers.ByteBuffer bb\n         * @param FixedSizeList= obj\n         * @returns FixedSizeList\n         */\n        static getRootAsFixedSizeList(bb: flatbuffers.ByteBuffer, obj?: FixedSizeList): FixedSizeList {\n            return (obj || new FixedSizeList).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n        }\n\n        /**\n         * Number of list items per value\n         *\n         * @returns number\n         */\n        listSize(): number {\n            let offset = this.bb!.__offset(this.bb_pos, 4);\n            return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         */\n        static startFixedSizeList(builder: flatbuffers.Builder) {\n            builder.startObject(1);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param number listSize\n         */\n        static addListSize(builder: flatbuffers.Builder, listSize: number) {\n            builder.addFieldInt32(0, listSize, 0);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @returns flatbuffers.Offset\n         */\n        static endFixedSizeList(builder: flatbuffers.Builder): flatbuffers.Offset {\n            let offset = builder.endObject();\n            return offset;\n        }\n\n        static createFixedSizeList(builder: flatbuffers.Builder, listSize: number): flatbuffers.Offset {\n            FixedSizeList.startFixedSizeList(builder);\n            FixedSizeList.addListSize(builder, listSize);\n            return FixedSizeList.endFixedSizeList(builder);\n        }\n    }\n}\n/**\n * A Map is a logical nested type that is represented as\n *\n * List<entry: Struct<key: K, value: V>>\n *\n * In this layout, the keys and values are each respectively contiguous. We do\n * not constrain the key and value types, so the application is responsible\n * for ensuring that the keys are hashable and unique. Whether the keys are sorted\n * may be set in the metadata for this field\n *\n * In a Field with Map type, the Field has a child Struct field, which then\n * has two children: key type and the second the value type. The names of the\n * child fields may be respectively \"entry\", \"key\", and \"value\", but this is\n * not enforced\n *\n * Map\n *   - child[0] entry: Struct\n *     - child[0] key: K\n *     - child[1] value: V\n *\n * Neither the \"entry\" field nor the \"key\" field may be nullable.\n *\n * The metadata is structured so that Arrow systems without special handling\n * for Map can make Map an alias for List. The \"layout\" attribute for the Map\n * field must have the same contents as a List.\n *\n * @constructor\n */\nexport namespace org.apache.arrow.flatbuf {\n    export class Map {\n        bb: flatbuffers.ByteBuffer | null = null;\n\n        bb_pos: number = 0;\n        /**\n         * @param number i\n         * @param flatbuffers.ByteBuffer bb\n         * @returns Map\n         */\n        __init(i: number, bb: flatbuffers.ByteBuffer): Map {\n            this.bb_pos = i;\n            this.bb = bb;\n            return this;\n        }\n\n        /**\n         * @param flatbuffers.ByteBuffer bb\n         * @param Map= obj\n         * @returns Map\n         */\n        static getRootAsMap(bb: flatbuffers.ByteBuffer, obj?: Map): Map {\n            return (obj || new Map).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n        }\n\n        /**\n         * Set to true if the keys within each value are sorted\n         *\n         * @returns boolean\n         */\n        keysSorted(): boolean {\n            let offset = this.bb!.__offset(this.bb_pos, 4);\n            return offset ? !!this.bb!.readInt8(this.bb_pos + offset) : false;\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         */\n        static startMap(builder: flatbuffers.Builder) {\n            builder.startObject(1);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param boolean keysSorted\n         */\n        static addKeysSorted(builder: flatbuffers.Builder, keysSorted: boolean) {\n            builder.addFieldInt8(0, +keysSorted, +false);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @returns flatbuffers.Offset\n         */\n        static endMap(builder: flatbuffers.Builder): flatbuffers.Offset {\n            let offset = builder.endObject();\n            return offset;\n        }\n\n        static createMap(builder: flatbuffers.Builder, keysSorted: boolean): flatbuffers.Offset {\n            Map.startMap(builder);\n            Map.addKeysSorted(builder, keysSorted);\n            return Map.endMap(builder);\n        }\n    }\n}\n/**\n * A union is a complex type with children in Field\n * By default ids in the type vector refer to the offsets in the children\n * optionally typeIds provides an indirection between the child offset and the type id\n * for each child typeIds[offset] is the id used in the type vector\n *\n * @constructor\n */\nexport namespace org.apache.arrow.flatbuf {\n    export class Union {\n        bb: flatbuffers.ByteBuffer | null = null;\n\n        bb_pos: number = 0;\n        /**\n         * @param number i\n         * @param flatbuffers.ByteBuffer bb\n         * @returns Union\n         */\n        __init(i: number, bb: flatbuffers.ByteBuffer): Union {\n            this.bb_pos = i;\n            this.bb = bb;\n            return this;\n        }\n\n        /**\n         * @param flatbuffers.ByteBuffer bb\n         * @param Union= obj\n         * @returns Union\n         */\n        static getRootAsUnion(bb: flatbuffers.ByteBuffer, obj?: Union): Union {\n            return (obj || new Union).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n        }\n\n        /**\n         * @returns org.apache.arrow.flatbuf.UnionMode\n         */\n        mode(): org.apache.arrow.flatbuf.UnionMode {\n            let offset = this.bb!.__offset(this.bb_pos, 4);\n            return offset ? /**  */ (this.bb!.readInt16(this.bb_pos + offset)) : org.apache.arrow.flatbuf.UnionMode.Sparse;\n        }\n\n        /**\n         * @param number index\n         * @returns number\n         */\n        typeIds(index: number): number | null {\n            let offset = this.bb!.__offset(this.bb_pos, 6);\n            return offset ? this.bb!.readInt32(this.bb!.__vector(this.bb_pos + offset) + index * 4) : 0;\n        }\n\n        /**\n         * @returns number\n         */\n        typeIdsLength(): number {\n            let offset = this.bb!.__offset(this.bb_pos, 6);\n            return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\n        }\n\n        /**\n         * @returns Int32Array\n         */\n        typeIdsArray(): Int32Array | null {\n            let offset = this.bb!.__offset(this.bb_pos, 6);\n            return offset ? new Int32Array(this.bb!.bytes().buffer, this.bb!.bytes().byteOffset + this.bb!.__vector(this.bb_pos + offset), this.bb!.__vector_len(this.bb_pos + offset)) : null;\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         */\n        static startUnion(builder: flatbuffers.Builder) {\n            builder.startObject(2);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param org.apache.arrow.flatbuf.UnionMode mode\n         */\n        static addMode(builder: flatbuffers.Builder, mode: org.apache.arrow.flatbuf.UnionMode) {\n            builder.addFieldInt16(0, mode, org.apache.arrow.flatbuf.UnionMode.Sparse);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param flatbuffers.Offset typeIdsOffset\n         */\n        static addTypeIds(builder: flatbuffers.Builder, typeIdsOffset: flatbuffers.Offset) {\n            builder.addFieldOffset(1, typeIdsOffset, 0);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param Array.<number> data\n         * @returns flatbuffers.Offset\n         */\n        static createTypeIdsVector(builder: flatbuffers.Builder, data: number[] | Int32Array): flatbuffers.Offset {\n            builder.startVector(4, data.length, 4);\n            for (let i = data.length - 1; i >= 0; i--) {\n                builder.addInt32(data[i]);\n            }\n            return builder.endVector();\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param number numElems\n         */\n        static startTypeIdsVector(builder: flatbuffers.Builder, numElems: number) {\n            builder.startVector(4, numElems, 4);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @returns flatbuffers.Offset\n         */\n        static endUnion(builder: flatbuffers.Builder): flatbuffers.Offset {\n            let offset = builder.endObject();\n            return offset;\n        }\n\n        static createUnion(builder: flatbuffers.Builder, mode: org.apache.arrow.flatbuf.UnionMode, typeIdsOffset: flatbuffers.Offset): flatbuffers.Offset {\n            Union.startUnion(builder);\n            Union.addMode(builder, mode);\n            Union.addTypeIds(builder, typeIdsOffset);\n            return Union.endUnion(builder);\n        }\n    }\n}\n/**\n * @constructor\n */\nexport namespace org.apache.arrow.flatbuf {\n    export class Int {\n        bb: flatbuffers.ByteBuffer | null = null;\n\n        bb_pos: number = 0;\n        /**\n         * @param number i\n         * @param flatbuffers.ByteBuffer bb\n         * @returns Int\n         */\n        __init(i: number, bb: flatbuffers.ByteBuffer): Int {\n            this.bb_pos = i;\n            this.bb = bb;\n            return this;\n        }\n\n        /**\n         * @param flatbuffers.ByteBuffer bb\n         * @param Int= obj\n         * @returns Int\n         */\n        static getRootAsInt(bb: flatbuffers.ByteBuffer, obj?: Int): Int {\n            return (obj || new Int).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n        }\n\n        /**\n         * @returns number\n         */\n        bitWidth(): number {\n            let offset = this.bb!.__offset(this.bb_pos, 4);\n            return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;\n        }\n\n        /**\n         * @returns boolean\n         */\n        isSigned(): boolean {\n            let offset = this.bb!.__offset(this.bb_pos, 6);\n            return offset ? !!this.bb!.readInt8(this.bb_pos + offset) : false;\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         */\n        static startInt(builder: flatbuffers.Builder) {\n            builder.startObject(2);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param number bitWidth\n         */\n        static addBitWidth(builder: flatbuffers.Builder, bitWidth: number) {\n            builder.addFieldInt32(0, bitWidth, 0);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param boolean isSigned\n         */\n        static addIsSigned(builder: flatbuffers.Builder, isSigned: boolean) {\n            builder.addFieldInt8(1, +isSigned, +false);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @returns flatbuffers.Offset\n         */\n        static endInt(builder: flatbuffers.Builder): flatbuffers.Offset {\n            let offset = builder.endObject();\n            return offset;\n        }\n\n        static createInt(builder: flatbuffers.Builder, bitWidth: number, isSigned: boolean): flatbuffers.Offset {\n            Int.startInt(builder);\n            Int.addBitWidth(builder, bitWidth);\n            Int.addIsSigned(builder, isSigned);\n            return Int.endInt(builder);\n        }\n    }\n}\n/**\n * @constructor\n */\nexport namespace org.apache.arrow.flatbuf {\n    export class FloatingPoint {\n        bb: flatbuffers.ByteBuffer | null = null;\n\n        bb_pos: number = 0;\n        /**\n         * @param number i\n         * @param flatbuffers.ByteBuffer bb\n         * @returns FloatingPoint\n         */\n        __init(i: number, bb: flatbuffers.ByteBuffer): FloatingPoint {\n            this.bb_pos = i;\n            this.bb = bb;\n            return this;\n        }\n\n        /**\n         * @param flatbuffers.ByteBuffer bb\n         * @param FloatingPoint= obj\n         * @returns FloatingPoint\n         */\n        static getRootAsFloatingPoint(bb: flatbuffers.ByteBuffer, obj?: FloatingPoint): FloatingPoint {\n            return (obj || new FloatingPoint).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n        }\n\n        /**\n         * @returns org.apache.arrow.flatbuf.Precision\n         */\n        precision(): org.apache.arrow.flatbuf.Precision {\n            let offset = this.bb!.__offset(this.bb_pos, 4);\n            return offset ? /**  */ (this.bb!.readInt16(this.bb_pos + offset)) : org.apache.arrow.flatbuf.Precision.HALF;\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         */\n        static startFloatingPoint(builder: flatbuffers.Builder) {\n            builder.startObject(1);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param org.apache.arrow.flatbuf.Precision precision\n         */\n        static addPrecision(builder: flatbuffers.Builder, precision: org.apache.arrow.flatbuf.Precision) {\n            builder.addFieldInt16(0, precision, org.apache.arrow.flatbuf.Precision.HALF);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @returns flatbuffers.Offset\n         */\n        static endFloatingPoint(builder: flatbuffers.Builder): flatbuffers.Offset {\n            let offset = builder.endObject();\n            return offset;\n        }\n\n        static createFloatingPoint(builder: flatbuffers.Builder, precision: org.apache.arrow.flatbuf.Precision): flatbuffers.Offset {\n            FloatingPoint.startFloatingPoint(builder);\n            FloatingPoint.addPrecision(builder, precision);\n            return FloatingPoint.endFloatingPoint(builder);\n        }\n    }\n}\n/**\n * Unicode with UTF-8 encoding\n *\n * @constructor\n */\nexport namespace org.apache.arrow.flatbuf {\n    export class Utf8 {\n        bb: flatbuffers.ByteBuffer | null = null;\n\n        bb_pos: number = 0;\n        /**\n         * @param number i\n         * @param flatbuffers.ByteBuffer bb\n         * @returns Utf8\n         */\n        __init(i: number, bb: flatbuffers.ByteBuffer): Utf8 {\n            this.bb_pos = i;\n            this.bb = bb;\n            return this;\n        }\n\n        /**\n         * @param flatbuffers.ByteBuffer bb\n         * @param Utf8= obj\n         * @returns Utf8\n         */\n        static getRootAsUtf8(bb: flatbuffers.ByteBuffer, obj?: Utf8): Utf8 {\n            return (obj || new Utf8).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         */\n        static startUtf8(builder: flatbuffers.Builder) {\n            builder.startObject(0);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @returns flatbuffers.Offset\n         */\n        static endUtf8(builder: flatbuffers.Builder): flatbuffers.Offset {\n            let offset = builder.endObject();\n            return offset;\n        }\n\n        static createUtf8(builder: flatbuffers.Builder): flatbuffers.Offset {\n            Utf8.startUtf8(builder);\n            return Utf8.endUtf8(builder);\n        }\n    }\n}\n/**\n * Opaque binary data\n *\n * @constructor\n */\nexport namespace org.apache.arrow.flatbuf {\n    export class Binary {\n        bb: flatbuffers.ByteBuffer | null = null;\n\n        bb_pos: number = 0;\n        /**\n         * @param number i\n         * @param flatbuffers.ByteBuffer bb\n         * @returns Binary\n         */\n        __init(i: number, bb: flatbuffers.ByteBuffer): Binary {\n            this.bb_pos = i;\n            this.bb = bb;\n            return this;\n        }\n\n        /**\n         * @param flatbuffers.ByteBuffer bb\n         * @param Binary= obj\n         * @returns Binary\n         */\n        static getRootAsBinary(bb: flatbuffers.ByteBuffer, obj?: Binary): Binary {\n            return (obj || new Binary).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         */\n        static startBinary(builder: flatbuffers.Builder) {\n            builder.startObject(0);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @returns flatbuffers.Offset\n         */\n        static endBinary(builder: flatbuffers.Builder): flatbuffers.Offset {\n            let offset = builder.endObject();\n            return offset;\n        }\n\n        static createBinary(builder: flatbuffers.Builder): flatbuffers.Offset {\n            Binary.startBinary(builder);\n            return Binary.endBinary(builder);\n        }\n    }\n}\n/**\n * Same as Utf8, but with 64-bit offsets, allowing to represent\n * extremely large data values.\n *\n * @constructor\n */\nexport namespace org.apache.arrow.flatbuf {\n    export class LargeUtf8 {\n        bb: flatbuffers.ByteBuffer | null = null;\n\n        bb_pos: number = 0;\n        /**\n         * @param number i\n         * @param flatbuffers.ByteBuffer bb\n         * @returns LargeUtf8\n         */\n        __init(i: number, bb: flatbuffers.ByteBuffer): LargeUtf8 {\n            this.bb_pos = i;\n            this.bb = bb;\n            return this;\n        }\n\n        /**\n         * @param flatbuffers.ByteBuffer bb\n         * @param LargeUtf8= obj\n         * @returns LargeUtf8\n         */\n        static getRootAsLargeUtf8(bb: flatbuffers.ByteBuffer, obj?: LargeUtf8): LargeUtf8 {\n            return (obj || new LargeUtf8).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         */\n        static startLargeUtf8(builder: flatbuffers.Builder) {\n            builder.startObject(0);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @returns flatbuffers.Offset\n         */\n        static endLargeUtf8(builder: flatbuffers.Builder): flatbuffers.Offset {\n            let offset = builder.endObject();\n            return offset;\n        }\n\n        static createLargeUtf8(builder: flatbuffers.Builder): flatbuffers.Offset {\n            LargeUtf8.startLargeUtf8(builder);\n            return LargeUtf8.endLargeUtf8(builder);\n        }\n    }\n}\n/**\n * Same as Binary, but with 64-bit offsets, allowing to represent\n * extremely large data values.\n *\n * @constructor\n */\nexport namespace org.apache.arrow.flatbuf {\n    export class LargeBinary {\n        bb: flatbuffers.ByteBuffer | null = null;\n\n        bb_pos: number = 0;\n        /**\n         * @param number i\n         * @param flatbuffers.ByteBuffer bb\n         * @returns LargeBinary\n         */\n        __init(i: number, bb: flatbuffers.ByteBuffer): LargeBinary {\n            this.bb_pos = i;\n            this.bb = bb;\n            return this;\n        }\n\n        /**\n         * @param flatbuffers.ByteBuffer bb\n         * @param LargeBinary= obj\n         * @returns LargeBinary\n         */\n        static getRootAsLargeBinary(bb: flatbuffers.ByteBuffer, obj?: LargeBinary): LargeBinary {\n            return (obj || new LargeBinary).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         */\n        static startLargeBinary(builder: flatbuffers.Builder) {\n            builder.startObject(0);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @returns flatbuffers.Offset\n         */\n        static endLargeBinary(builder: flatbuffers.Builder): flatbuffers.Offset {\n            let offset = builder.endObject();\n            return offset;\n        }\n\n        static createLargeBinary(builder: flatbuffers.Builder): flatbuffers.Offset {\n            LargeBinary.startLargeBinary(builder);\n            return LargeBinary.endLargeBinary(builder);\n        }\n    }\n}\n/**\n * @constructor\n */\nexport namespace org.apache.arrow.flatbuf {\n    export class FixedSizeBinary {\n        bb: flatbuffers.ByteBuffer | null = null;\n\n        bb_pos: number = 0;\n        /**\n         * @param number i\n         * @param flatbuffers.ByteBuffer bb\n         * @returns FixedSizeBinary\n         */\n        __init(i: number, bb: flatbuffers.ByteBuffer): FixedSizeBinary {\n            this.bb_pos = i;\n            this.bb = bb;\n            return this;\n        }\n\n        /**\n         * @param flatbuffers.ByteBuffer bb\n         * @param FixedSizeBinary= obj\n         * @returns FixedSizeBinary\n         */\n        static getRootAsFixedSizeBinary(bb: flatbuffers.ByteBuffer, obj?: FixedSizeBinary): FixedSizeBinary {\n            return (obj || new FixedSizeBinary).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n        }\n\n        /**\n         * Number of bytes per value\n         *\n         * @returns number\n         */\n        byteWidth(): number {\n            let offset = this.bb!.__offset(this.bb_pos, 4);\n            return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         */\n        static startFixedSizeBinary(builder: flatbuffers.Builder) {\n            builder.startObject(1);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param number byteWidth\n         */\n        static addByteWidth(builder: flatbuffers.Builder, byteWidth: number) {\n            builder.addFieldInt32(0, byteWidth, 0);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @returns flatbuffers.Offset\n         */\n        static endFixedSizeBinary(builder: flatbuffers.Builder): flatbuffers.Offset {\n            let offset = builder.endObject();\n            return offset;\n        }\n\n        static createFixedSizeBinary(builder: flatbuffers.Builder, byteWidth: number): flatbuffers.Offset {\n            FixedSizeBinary.startFixedSizeBinary(builder);\n            FixedSizeBinary.addByteWidth(builder, byteWidth);\n            return FixedSizeBinary.endFixedSizeBinary(builder);\n        }\n    }\n}\n/**\n * @constructor\n */\nexport namespace org.apache.arrow.flatbuf {\n    export class Bool {\n        bb: flatbuffers.ByteBuffer | null = null;\n\n        bb_pos: number = 0;\n        /**\n         * @param number i\n         * @param flatbuffers.ByteBuffer bb\n         * @returns Bool\n         */\n        __init(i: number, bb: flatbuffers.ByteBuffer): Bool {\n            this.bb_pos = i;\n            this.bb = bb;\n            return this;\n        }\n\n        /**\n         * @param flatbuffers.ByteBuffer bb\n         * @param Bool= obj\n         * @returns Bool\n         */\n        static getRootAsBool(bb: flatbuffers.ByteBuffer, obj?: Bool): Bool {\n            return (obj || new Bool).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         */\n        static startBool(builder: flatbuffers.Builder) {\n            builder.startObject(0);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @returns flatbuffers.Offset\n         */\n        static endBool(builder: flatbuffers.Builder): flatbuffers.Offset {\n            let offset = builder.endObject();\n            return offset;\n        }\n\n        static createBool(builder: flatbuffers.Builder): flatbuffers.Offset {\n            Bool.startBool(builder);\n            return Bool.endBool(builder);\n        }\n    }\n}\n/**\n * @constructor\n */\nexport namespace org.apache.arrow.flatbuf {\n    export class Decimal {\n        bb: flatbuffers.ByteBuffer | null = null;\n\n        bb_pos: number = 0;\n        /**\n         * @param number i\n         * @param flatbuffers.ByteBuffer bb\n         * @returns Decimal\n         */\n        __init(i: number, bb: flatbuffers.ByteBuffer): Decimal {\n            this.bb_pos = i;\n            this.bb = bb;\n            return this;\n        }\n\n        /**\n         * @param flatbuffers.ByteBuffer bb\n         * @param Decimal= obj\n         * @returns Decimal\n         */\n        static getRootAsDecimal(bb: flatbuffers.ByteBuffer, obj?: Decimal): Decimal {\n            return (obj || new Decimal).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n        }\n\n        /**\n         * Total number of decimal digits\n         *\n         * @returns number\n         */\n        precision(): number {\n            let offset = this.bb!.__offset(this.bb_pos, 4);\n            return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;\n        }\n\n        /**\n         * Number of digits after the decimal point \".\"\n         *\n         * @returns number\n         */\n        scale(): number {\n            let offset = this.bb!.__offset(this.bb_pos, 6);\n            return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         */\n        static startDecimal(builder: flatbuffers.Builder) {\n            builder.startObject(2);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param number precision\n         */\n        static addPrecision(builder: flatbuffers.Builder, precision: number) {\n            builder.addFieldInt32(0, precision, 0);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param number scale\n         */\n        static addScale(builder: flatbuffers.Builder, scale: number) {\n            builder.addFieldInt32(1, scale, 0);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @returns flatbuffers.Offset\n         */\n        static endDecimal(builder: flatbuffers.Builder): flatbuffers.Offset {\n            let offset = builder.endObject();\n            return offset;\n        }\n\n        static createDecimal(builder: flatbuffers.Builder, precision: number, scale: number): flatbuffers.Offset {\n            Decimal.startDecimal(builder);\n            Decimal.addPrecision(builder, precision);\n            Decimal.addScale(builder, scale);\n            return Decimal.endDecimal(builder);\n        }\n    }\n}\n/**\n * Date is either a 32-bit or 64-bit type representing elapsed time since UNIX\n * epoch (1970-01-01), stored in either of two units:\n *\n * * Milliseconds (64 bits) indicating UNIX time elapsed since the epoch (no\n *   leap seconds), where the values are evenly divisible by 86400000\n * * Days (32 bits) since the UNIX epoch\n *\n * @constructor\n */\nexport namespace org.apache.arrow.flatbuf {\n    export class Date {\n        bb: flatbuffers.ByteBuffer | null = null;\n\n        bb_pos: number = 0;\n        /**\n         * @param number i\n         * @param flatbuffers.ByteBuffer bb\n         * @returns Date\n         */\n        __init(i: number, bb: flatbuffers.ByteBuffer): Date {\n            this.bb_pos = i;\n            this.bb = bb;\n            return this;\n        }\n\n        /**\n         * @param flatbuffers.ByteBuffer bb\n         * @param Date= obj\n         * @returns Date\n         */\n        static getRootAsDate(bb: flatbuffers.ByteBuffer, obj?: Date): Date {\n            return (obj || new Date).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n        }\n\n        /**\n         * @returns org.apache.arrow.flatbuf.DateUnit\n         */\n        unit(): org.apache.arrow.flatbuf.DateUnit {\n            let offset = this.bb!.__offset(this.bb_pos, 4);\n            return offset ? /**  */ (this.bb!.readInt16(this.bb_pos + offset)) : org.apache.arrow.flatbuf.DateUnit.MILLISECOND;\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         */\n        static startDate(builder: flatbuffers.Builder) {\n            builder.startObject(1);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param org.apache.arrow.flatbuf.DateUnit unit\n         */\n        static addUnit(builder: flatbuffers.Builder, unit: org.apache.arrow.flatbuf.DateUnit) {\n            builder.addFieldInt16(0, unit, org.apache.arrow.flatbuf.DateUnit.MILLISECOND);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @returns flatbuffers.Offset\n         */\n        static endDate(builder: flatbuffers.Builder): flatbuffers.Offset {\n            let offset = builder.endObject();\n            return offset;\n        }\n\n        static createDate(builder: flatbuffers.Builder, unit: org.apache.arrow.flatbuf.DateUnit): flatbuffers.Offset {\n            Date.startDate(builder);\n            Date.addUnit(builder, unit);\n            return Date.endDate(builder);\n        }\n    }\n}\n/**\n * Time type. The physical storage type depends on the unit\n * - SECOND and MILLISECOND: 32 bits\n * - MICROSECOND and NANOSECOND: 64 bits\n *\n * @constructor\n */\nexport namespace org.apache.arrow.flatbuf {\n    export class Time {\n        bb: flatbuffers.ByteBuffer | null = null;\n\n        bb_pos: number = 0;\n        /**\n         * @param number i\n         * @param flatbuffers.ByteBuffer bb\n         * @returns Time\n         */\n        __init(i: number, bb: flatbuffers.ByteBuffer): Time {\n            this.bb_pos = i;\n            this.bb = bb;\n            return this;\n        }\n\n        /**\n         * @param flatbuffers.ByteBuffer bb\n         * @param Time= obj\n         * @returns Time\n         */\n        static getRootAsTime(bb: flatbuffers.ByteBuffer, obj?: Time): Time {\n            return (obj || new Time).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n        }\n\n        /**\n         * @returns org.apache.arrow.flatbuf.TimeUnit\n         */\n        unit(): org.apache.arrow.flatbuf.TimeUnit {\n            let offset = this.bb!.__offset(this.bb_pos, 4);\n            return offset ? /**  */ (this.bb!.readInt16(this.bb_pos + offset)) : org.apache.arrow.flatbuf.TimeUnit.MILLISECOND;\n        }\n\n        /**\n         * @returns number\n         */\n        bitWidth(): number {\n            let offset = this.bb!.__offset(this.bb_pos, 6);\n            return offset ? this.bb!.readInt32(this.bb_pos + offset) : 32;\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         */\n        static startTime(builder: flatbuffers.Builder) {\n            builder.startObject(2);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param org.apache.arrow.flatbuf.TimeUnit unit\n         */\n        static addUnit(builder: flatbuffers.Builder, unit: org.apache.arrow.flatbuf.TimeUnit) {\n            builder.addFieldInt16(0, unit, org.apache.arrow.flatbuf.TimeUnit.MILLISECOND);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param number bitWidth\n         */\n        static addBitWidth(builder: flatbuffers.Builder, bitWidth: number) {\n            builder.addFieldInt32(1, bitWidth, 32);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @returns flatbuffers.Offset\n         */\n        static endTime(builder: flatbuffers.Builder): flatbuffers.Offset {\n            let offset = builder.endObject();\n            return offset;\n        }\n\n        static createTime(builder: flatbuffers.Builder, unit: org.apache.arrow.flatbuf.TimeUnit, bitWidth: number): flatbuffers.Offset {\n            Time.startTime(builder);\n            Time.addUnit(builder, unit);\n            Time.addBitWidth(builder, bitWidth);\n            return Time.endTime(builder);\n        }\n    }\n}\n/**\n * Time elapsed from the Unix epoch, 00:00:00.000 on 1 January 1970, excluding\n * leap seconds, as a 64-bit integer. Note that UNIX time does not include\n * leap seconds.\n *\n * The Timestamp metadata supports both \"time zone naive\" and \"time zone\n * aware\" timestamps. Read about the timezone attribute for more detail\n *\n * @constructor\n */\nexport namespace org.apache.arrow.flatbuf {\n    export class Timestamp {\n        bb: flatbuffers.ByteBuffer | null = null;\n\n        bb_pos: number = 0;\n        /**\n         * @param number i\n         * @param flatbuffers.ByteBuffer bb\n         * @returns Timestamp\n         */\n        __init(i: number, bb: flatbuffers.ByteBuffer): Timestamp {\n            this.bb_pos = i;\n            this.bb = bb;\n            return this;\n        }\n\n        /**\n         * @param flatbuffers.ByteBuffer bb\n         * @param Timestamp= obj\n         * @returns Timestamp\n         */\n        static getRootAsTimestamp(bb: flatbuffers.ByteBuffer, obj?: Timestamp): Timestamp {\n            return (obj || new Timestamp).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n        }\n\n        /**\n         * @returns org.apache.arrow.flatbuf.TimeUnit\n         */\n        unit(): org.apache.arrow.flatbuf.TimeUnit {\n            let offset = this.bb!.__offset(this.bb_pos, 4);\n            return offset ? /**  */ (this.bb!.readInt16(this.bb_pos + offset)) : org.apache.arrow.flatbuf.TimeUnit.SECOND;\n        }\n\n        /**\n         * The time zone is a string indicating the name of a time zone, one of:\n         *\n         * * As used in the Olson time zone database (the \"tz database\" or\n         *   \"tzdata\"), such as \"America/New_York\"\n         * * An absolute time zone offset of the form +XX:XX or -XX:XX, such as +07:30\n         *\n         * Whether a timezone string is present indicates different semantics about\n         * the data:\n         *\n         * * If the time zone is null or equal to an empty string, the data is \"time\n         *   zone naive\" and shall be displayed *as is* to the user, not localized\n         *   to the locale of the user. This data can be though of as UTC but\n         *   without having \"UTC\" as the time zone, it is not considered to be\n         *   localized to any time zone\n         *\n         * * If the time zone is set to a valid value, values can be displayed as\n         *   \"localized\" to that time zone, even though the underlying 64-bit\n         *   integers are identical to the same data stored in UTC. Converting\n         *   between time zones is a metadata-only operation and does not change the\n         *   underlying values\n         *\n         * @param flatbuffers.Encoding= optionalEncoding\n         * @returns string|Uint8Array|null\n         */\n        timezone(): string | null;\n        timezone(optionalEncoding: flatbuffers.Encoding): string | Uint8Array | null;\n        timezone(optionalEncoding?: any): string | Uint8Array | null {\n            let offset = this.bb!.__offset(this.bb_pos, 6);\n            return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         */\n        static startTimestamp(builder: flatbuffers.Builder) {\n            builder.startObject(2);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param org.apache.arrow.flatbuf.TimeUnit unit\n         */\n        static addUnit(builder: flatbuffers.Builder, unit: org.apache.arrow.flatbuf.TimeUnit) {\n            builder.addFieldInt16(0, unit, org.apache.arrow.flatbuf.TimeUnit.SECOND);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param flatbuffers.Offset timezoneOffset\n         */\n        static addTimezone(builder: flatbuffers.Builder, timezoneOffset: flatbuffers.Offset) {\n            builder.addFieldOffset(1, timezoneOffset, 0);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @returns flatbuffers.Offset\n         */\n        static endTimestamp(builder: flatbuffers.Builder): flatbuffers.Offset {\n            let offset = builder.endObject();\n            return offset;\n        }\n\n        static createTimestamp(builder: flatbuffers.Builder, unit: org.apache.arrow.flatbuf.TimeUnit, timezoneOffset: flatbuffers.Offset): flatbuffers.Offset {\n            Timestamp.startTimestamp(builder);\n            Timestamp.addUnit(builder, unit);\n            Timestamp.addTimezone(builder, timezoneOffset);\n            return Timestamp.endTimestamp(builder);\n        }\n    }\n}\n/**\n * @constructor\n */\nexport namespace org.apache.arrow.flatbuf {\n    export class Interval {\n        bb: flatbuffers.ByteBuffer | null = null;\n\n        bb_pos: number = 0;\n        /**\n         * @param number i\n         * @param flatbuffers.ByteBuffer bb\n         * @returns Interval\n         */\n        __init(i: number, bb: flatbuffers.ByteBuffer): Interval {\n            this.bb_pos = i;\n            this.bb = bb;\n            return this;\n        }\n\n        /**\n         * @param flatbuffers.ByteBuffer bb\n         * @param Interval= obj\n         * @returns Interval\n         */\n        static getRootAsInterval(bb: flatbuffers.ByteBuffer, obj?: Interval): Interval {\n            return (obj || new Interval).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n        }\n\n        /**\n         * @returns org.apache.arrow.flatbuf.IntervalUnit\n         */\n        unit(): org.apache.arrow.flatbuf.IntervalUnit {\n            let offset = this.bb!.__offset(this.bb_pos, 4);\n            return offset ? /**  */ (this.bb!.readInt16(this.bb_pos + offset)) : org.apache.arrow.flatbuf.IntervalUnit.YEAR_MONTH;\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         */\n        static startInterval(builder: flatbuffers.Builder) {\n            builder.startObject(1);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param org.apache.arrow.flatbuf.IntervalUnit unit\n         */\n        static addUnit(builder: flatbuffers.Builder, unit: org.apache.arrow.flatbuf.IntervalUnit) {\n            builder.addFieldInt16(0, unit, org.apache.arrow.flatbuf.IntervalUnit.YEAR_MONTH);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @returns flatbuffers.Offset\n         */\n        static endInterval(builder: flatbuffers.Builder): flatbuffers.Offset {\n            let offset = builder.endObject();\n            return offset;\n        }\n\n        static createInterval(builder: flatbuffers.Builder, unit: org.apache.arrow.flatbuf.IntervalUnit): flatbuffers.Offset {\n            Interval.startInterval(builder);\n            Interval.addUnit(builder, unit);\n            return Interval.endInterval(builder);\n        }\n    }\n}\n/**\n * @constructor\n */\nexport namespace org.apache.arrow.flatbuf {\n    export class Duration {\n        bb: flatbuffers.ByteBuffer | null = null;\n\n        bb_pos: number = 0;\n        /**\n         * @param number i\n         * @param flatbuffers.ByteBuffer bb\n         * @returns Duration\n         */\n        __init(i: number, bb: flatbuffers.ByteBuffer): Duration {\n            this.bb_pos = i;\n            this.bb = bb;\n            return this;\n        }\n\n        /**\n         * @param flatbuffers.ByteBuffer bb\n         * @param Duration= obj\n         * @returns Duration\n         */\n        static getRootAsDuration(bb: flatbuffers.ByteBuffer, obj?: Duration): Duration {\n            return (obj || new Duration).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n        }\n\n        /**\n         * @returns org.apache.arrow.flatbuf.TimeUnit\n         */\n        unit(): org.apache.arrow.flatbuf.TimeUnit {\n            let offset = this.bb!.__offset(this.bb_pos, 4);\n            return offset ? /**  */ (this.bb!.readInt16(this.bb_pos + offset)) : org.apache.arrow.flatbuf.TimeUnit.MILLISECOND;\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         */\n        static startDuration(builder: flatbuffers.Builder) {\n            builder.startObject(1);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param org.apache.arrow.flatbuf.TimeUnit unit\n         */\n        static addUnit(builder: flatbuffers.Builder, unit: org.apache.arrow.flatbuf.TimeUnit) {\n            builder.addFieldInt16(0, unit, org.apache.arrow.flatbuf.TimeUnit.MILLISECOND);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @returns flatbuffers.Offset\n         */\n        static endDuration(builder: flatbuffers.Builder): flatbuffers.Offset {\n            let offset = builder.endObject();\n            return offset;\n        }\n\n        static createDuration(builder: flatbuffers.Builder, unit: org.apache.arrow.flatbuf.TimeUnit): flatbuffers.Offset {\n            Duration.startDuration(builder);\n            Duration.addUnit(builder, unit);\n            return Duration.endDuration(builder);\n        }\n    }\n}\n/**\n * ----------------------------------------------------------------------\n * user defined key value pairs to add custom metadata to arrow\n * key namespacing is the responsibility of the user\n *\n * @constructor\n */\nexport namespace org.apache.arrow.flatbuf {\n    export class KeyValue {\n        bb: flatbuffers.ByteBuffer | null = null;\n\n        bb_pos: number = 0;\n        /**\n         * @param number i\n         * @param flatbuffers.ByteBuffer bb\n         * @returns KeyValue\n         */\n        __init(i: number, bb: flatbuffers.ByteBuffer): KeyValue {\n            this.bb_pos = i;\n            this.bb = bb;\n            return this;\n        }\n\n        /**\n         * @param flatbuffers.ByteBuffer bb\n         * @param KeyValue= obj\n         * @returns KeyValue\n         */\n        static getRootAsKeyValue(bb: flatbuffers.ByteBuffer, obj?: KeyValue): KeyValue {\n            return (obj || new KeyValue).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n        }\n\n        /**\n         * @param flatbuffers.Encoding= optionalEncoding\n         * @returns string|Uint8Array|null\n         */\n        key(): string | null;\n        key(optionalEncoding: flatbuffers.Encoding): string | Uint8Array | null;\n        key(optionalEncoding?: any): string | Uint8Array | null {\n            let offset = this.bb!.__offset(this.bb_pos, 4);\n            return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;\n        }\n\n        /**\n         * @param flatbuffers.Encoding= optionalEncoding\n         * @returns string|Uint8Array|null\n         */\n        value(): string | null;\n        value(optionalEncoding: flatbuffers.Encoding): string | Uint8Array | null;\n        value(optionalEncoding?: any): string | Uint8Array | null {\n            let offset = this.bb!.__offset(this.bb_pos, 6);\n            return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         */\n        static startKeyValue(builder: flatbuffers.Builder) {\n            builder.startObject(2);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param flatbuffers.Offset keyOffset\n         */\n        static addKey(builder: flatbuffers.Builder, keyOffset: flatbuffers.Offset) {\n            builder.addFieldOffset(0, keyOffset, 0);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param flatbuffers.Offset valueOffset\n         */\n        static addValue(builder: flatbuffers.Builder, valueOffset: flatbuffers.Offset) {\n            builder.addFieldOffset(1, valueOffset, 0);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @returns flatbuffers.Offset\n         */\n        static endKeyValue(builder: flatbuffers.Builder): flatbuffers.Offset {\n            let offset = builder.endObject();\n            return offset;\n        }\n\n        static createKeyValue(builder: flatbuffers.Builder, keyOffset: flatbuffers.Offset, valueOffset: flatbuffers.Offset): flatbuffers.Offset {\n            KeyValue.startKeyValue(builder);\n            KeyValue.addKey(builder, keyOffset);\n            KeyValue.addValue(builder, valueOffset);\n            return KeyValue.endKeyValue(builder);\n        }\n    }\n}\n/**\n * ----------------------------------------------------------------------\n * Dictionary encoding metadata\n *\n * @constructor\n */\nexport namespace org.apache.arrow.flatbuf {\n    export class DictionaryEncoding {\n        bb: flatbuffers.ByteBuffer | null = null;\n\n        bb_pos: number = 0;\n        /**\n         * @param number i\n         * @param flatbuffers.ByteBuffer bb\n         * @returns DictionaryEncoding\n         */\n        __init(i: number, bb: flatbuffers.ByteBuffer): DictionaryEncoding {\n            this.bb_pos = i;\n            this.bb = bb;\n            return this;\n        }\n\n        /**\n         * @param flatbuffers.ByteBuffer bb\n         * @param DictionaryEncoding= obj\n         * @returns DictionaryEncoding\n         */\n        static getRootAsDictionaryEncoding(bb: flatbuffers.ByteBuffer, obj?: DictionaryEncoding): DictionaryEncoding {\n            return (obj || new DictionaryEncoding).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n        }\n\n        /**\n         * The known dictionary id in the application where this data is used. In\n         * the file or streaming formats, the dictionary ids are found in the\n         * DictionaryBatch messages\n         *\n         * @returns flatbuffers.Long\n         */\n        id(): flatbuffers.Long {\n            let offset = this.bb!.__offset(this.bb_pos, 4);\n            return offset ? this.bb!.readInt64(this.bb_pos + offset) : this.bb!.createLong(0, 0);\n        }\n\n        /**\n         * The dictionary indices are constrained to be positive integers. If this\n         * field is null, the indices must be signed int32\n         *\n         * @param org.apache.arrow.flatbuf.Int= obj\n         * @returns org.apache.arrow.flatbuf.Int|null\n         */\n        indexType(obj?: org.apache.arrow.flatbuf.Int): org.apache.arrow.flatbuf.Int | null {\n            let offset = this.bb!.__offset(this.bb_pos, 6);\n            return offset ? (obj || new org.apache.arrow.flatbuf.Int).__init(this.bb!.__indirect(this.bb_pos + offset), this.bb!) : null;\n        }\n\n        /**\n         * By default, dictionaries are not ordered, or the order does not have\n         * semantic meaning. In some statistical, applications, dictionary-encoding\n         * is used to represent ordered categorical data, and we provide a way to\n         * preserve that metadata here\n         *\n         * @returns boolean\n         */\n        isOrdered(): boolean {\n            let offset = this.bb!.__offset(this.bb_pos, 8);\n            return offset ? !!this.bb!.readInt8(this.bb_pos + offset) : false;\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         */\n        static startDictionaryEncoding(builder: flatbuffers.Builder) {\n            builder.startObject(3);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param flatbuffers.Long id\n         */\n        static addId(builder: flatbuffers.Builder, id: flatbuffers.Long) {\n            builder.addFieldInt64(0, id, builder.createLong(0, 0));\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param flatbuffers.Offset indexTypeOffset\n         */\n        static addIndexType(builder: flatbuffers.Builder, indexTypeOffset: flatbuffers.Offset) {\n            builder.addFieldOffset(1, indexTypeOffset, 0);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param boolean isOrdered\n         */\n        static addIsOrdered(builder: flatbuffers.Builder, isOrdered: boolean) {\n            builder.addFieldInt8(2, +isOrdered, +false);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @returns flatbuffers.Offset\n         */\n        static endDictionaryEncoding(builder: flatbuffers.Builder): flatbuffers.Offset {\n            let offset = builder.endObject();\n            return offset;\n        }\n\n        static createDictionaryEncoding(builder: flatbuffers.Builder, id: flatbuffers.Long, indexTypeOffset: flatbuffers.Offset, isOrdered: boolean): flatbuffers.Offset {\n            DictionaryEncoding.startDictionaryEncoding(builder);\n            DictionaryEncoding.addId(builder, id);\n            DictionaryEncoding.addIndexType(builder, indexTypeOffset);\n            DictionaryEncoding.addIsOrdered(builder, isOrdered);\n            return DictionaryEncoding.endDictionaryEncoding(builder);\n        }\n    }\n}\n/**\n * ----------------------------------------------------------------------\n * A field represents a named column in a record / row batch or child of a\n * nested type.\n *\n * @constructor\n */\nexport namespace org.apache.arrow.flatbuf {\n    export class Field {\n        bb: flatbuffers.ByteBuffer | null = null;\n\n        bb_pos: number = 0;\n        /**\n         * @param number i\n         * @param flatbuffers.ByteBuffer bb\n         * @returns Field\n         */\n        __init(i: number, bb: flatbuffers.ByteBuffer): Field {\n            this.bb_pos = i;\n            this.bb = bb;\n            return this;\n        }\n\n        /**\n         * @param flatbuffers.ByteBuffer bb\n         * @param Field= obj\n         * @returns Field\n         */\n        static getRootAsField(bb: flatbuffers.ByteBuffer, obj?: Field): Field {\n            return (obj || new Field).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n        }\n\n        /**\n         * Name is not required, in i.e. a List\n         *\n         * @param flatbuffers.Encoding= optionalEncoding\n         * @returns string|Uint8Array|null\n         */\n        name(): string | null;\n        name(optionalEncoding: flatbuffers.Encoding): string | Uint8Array | null;\n        name(optionalEncoding?: any): string | Uint8Array | null {\n            let offset = this.bb!.__offset(this.bb_pos, 4);\n            return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;\n        }\n\n        /**\n         * Whether or not this field can contain nulls. Should be true in general.\n         *\n         * @returns boolean\n         */\n        nullable(): boolean {\n            let offset = this.bb!.__offset(this.bb_pos, 6);\n            return offset ? !!this.bb!.readInt8(this.bb_pos + offset) : false;\n        }\n\n        /**\n         * @returns org.apache.arrow.flatbuf.Type\n         */\n        typeType(): org.apache.arrow.flatbuf.Type {\n            let offset = this.bb!.__offset(this.bb_pos, 8);\n            return offset ? /**  */ (this.bb!.readUint8(this.bb_pos + offset)) : org.apache.arrow.flatbuf.Type.NONE;\n        }\n\n        /**\n         * This is the type of the decoded value if the field is dictionary encoded.\n         *\n         * @param flatbuffers.Table obj\n         * @returns ?flatbuffers.Table\n         */\n        type<T extends flatbuffers.Table>(obj: T): T | null {\n            let offset = this.bb!.__offset(this.bb_pos, 10);\n            return offset ? this.bb!.__union(obj, this.bb_pos + offset) : null;\n        }\n\n        /**\n         * Present only if the field is dictionary encoded.\n         *\n         * @param org.apache.arrow.flatbuf.DictionaryEncoding= obj\n         * @returns org.apache.arrow.flatbuf.DictionaryEncoding|null\n         */\n        dictionary(obj?: org.apache.arrow.flatbuf.DictionaryEncoding): org.apache.arrow.flatbuf.DictionaryEncoding | null {\n            let offset = this.bb!.__offset(this.bb_pos, 12);\n            return offset ? (obj || new org.apache.arrow.flatbuf.DictionaryEncoding).__init(this.bb!.__indirect(this.bb_pos + offset), this.bb!) : null;\n        }\n\n        /**\n         * children apply only to nested data types like Struct, List and Union. For\n         * primitive types children will have length 0.\n         *\n         * @param number index\n         * @param org.apache.arrow.flatbuf.Field= obj\n         * @returns org.apache.arrow.flatbuf.Field\n         */\n        children(index: number, obj?: org.apache.arrow.flatbuf.Field): org.apache.arrow.flatbuf.Field | null {\n            let offset = this.bb!.__offset(this.bb_pos, 14);\n            return offset ? (obj || new org.apache.arrow.flatbuf.Field).__init(this.bb!.__indirect(this.bb!.__vector(this.bb_pos + offset) + index * 4), this.bb!) : null;\n        }\n\n        /**\n         * @returns number\n         */\n        childrenLength(): number {\n            let offset = this.bb!.__offset(this.bb_pos, 14);\n            return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\n        }\n\n        /**\n         * User-defined metadata\n         *\n         * @param number index\n         * @param org.apache.arrow.flatbuf.KeyValue= obj\n         * @returns org.apache.arrow.flatbuf.KeyValue\n         */\n        customMetadata(index: number, obj?: org.apache.arrow.flatbuf.KeyValue): org.apache.arrow.flatbuf.KeyValue | null {\n            let offset = this.bb!.__offset(this.bb_pos, 16);\n            return offset ? (obj || new org.apache.arrow.flatbuf.KeyValue).__init(this.bb!.__indirect(this.bb!.__vector(this.bb_pos + offset) + index * 4), this.bb!) : null;\n        }\n\n        /**\n         * @returns number\n         */\n        customMetadataLength(): number {\n            let offset = this.bb!.__offset(this.bb_pos, 16);\n            return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         */\n        static startField(builder: flatbuffers.Builder) {\n            builder.startObject(7);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param flatbuffers.Offset nameOffset\n         */\n        static addName(builder: flatbuffers.Builder, nameOffset: flatbuffers.Offset) {\n            builder.addFieldOffset(0, nameOffset, 0);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param boolean nullable\n         */\n        static addNullable(builder: flatbuffers.Builder, nullable: boolean) {\n            builder.addFieldInt8(1, +nullable, +false);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param org.apache.arrow.flatbuf.Type typeType\n         */\n        static addTypeType(builder: flatbuffers.Builder, typeType: org.apache.arrow.flatbuf.Type) {\n            builder.addFieldInt8(2, typeType, org.apache.arrow.flatbuf.Type.NONE);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param flatbuffers.Offset typeOffset\n         */\n        static addType(builder: flatbuffers.Builder, typeOffset: flatbuffers.Offset) {\n            builder.addFieldOffset(3, typeOffset, 0);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param flatbuffers.Offset dictionaryOffset\n         */\n        static addDictionary(builder: flatbuffers.Builder, dictionaryOffset: flatbuffers.Offset) {\n            builder.addFieldOffset(4, dictionaryOffset, 0);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param flatbuffers.Offset childrenOffset\n         */\n        static addChildren(builder: flatbuffers.Builder, childrenOffset: flatbuffers.Offset) {\n            builder.addFieldOffset(5, childrenOffset, 0);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param Array.<flatbuffers.Offset> data\n         * @returns flatbuffers.Offset\n         */\n        static createChildrenVector(builder: flatbuffers.Builder, data: flatbuffers.Offset[]): flatbuffers.Offset {\n            builder.startVector(4, data.length, 4);\n            for (let i = data.length - 1; i >= 0; i--) {\n                builder.addOffset(data[i]);\n            }\n            return builder.endVector();\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param number numElems\n         */\n        static startChildrenVector(builder: flatbuffers.Builder, numElems: number) {\n            builder.startVector(4, numElems, 4);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param flatbuffers.Offset customMetadataOffset\n         */\n        static addCustomMetadata(builder: flatbuffers.Builder, customMetadataOffset: flatbuffers.Offset) {\n            builder.addFieldOffset(6, customMetadataOffset, 0);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param Array.<flatbuffers.Offset> data\n         * @returns flatbuffers.Offset\n         */\n        static createCustomMetadataVector(builder: flatbuffers.Builder, data: flatbuffers.Offset[]): flatbuffers.Offset {\n            builder.startVector(4, data.length, 4);\n            for (let i = data.length - 1; i >= 0; i--) {\n                builder.addOffset(data[i]);\n            }\n            return builder.endVector();\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param number numElems\n         */\n        static startCustomMetadataVector(builder: flatbuffers.Builder, numElems: number) {\n            builder.startVector(4, numElems, 4);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @returns flatbuffers.Offset\n         */\n        static endField(builder: flatbuffers.Builder): flatbuffers.Offset {\n            let offset = builder.endObject();\n            return offset;\n        }\n\n        static createField(builder: flatbuffers.Builder, nameOffset: flatbuffers.Offset, nullable: boolean, typeType: org.apache.arrow.flatbuf.Type, typeOffset: flatbuffers.Offset, dictionaryOffset: flatbuffers.Offset, childrenOffset: flatbuffers.Offset, customMetadataOffset: flatbuffers.Offset): flatbuffers.Offset {\n            Field.startField(builder);\n            Field.addName(builder, nameOffset);\n            Field.addNullable(builder, nullable);\n            Field.addTypeType(builder, typeType);\n            Field.addType(builder, typeOffset);\n            Field.addDictionary(builder, dictionaryOffset);\n            Field.addChildren(builder, childrenOffset);\n            Field.addCustomMetadata(builder, customMetadataOffset);\n            return Field.endField(builder);\n        }\n    }\n}\n/**\n * ----------------------------------------------------------------------\n * A Buffer represents a single contiguous memory segment\n *\n * @constructor\n */\nexport namespace org.apache.arrow.flatbuf {\n    export class Buffer {\n        bb: flatbuffers.ByteBuffer | null = null;\n\n        bb_pos: number = 0;\n        /**\n         * @param number i\n         * @param flatbuffers.ByteBuffer bb\n         * @returns Buffer\n         */\n        __init(i: number, bb: flatbuffers.ByteBuffer): Buffer {\n            this.bb_pos = i;\n            this.bb = bb;\n            return this;\n        }\n\n        /**\n         * The relative offset into the shared memory page where the bytes for this\n         * buffer starts\n         *\n         * @returns flatbuffers.Long\n         */\n        offset(): flatbuffers.Long {\n            return this.bb!.readInt64(this.bb_pos);\n        }\n\n        /**\n         * The absolute length (in bytes) of the memory buffer. The memory is found\n         * from offset (inclusive) to offset + length (non-inclusive).\n         *\n         * @returns flatbuffers.Long\n         */\n        length(): flatbuffers.Long {\n            return this.bb!.readInt64(this.bb_pos + 8);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param flatbuffers.Long offset\n         * @param flatbuffers.Long length\n         * @returns flatbuffers.Offset\n         */\n        static createBuffer(builder: flatbuffers.Builder, offset: flatbuffers.Long, length: flatbuffers.Long): flatbuffers.Offset {\n            builder.prep(8, 16);\n            builder.writeInt64(length);\n            builder.writeInt64(offset);\n            return builder.offset();\n        }\n\n    }\n}\n/**\n * ----------------------------------------------------------------------\n * A Schema describes the columns in a row batch\n *\n * @constructor\n */\nexport namespace org.apache.arrow.flatbuf {\n    export class Schema {\n        bb: flatbuffers.ByteBuffer | null = null;\n\n        bb_pos: number = 0;\n        /**\n         * @param number i\n         * @param flatbuffers.ByteBuffer bb\n         * @returns Schema\n         */\n        __init(i: number, bb: flatbuffers.ByteBuffer): Schema {\n            this.bb_pos = i;\n            this.bb = bb;\n            return this;\n        }\n\n        /**\n         * @param flatbuffers.ByteBuffer bb\n         * @param Schema= obj\n         * @returns Schema\n         */\n        static getRootAsSchema(bb: flatbuffers.ByteBuffer, obj?: Schema): Schema {\n            return (obj || new Schema).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n        }\n\n        /**\n         * endianness of the buffer\n         * it is Little Endian by default\n         * if endianness doesn't match the underlying system then the vectors need to be converted\n         *\n         * @returns org.apache.arrow.flatbuf.Endianness\n         */\n        endianness(): org.apache.arrow.flatbuf.Endianness {\n            let offset = this.bb!.__offset(this.bb_pos, 4);\n            return offset ? /**  */ (this.bb!.readInt16(this.bb_pos + offset)) : org.apache.arrow.flatbuf.Endianness.Little;\n        }\n\n        /**\n         * @param number index\n         * @param org.apache.arrow.flatbuf.Field= obj\n         * @returns org.apache.arrow.flatbuf.Field\n         */\n        fields(index: number, obj?: org.apache.arrow.flatbuf.Field): org.apache.arrow.flatbuf.Field | null {\n            let offset = this.bb!.__offset(this.bb_pos, 6);\n            return offset ? (obj || new org.apache.arrow.flatbuf.Field).__init(this.bb!.__indirect(this.bb!.__vector(this.bb_pos + offset) + index * 4), this.bb!) : null;\n        }\n\n        /**\n         * @returns number\n         */\n        fieldsLength(): number {\n            let offset = this.bb!.__offset(this.bb_pos, 6);\n            return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\n        }\n\n        /**\n         * @param number index\n         * @param org.apache.arrow.flatbuf.KeyValue= obj\n         * @returns org.apache.arrow.flatbuf.KeyValue\n         */\n        customMetadata(index: number, obj?: org.apache.arrow.flatbuf.KeyValue): org.apache.arrow.flatbuf.KeyValue | null {\n            let offset = this.bb!.__offset(this.bb_pos, 8);\n            return offset ? (obj || new org.apache.arrow.flatbuf.KeyValue).__init(this.bb!.__indirect(this.bb!.__vector(this.bb_pos + offset) + index * 4), this.bb!) : null;\n        }\n\n        /**\n         * @returns number\n         */\n        customMetadataLength(): number {\n            let offset = this.bb!.__offset(this.bb_pos, 8);\n            return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         */\n        static startSchema(builder: flatbuffers.Builder) {\n            builder.startObject(3);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param org.apache.arrow.flatbuf.Endianness endianness\n         */\n        static addEndianness(builder: flatbuffers.Builder, endianness: org.apache.arrow.flatbuf.Endianness) {\n            builder.addFieldInt16(0, endianness, org.apache.arrow.flatbuf.Endianness.Little);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param flatbuffers.Offset fieldsOffset\n         */\n        static addFields(builder: flatbuffers.Builder, fieldsOffset: flatbuffers.Offset) {\n            builder.addFieldOffset(1, fieldsOffset, 0);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param Array.<flatbuffers.Offset> data\n         * @returns flatbuffers.Offset\n         */\n        static createFieldsVector(builder: flatbuffers.Builder, data: flatbuffers.Offset[]): flatbuffers.Offset {\n            builder.startVector(4, data.length, 4);\n            for (let i = data.length - 1; i >= 0; i--) {\n                builder.addOffset(data[i]);\n            }\n            return builder.endVector();\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param number numElems\n         */\n        static startFieldsVector(builder: flatbuffers.Builder, numElems: number) {\n            builder.startVector(4, numElems, 4);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param flatbuffers.Offset customMetadataOffset\n         */\n        static addCustomMetadata(builder: flatbuffers.Builder, customMetadataOffset: flatbuffers.Offset) {\n            builder.addFieldOffset(2, customMetadataOffset, 0);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param Array.<flatbuffers.Offset> data\n         * @returns flatbuffers.Offset\n         */\n        static createCustomMetadataVector(builder: flatbuffers.Builder, data: flatbuffers.Offset[]): flatbuffers.Offset {\n            builder.startVector(4, data.length, 4);\n            for (let i = data.length - 1; i >= 0; i--) {\n                builder.addOffset(data[i]);\n            }\n            return builder.endVector();\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param number numElems\n         */\n        static startCustomMetadataVector(builder: flatbuffers.Builder, numElems: number) {\n            builder.startVector(4, numElems, 4);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @returns flatbuffers.Offset\n         */\n        static endSchema(builder: flatbuffers.Builder): flatbuffers.Offset {\n            let offset = builder.endObject();\n            return offset;\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param flatbuffers.Offset offset\n         */\n        static finishSchemaBuffer(builder: flatbuffers.Builder, offset: flatbuffers.Offset) {\n            builder.finish(offset);\n        }\n\n        static createSchema(builder: flatbuffers.Builder, endianness: org.apache.arrow.flatbuf.Endianness, fieldsOffset: flatbuffers.Offset, customMetadataOffset: flatbuffers.Offset): flatbuffers.Offset {\n            Schema.startSchema(builder);\n            Schema.addEndianness(builder, endianness);\n            Schema.addFields(builder, fieldsOffset);\n            Schema.addCustomMetadata(builder, customMetadataOffset);\n            return Schema.endSchema(builder);\n        }\n    }\n}\n","// automatically generated by the FlatBuffers compiler, do not modify\n\nimport { flatbuffers } from 'flatbuffers';\nimport * as NS7624605610262437867 from './Schema';\nexport namespace org.apache.arrow.flatbuf {\n    export import Schema = NS7624605610262437867.org.apache.arrow.flatbuf.Schema;\n}\n/**\n * ----------------------------------------------------------------------\n * The root Message type\n * This union enables us to easily send different message types without\n * redundant storage, and in the future we can easily add new message types.\n *\n * Arrow implementations do not need to implement all of the message types,\n * which may include experimental metadata types. For maximum compatibility,\n * it is best to send data using RecordBatch\n *\n * @enum {number}\n */\nexport namespace org.apache.arrow.flatbuf {\n    export enum MessageHeader {\n        NONE = 0,\n        Schema = 1,\n        DictionaryBatch = 2,\n        RecordBatch = 3,\n        Tensor = 4,\n        SparseTensor = 5\n    }\n}\n\n/**\n * ----------------------------------------------------------------------\n * Data structures for describing a table row batch (a collection of\n * equal-length Arrow arrays)\n * Metadata about a field at some level of a nested type tree (but not\n * its children).\n *\n * For example, a List<Int16> with values [[1, 2, 3], null, [4], [5, 6], null]\n * would have {length: 5, null_count: 2} for its List node, and {length: 6,\n * null_count: 0} for its Int16 node, as separate FieldNode structs\n *\n * @constructor\n */\nexport namespace org.apache.arrow.flatbuf {\n    export class FieldNode {\n        bb: flatbuffers.ByteBuffer | null = null;\n\n        bb_pos: number = 0;\n        /**\n         * @param number i\n         * @param flatbuffers.ByteBuffer bb\n         * @returns FieldNode\n         */\n        __init(i: number, bb: flatbuffers.ByteBuffer): FieldNode {\n            this.bb_pos = i;\n            this.bb = bb;\n            return this;\n        }\n\n        /**\n         * The number of value slots in the Arrow array at this level of a nested\n         * tree\n         *\n         * @returns flatbuffers.Long\n         */\n        length(): flatbuffers.Long {\n            return this.bb!.readInt64(this.bb_pos);\n        }\n\n        /**\n         * The number of observed nulls. Fields with null_count == 0 may choose not\n         * to write their physical validity bitmap out as a materialized buffer,\n         * instead setting the length of the bitmap buffer to 0.\n         *\n         * @returns flatbuffers.Long\n         */\n        nullCount(): flatbuffers.Long {\n            return this.bb!.readInt64(this.bb_pos + 8);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param flatbuffers.Long length\n         * @param flatbuffers.Long null_count\n         * @returns flatbuffers.Offset\n         */\n        static createFieldNode(builder: flatbuffers.Builder, length: flatbuffers.Long, null_count: flatbuffers.Long): flatbuffers.Offset {\n            builder.prep(8, 16);\n            builder.writeInt64(null_count);\n            builder.writeInt64(length);\n            return builder.offset();\n        }\n\n    }\n}\n/**\n * A data header describing the shared memory layout of a \"record\" or \"row\"\n * batch. Some systems call this a \"row batch\" internally and others a \"record\n * batch\".\n *\n * @constructor\n */\nexport namespace org.apache.arrow.flatbuf {\n    export class RecordBatch {\n        bb: flatbuffers.ByteBuffer | null = null;\n\n        bb_pos: number = 0;\n        /**\n         * @param number i\n         * @param flatbuffers.ByteBuffer bb\n         * @returns RecordBatch\n         */\n        __init(i: number, bb: flatbuffers.ByteBuffer): RecordBatch {\n            this.bb_pos = i;\n            this.bb = bb;\n            return this;\n        }\n\n        /**\n         * @param flatbuffers.ByteBuffer bb\n         * @param RecordBatch= obj\n         * @returns RecordBatch\n         */\n        static getRootAsRecordBatch(bb: flatbuffers.ByteBuffer, obj?: RecordBatch): RecordBatch {\n            return (obj || new RecordBatch).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n        }\n\n        /**\n         * number of records / rows. The arrays in the batch should all have this\n         * length\n         *\n         * @returns flatbuffers.Long\n         */\n        length(): flatbuffers.Long {\n            let offset = this.bb!.__offset(this.bb_pos, 4);\n            return offset ? this.bb!.readInt64(this.bb_pos + offset) : this.bb!.createLong(0, 0);\n        }\n\n        /**\n         * Nodes correspond to the pre-ordered flattened logical schema\n         *\n         * @param number index\n         * @param org.apache.arrow.flatbuf.FieldNode= obj\n         * @returns org.apache.arrow.flatbuf.FieldNode\n         */\n        nodes(index: number, obj?: org.apache.arrow.flatbuf.FieldNode): org.apache.arrow.flatbuf.FieldNode | null {\n            let offset = this.bb!.__offset(this.bb_pos, 6);\n            return offset ? (obj || new org.apache.arrow.flatbuf.FieldNode).__init(this.bb!.__vector(this.bb_pos + offset) + index * 16, this.bb!) : null;\n        }\n\n        /**\n         * @returns number\n         */\n        nodesLength(): number {\n            let offset = this.bb!.__offset(this.bb_pos, 6);\n            return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\n        }\n\n        /**\n         * Buffers correspond to the pre-ordered flattened buffer tree\n         *\n         * The number of buffers appended to this list depends on the schema. For\n         * example, most primitive arrays will have 2 buffers, 1 for the validity\n         * bitmap and 1 for the values. For struct arrays, there will only be a\n         * single buffer for the validity (nulls) bitmap\n         *\n         * @param number index\n         * @param org.apache.arrow.flatbuf.Buffer= obj\n         * @returns org.apache.arrow.flatbuf.Buffer\n         */\n        buffers(index: number, obj?: NS7624605610262437867.org.apache.arrow.flatbuf.Buffer): NS7624605610262437867.org.apache.arrow.flatbuf.Buffer | null {\n            let offset = this.bb!.__offset(this.bb_pos, 8);\n            return offset ? (obj || new NS7624605610262437867.org.apache.arrow.flatbuf.Buffer).__init(this.bb!.__vector(this.bb_pos + offset) + index * 16, this.bb!) : null;\n        }\n\n        /**\n         * @returns number\n         */\n        buffersLength(): number {\n            let offset = this.bb!.__offset(this.bb_pos, 8);\n            return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         */\n        static startRecordBatch(builder: flatbuffers.Builder) {\n            builder.startObject(3);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param flatbuffers.Long length\n         */\n        static addLength(builder: flatbuffers.Builder, length: flatbuffers.Long) {\n            builder.addFieldInt64(0, length, builder.createLong(0, 0));\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param flatbuffers.Offset nodesOffset\n         */\n        static addNodes(builder: flatbuffers.Builder, nodesOffset: flatbuffers.Offset) {\n            builder.addFieldOffset(1, nodesOffset, 0);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param number numElems\n         */\n        static startNodesVector(builder: flatbuffers.Builder, numElems: number) {\n            builder.startVector(16, numElems, 8);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param flatbuffers.Offset buffersOffset\n         */\n        static addBuffers(builder: flatbuffers.Builder, buffersOffset: flatbuffers.Offset) {\n            builder.addFieldOffset(2, buffersOffset, 0);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param number numElems\n         */\n        static startBuffersVector(builder: flatbuffers.Builder, numElems: number) {\n            builder.startVector(16, numElems, 8);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @returns flatbuffers.Offset\n         */\n        static endRecordBatch(builder: flatbuffers.Builder): flatbuffers.Offset {\n            let offset = builder.endObject();\n            return offset;\n        }\n\n        static createRecordBatch(builder: flatbuffers.Builder, length: flatbuffers.Long, nodesOffset: flatbuffers.Offset, buffersOffset: flatbuffers.Offset): flatbuffers.Offset {\n            RecordBatch.startRecordBatch(builder);\n            RecordBatch.addLength(builder, length);\n            RecordBatch.addNodes(builder, nodesOffset);\n            RecordBatch.addBuffers(builder, buffersOffset);\n            return RecordBatch.endRecordBatch(builder);\n        }\n    }\n}\n/**\n * For sending dictionary encoding information. Any Field can be\n * dictionary-encoded, but in this case none of its children may be\n * dictionary-encoded.\n * There is one vector / column per dictionary, but that vector / column\n * may be spread across multiple dictionary batches by using the isDelta\n * flag\n *\n * @constructor\n */\nexport namespace org.apache.arrow.flatbuf {\n    export class DictionaryBatch {\n        bb: flatbuffers.ByteBuffer | null = null;\n\n        bb_pos: number = 0;\n        /**\n         * @param number i\n         * @param flatbuffers.ByteBuffer bb\n         * @returns DictionaryBatch\n         */\n        __init(i: number, bb: flatbuffers.ByteBuffer): DictionaryBatch {\n            this.bb_pos = i;\n            this.bb = bb;\n            return this;\n        }\n\n        /**\n         * @param flatbuffers.ByteBuffer bb\n         * @param DictionaryBatch= obj\n         * @returns DictionaryBatch\n         */\n        static getRootAsDictionaryBatch(bb: flatbuffers.ByteBuffer, obj?: DictionaryBatch): DictionaryBatch {\n            return (obj || new DictionaryBatch).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n        }\n\n        /**\n         * @returns flatbuffers.Long\n         */\n        id(): flatbuffers.Long {\n            let offset = this.bb!.__offset(this.bb_pos, 4);\n            return offset ? this.bb!.readInt64(this.bb_pos + offset) : this.bb!.createLong(0, 0);\n        }\n\n        /**\n         * @param org.apache.arrow.flatbuf.RecordBatch= obj\n         * @returns org.apache.arrow.flatbuf.RecordBatch|null\n         */\n        data(obj?: org.apache.arrow.flatbuf.RecordBatch): org.apache.arrow.flatbuf.RecordBatch | null {\n            let offset = this.bb!.__offset(this.bb_pos, 6);\n            return offset ? (obj || new org.apache.arrow.flatbuf.RecordBatch).__init(this.bb!.__indirect(this.bb_pos + offset), this.bb!) : null;\n        }\n\n        /**\n         * If isDelta is true the values in the dictionary are to be appended to a\n         * dictionary with the indicated id\n         *\n         * @returns boolean\n         */\n        isDelta(): boolean {\n            let offset = this.bb!.__offset(this.bb_pos, 8);\n            return offset ? !!this.bb!.readInt8(this.bb_pos + offset) : false;\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         */\n        static startDictionaryBatch(builder: flatbuffers.Builder) {\n            builder.startObject(3);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param flatbuffers.Long id\n         */\n        static addId(builder: flatbuffers.Builder, id: flatbuffers.Long) {\n            builder.addFieldInt64(0, id, builder.createLong(0, 0));\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param flatbuffers.Offset dataOffset\n         */\n        static addData(builder: flatbuffers.Builder, dataOffset: flatbuffers.Offset) {\n            builder.addFieldOffset(1, dataOffset, 0);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param boolean isDelta\n         */\n        static addIsDelta(builder: flatbuffers.Builder, isDelta: boolean) {\n            builder.addFieldInt8(2, +isDelta, +false);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @returns flatbuffers.Offset\n         */\n        static endDictionaryBatch(builder: flatbuffers.Builder): flatbuffers.Offset {\n            let offset = builder.endObject();\n            return offset;\n        }\n\n        static createDictionaryBatch(builder: flatbuffers.Builder, id: flatbuffers.Long, dataOffset: flatbuffers.Offset, isDelta: boolean): flatbuffers.Offset {\n            DictionaryBatch.startDictionaryBatch(builder);\n            DictionaryBatch.addId(builder, id);\n            DictionaryBatch.addData(builder, dataOffset);\n            DictionaryBatch.addIsDelta(builder, isDelta);\n            return DictionaryBatch.endDictionaryBatch(builder);\n        }\n    }\n}\n/**\n * @constructor\n */\nexport namespace org.apache.arrow.flatbuf {\n    export class Message {\n        bb: flatbuffers.ByteBuffer | null = null;\n\n        bb_pos: number = 0;\n        /**\n         * @param number i\n         * @param flatbuffers.ByteBuffer bb\n         * @returns Message\n         */\n        __init(i: number, bb: flatbuffers.ByteBuffer): Message {\n            this.bb_pos = i;\n            this.bb = bb;\n            return this;\n        }\n\n        /**\n         * @param flatbuffers.ByteBuffer bb\n         * @param Message= obj\n         * @returns Message\n         */\n        static getRootAsMessage(bb: flatbuffers.ByteBuffer, obj?: Message): Message {\n            return (obj || new Message).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n        }\n\n        /**\n         * @returns org.apache.arrow.flatbuf.MetadataVersion\n         */\n        version(): NS7624605610262437867.org.apache.arrow.flatbuf.MetadataVersion {\n            let offset = this.bb!.__offset(this.bb_pos, 4);\n            return offset ? /**  */ (this.bb!.readInt16(this.bb_pos + offset)) : NS7624605610262437867.org.apache.arrow.flatbuf.MetadataVersion.V1;\n        }\n\n        /**\n         * @returns org.apache.arrow.flatbuf.MessageHeader\n         */\n        headerType(): org.apache.arrow.flatbuf.MessageHeader {\n            let offset = this.bb!.__offset(this.bb_pos, 6);\n            return offset ? /**  */ (this.bb!.readUint8(this.bb_pos + offset)) : org.apache.arrow.flatbuf.MessageHeader.NONE;\n        }\n\n        /**\n         * @param flatbuffers.Table obj\n         * @returns ?flatbuffers.Table\n         */\n        header<T extends flatbuffers.Table>(obj: T): T | null {\n            let offset = this.bb!.__offset(this.bb_pos, 8);\n            return offset ? this.bb!.__union(obj, this.bb_pos + offset) : null;\n        }\n\n        /**\n         * @returns flatbuffers.Long\n         */\n        bodyLength(): flatbuffers.Long {\n            let offset = this.bb!.__offset(this.bb_pos, 10);\n            return offset ? this.bb!.readInt64(this.bb_pos + offset) : this.bb!.createLong(0, 0);\n        }\n\n        /**\n         * @param number index\n         * @param org.apache.arrow.flatbuf.KeyValue= obj\n         * @returns org.apache.arrow.flatbuf.KeyValue\n         */\n        customMetadata(index: number, obj?: NS7624605610262437867.org.apache.arrow.flatbuf.KeyValue): NS7624605610262437867.org.apache.arrow.flatbuf.KeyValue | null {\n            let offset = this.bb!.__offset(this.bb_pos, 12);\n            return offset ? (obj || new NS7624605610262437867.org.apache.arrow.flatbuf.KeyValue).__init(this.bb!.__indirect(this.bb!.__vector(this.bb_pos + offset) + index * 4), this.bb!) : null;\n        }\n\n        /**\n         * @returns number\n         */\n        customMetadataLength(): number {\n            let offset = this.bb!.__offset(this.bb_pos, 12);\n            return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         */\n        static startMessage(builder: flatbuffers.Builder) {\n            builder.startObject(5);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param org.apache.arrow.flatbuf.MetadataVersion version\n         */\n        static addVersion(builder: flatbuffers.Builder, version: NS7624605610262437867.org.apache.arrow.flatbuf.MetadataVersion) {\n            builder.addFieldInt16(0, version, NS7624605610262437867.org.apache.arrow.flatbuf.MetadataVersion.V1);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param org.apache.arrow.flatbuf.MessageHeader headerType\n         */\n        static addHeaderType(builder: flatbuffers.Builder, headerType: org.apache.arrow.flatbuf.MessageHeader) {\n            builder.addFieldInt8(1, headerType, org.apache.arrow.flatbuf.MessageHeader.NONE);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param flatbuffers.Offset headerOffset\n         */\n        static addHeader(builder: flatbuffers.Builder, headerOffset: flatbuffers.Offset) {\n            builder.addFieldOffset(2, headerOffset, 0);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param flatbuffers.Long bodyLength\n         */\n        static addBodyLength(builder: flatbuffers.Builder, bodyLength: flatbuffers.Long) {\n            builder.addFieldInt64(3, bodyLength, builder.createLong(0, 0));\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param flatbuffers.Offset customMetadataOffset\n         */\n        static addCustomMetadata(builder: flatbuffers.Builder, customMetadataOffset: flatbuffers.Offset) {\n            builder.addFieldOffset(4, customMetadataOffset, 0);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param Array.<flatbuffers.Offset> data\n         * @returns flatbuffers.Offset\n         */\n        static createCustomMetadataVector(builder: flatbuffers.Builder, data: flatbuffers.Offset[]): flatbuffers.Offset {\n            builder.startVector(4, data.length, 4);\n            for (let i = data.length - 1; i >= 0; i--) {\n                builder.addOffset(data[i]);\n            }\n            return builder.endVector();\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param number numElems\n         */\n        static startCustomMetadataVector(builder: flatbuffers.Builder, numElems: number) {\n            builder.startVector(4, numElems, 4);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @returns flatbuffers.Offset\n         */\n        static endMessage(builder: flatbuffers.Builder): flatbuffers.Offset {\n            let offset = builder.endObject();\n            return offset;\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param flatbuffers.Offset offset\n         */\n        static finishMessageBuffer(builder: flatbuffers.Builder, offset: flatbuffers.Offset) {\n            builder.finish(offset);\n        }\n\n        static createMessage(builder: flatbuffers.Builder, version: NS7624605610262437867.org.apache.arrow.flatbuf.MetadataVersion, headerType: org.apache.arrow.flatbuf.MessageHeader, headerOffset: flatbuffers.Offset, bodyLength: flatbuffers.Long, customMetadataOffset: flatbuffers.Offset): flatbuffers.Offset {\n            Message.startMessage(builder);\n            Message.addVersion(builder, version);\n            Message.addHeaderType(builder, headerType);\n            Message.addHeader(builder, headerOffset);\n            Message.addBodyLength(builder, bodyLength);\n            Message.addCustomMetadata(builder, customMetadataOffset);\n            return Message.endMessage(builder);\n        }\n    }\n}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport * as Schema_ from './fb/Schema';\nimport * as Message_ from './fb/Message';\n\nexport import ArrowType = Schema_.org.apache.arrow.flatbuf.Type;\nexport import DateUnit = Schema_.org.apache.arrow.flatbuf.DateUnit;\nexport import TimeUnit = Schema_.org.apache.arrow.flatbuf.TimeUnit;\nexport import Precision = Schema_.org.apache.arrow.flatbuf.Precision;\nexport import UnionMode = Schema_.org.apache.arrow.flatbuf.UnionMode;\nexport import IntervalUnit = Schema_.org.apache.arrow.flatbuf.IntervalUnit;\nexport import MessageHeader = Message_.org.apache.arrow.flatbuf.MessageHeader;\nexport import MetadataVersion = Schema_.org.apache.arrow.flatbuf.MetadataVersion;\n\n/**\n * Main data type enumeration.\n *\n * Data types in this library are all *logical*. They can be expressed as\n * either a primitive physical type (bytes or bits of some fixed size), a\n * nested type consisting of other data types, or another data type (e.g. a\n * timestamp encoded as an int64).\n *\n * **Note**: Only enum values 0-17 (NONE through Map) are written to an Arrow\n * IPC payload.\n *\n * The rest of the values are specified here so TypeScript can narrow the type\n * signatures further beyond the base Arrow Types. The Arrow DataTypes include\n * metadata like `bitWidth` that impact the type signatures of the values we\n * accept and return.\n *\n * For example, the `Int8Vector` reads 1-byte numbers from an `Int8Array`, an\n * `Int32Vector` reads a 4-byte number from an `Int32Array`, and an `Int64Vector`\n * reads a pair of 4-byte lo, hi 32-bit integers as a zero-copy slice from the\n * underlying `Int32Array`.\n *\n * Library consumers benefit by knowing the narrowest type, since we can ensure\n * the types across all public methods are propagated, and never bail to `any`.\n * These values are _never_ used at runtime, and they will _never_ be written\n * to the flatbuffers metadata of serialized Arrow IPC payloads.\n */\nexport enum Type {\n    /** The default placeholder type */\n    NONE            =  0,\n    /** A NULL type having no physical storage */\n    Null            =  1,\n    /** Signed or unsigned 8, 16, 32, or 64-bit little-endian integer */\n    Int             =  2,\n    /** 2, 4, or 8-byte floating point value */\n    Float           =  3,\n    /** Variable-length bytes (no guarantee of UTF8-ness) */\n    Binary          =  4,\n    /** UTF8 variable-length string as List<Char> */\n    Utf8            =  5,\n    /** Boolean as 1 bit, LSB bit-packed ordering */\n    Bool            =  6,\n    /** Precision-and-scale-based decimal type. Storage type depends on the parameters. */\n    Decimal         =  7,\n    /** int32_t days or int64_t milliseconds since the UNIX epoch */\n    Date            =  8,\n    /** Time as signed 32 or 64-bit integer, representing either seconds, milliseconds, microseconds, or nanoseconds since midnight since midnight */\n    Time            =  9,\n    /** Exact timestamp encoded with int64 since UNIX epoch (Default unit millisecond) */\n    Timestamp       = 10,\n    /** YEAR_MONTH or DAY_TIME interval in SQL style */\n    Interval        = 11,\n    /** A list of some logical data type */\n    List            = 12,\n    /** Struct of logical types */\n    Struct          = 13,\n    /** Union of logical types */\n    Union           = 14,\n    /** Fixed-size binary. Each value occupies the same number of bytes */\n    FixedSizeBinary = 15,\n    /** Fixed-size list. Each value occupies the same number of bytes */\n    FixedSizeList   = 16,\n    /** Map of named logical types */\n    Map             = 17,\n\n    /** Dictionary aka Category type */\n    Dictionary            = -1,\n    Int8                  = -2,\n    Int16                 = -3,\n    Int32                 = -4,\n    Int64                 = -5,\n    Uint8                 = -6,\n    Uint16                = -7,\n    Uint32                = -8,\n    Uint64                = -9,\n    Float16               = -10,\n    Float32               = -11,\n    Float64               = -12,\n    DateDay               = -13,\n    DateMillisecond       = -14,\n    TimestampSecond       = -15,\n    TimestampMillisecond  = -16,\n    TimestampMicrosecond  = -17,\n    TimestampNanosecond   = -18,\n    TimeSecond            = -19,\n    TimeMillisecond       = -20,\n    TimeMicrosecond       = -21,\n    TimeNanosecond        = -22,\n    DenseUnion            = -23,\n    SparseUnion           = -24,\n    IntervalDayTime       = -25,\n    IntervalYearMonth     = -26,\n}\n\nexport enum BufferType {\n    /**\n     * used in List type, Dense Union and variable length primitive types (String, Binary)\n     */\n    OFFSET = 0,\n\n    /**\n     * actual data, either wixed width primitive types in slots or variable width delimited by an OFFSET vector\n     */\n    DATA = 1,\n\n    /**\n     * Bit vector indicating if each value is null\n     */\n    VALIDITY = 2,\n\n    /**\n     * Type vector used in Union type\n     */\n    TYPE = 3\n  }\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\n/** @ignore */\nexport function getBool(_data: any, _index: number, byte: number, bit: number) {\n    return (byte & 1 << bit) !== 0;\n}\n\n/** @ignore */\nexport function getBit(_data: any, _index: number, byte: number, bit: number): 0 | 1 {\n    return (byte & 1 << bit) >> bit as (0 | 1);\n}\n\n/** @ignore */\nexport function setBool(bytes: Uint8Array, index: number, value: any) {\n    return value ?\n        !!(bytes[index >> 3] |=  (1 << (index % 8))) || true :\n        !(bytes[index >> 3] &= ~(1 << (index % 8))) && false ;\n}\n\n/** @ignore */\nexport function truncateBitmap(offset: number, length: number, bitmap: Uint8Array) {\n    const alignedSize = (bitmap.byteLength + 7) & ~7;\n    if (offset > 0 || bitmap.byteLength < alignedSize) {\n        const bytes = new Uint8Array(alignedSize);\n        // If the offset is a multiple of 8 bits, it's safe to slice the bitmap\n        bytes.set(offset % 8 === 0 ? bitmap.subarray(offset >> 3) :\n            // Otherwise iterate each bit from the offset and return a new one\n            packBools(iterateBits(bitmap, offset, length, null, getBool)).subarray(0, alignedSize));\n        return bytes;\n    }\n    return bitmap;\n}\n\n/** @ignore */\nexport function packBools(values: Iterable<any>) {\n    let xs: number[] = [];\n    let i = 0, bit = 0, byte = 0;\n    for (const value of values) {\n        value && (byte |= 1 << bit);\n        if (++bit === 8) {\n            xs[i++] = byte;\n            byte = bit = 0;\n        }\n    }\n    if (i === 0 || bit > 0) { xs[i++] = byte; }\n    let b = new Uint8Array((xs.length + 7) & ~7);\n    b.set(xs);\n    return b;\n}\n\n/** @ignore */\nexport function* iterateBits<T>(bytes: Uint8Array, begin: number, length: number, context: any,\n                                get: (context: any, index: number, byte: number, bit: number) => T) {\n    let bit = begin % 8;\n    let byteIndex = begin >> 3;\n    let index = 0, remaining = length;\n    for (; remaining > 0; bit = 0) {\n        let byte = bytes[byteIndex++];\n        do {\n            yield get(context, index++, byte, bit);\n        } while (--remaining > 0 && ++bit < 8);\n    }\n}\n\n/**\n * Compute the population count (the number of bits set to 1) for a range of bits in a Uint8Array.\n * @param vector The Uint8Array of bits for which to compute the population count.\n * @param lhs The range's left-hand side (or start) bit\n * @param rhs The range's right-hand side (or end) bit\n */\n/** @ignore */\nexport function popcnt_bit_range(data: Uint8Array, lhs: number, rhs: number): number {\n    if (rhs - lhs <= 0) { return 0; }\n    // If the bit range is less than one byte, sum the 1 bits in the bit range\n    if (rhs - lhs < 8) {\n        let sum = 0;\n        for (const bit of iterateBits(data, lhs, rhs - lhs, data, getBit)) {\n            sum += bit;\n        }\n        return sum;\n    }\n    // Get the next lowest multiple of 8 from the right hand side\n    const rhsInside = rhs >> 3 << 3;\n    // Get the next highest multiple of 8 from the left hand side\n    const lhsInside = lhs + (lhs % 8 === 0 ? 0 : 8 - lhs % 8);\n    return (\n        // Get the popcnt of bits between the left hand side, and the next highest multiple of 8\n        popcnt_bit_range(data, lhs, lhsInside) +\n        // Get the popcnt of bits between the right hand side, and the next lowest multiple of 8\n        popcnt_bit_range(data, rhsInside, rhs) +\n        // Get the popcnt of all bits between the left and right hand sides' multiples of 8\n        popcnt_array(data, lhsInside >> 3, (rhsInside - lhsInside) >> 3)\n    );\n}\n\n/** @ignore */\nexport function popcnt_array(arr: ArrayBufferView, byteOffset?: number, byteLength?: number) {\n    let cnt = 0, pos = byteOffset! | 0;\n    const view = new DataView(arr.buffer, arr.byteOffset, arr.byteLength);\n    const len =  byteLength === void 0 ? arr.byteLength : pos + byteLength;\n    while (len - pos >= 4) {\n        cnt += popcnt_uint32(view.getUint32(pos));\n        pos += 4;\n    }\n    while (len - pos >= 2) {\n        cnt += popcnt_uint32(view.getUint16(pos));\n        pos += 2;\n    }\n    while (len - pos >= 1) {\n        cnt += popcnt_uint32(view.getUint8(pos));\n        pos += 1;\n    }\n    return cnt;\n}\n\n/** @ignore */\nexport function popcnt_uint32(uint32: number): number {\n    let i = uint32 | 0;\n    i = i - ((i >>> 1) & 0x55555555);\n    i = (i & 0x33333333) + ((i >>> 2) & 0x33333333);\n    return (((i + (i >>> 4)) & 0x0F0F0F0F) * 0x01010101) >>> 24;\n}\n","import arrayWithoutHoles from \"./arrayWithoutHoles.js\";\nimport iterableToArray from \"./iterableToArray.js\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray.js\";\nimport nonIterableSpread from \"./nonIterableSpread.js\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}","import arrayLikeToArray from \"./arrayLikeToArray.js\";\nexport default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}","export default function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { Data } from './data';\nimport { Vector } from './vector';\nimport { Type, Precision, DateUnit, TimeUnit, IntervalUnit, UnionMode } from './enum';\nimport { DataType, Float, Int, Date_, Interval, Time, Timestamp, Union, } from './type';\n\nexport abstract class Visitor {\n    public visitMany(nodes: any[], ...args: any[][]) {\n        return nodes.map((node, i) => this.visit(node, ...args.map((x) => x[i])));\n    }\n    public visit(...args: any[]) {\n        return this.getVisitFn(args[0], false).apply(this, args);\n    }\n    public getVisitFn(node: any, throwIfNotFound = true) {\n        return getVisitFn(this, node, throwIfNotFound);\n    }\n    public visitNull            (_node: any, ..._args: any[]): any { return null; }\n    public visitBool            (_node: any, ..._args: any[]): any { return null; }\n    public visitInt             (_node: any, ..._args: any[]): any { return null; }\n    public visitFloat           (_node: any, ..._args: any[]): any { return null; }\n    public visitUtf8            (_node: any, ..._args: any[]): any { return null; }\n    public visitBinary          (_node: any, ..._args: any[]): any { return null; }\n    public visitFixedSizeBinary (_node: any, ..._args: any[]): any { return null; }\n    public visitDate            (_node: any, ..._args: any[]): any { return null; }\n    public visitTimestamp       (_node: any, ..._args: any[]): any { return null; }\n    public visitTime            (_node: any, ..._args: any[]): any { return null; }\n    public visitDecimal         (_node: any, ..._args: any[]): any { return null; }\n    public visitList            (_node: any, ..._args: any[]): any { return null; }\n    public visitStruct          (_node: any, ..._args: any[]): any { return null; }\n    public visitUnion           (_node: any, ..._args: any[]): any { return null; }\n    public visitDictionary      (_node: any, ..._args: any[]): any { return null; }\n    public visitInterval        (_node: any, ..._args: any[]): any { return null; }\n    public visitFixedSizeList   (_node: any, ..._args: any[]): any { return null; }\n    public visitMap             (_node: any, ..._args: any[]): any { return null; }\n}\n\n/** @ignore */\nfunction getVisitFn<T extends DataType>(visitor: Visitor, node: any, throwIfNotFound = true) {\n    let fn: any = null;\n    let dtype: T['TType'] = Type.NONE;\n    // tslint:disable\n    if      (node instanceof Data    ) { dtype = inferDType(node.type as T); }\n    else if (node instanceof Vector  ) { dtype = inferDType(node.type as T); }\n    else if (node instanceof DataType) { dtype = inferDType(node      as T); }\n    else if (typeof (dtype = node) !== 'number') { dtype = Type[node] as any as T['TType']; }\n\n    switch (dtype) {\n        case Type.Null:                 fn = visitor.visitNull; break;\n        case Type.Bool:                 fn = visitor.visitBool; break;\n        case Type.Int:                  fn = visitor.visitInt; break;\n        case Type.Int8:                 fn = visitor.visitInt8 || visitor.visitInt; break;\n        case Type.Int16:                fn = visitor.visitInt16 || visitor.visitInt; break;\n        case Type.Int32:                fn = visitor.visitInt32 || visitor.visitInt; break;\n        case Type.Int64:                fn = visitor.visitInt64 || visitor.visitInt; break;\n        case Type.Uint8:                fn = visitor.visitUint8 || visitor.visitInt; break;\n        case Type.Uint16:               fn = visitor.visitUint16 || visitor.visitInt; break;\n        case Type.Uint32:               fn = visitor.visitUint32 || visitor.visitInt; break;\n        case Type.Uint64:               fn = visitor.visitUint64 || visitor.visitInt; break;\n        case Type.Float:                fn = visitor.visitFloat; break;\n        case Type.Float16:              fn = visitor.visitFloat16 || visitor.visitFloat; break;\n        case Type.Float32:              fn = visitor.visitFloat32 || visitor.visitFloat; break;\n        case Type.Float64:              fn = visitor.visitFloat64 || visitor.visitFloat; break;\n        case Type.Utf8:                 fn = visitor.visitUtf8; break;\n        case Type.Binary:               fn = visitor.visitBinary; break;\n        case Type.FixedSizeBinary:      fn = visitor.visitFixedSizeBinary; break;\n        case Type.Date:                 fn = visitor.visitDate; break;\n        case Type.DateDay:              fn = visitor.visitDateDay || visitor.visitDate; break;\n        case Type.DateMillisecond:      fn = visitor.visitDateMillisecond || visitor.visitDate; break;\n        case Type.Timestamp:            fn = visitor.visitTimestamp; break;\n        case Type.TimestampSecond:      fn = visitor.visitTimestampSecond || visitor.visitTimestamp; break;\n        case Type.TimestampMillisecond: fn = visitor.visitTimestampMillisecond || visitor.visitTimestamp; break;\n        case Type.TimestampMicrosecond: fn = visitor.visitTimestampMicrosecond || visitor.visitTimestamp; break;\n        case Type.TimestampNanosecond:  fn = visitor.visitTimestampNanosecond || visitor.visitTimestamp; break;\n        case Type.Time:                 fn = visitor.visitTime; break;\n        case Type.TimeSecond:           fn = visitor.visitTimeSecond || visitor.visitTime; break;\n        case Type.TimeMillisecond:      fn = visitor.visitTimeMillisecond || visitor.visitTime; break;\n        case Type.TimeMicrosecond:      fn = visitor.visitTimeMicrosecond || visitor.visitTime; break;\n        case Type.TimeNanosecond:       fn = visitor.visitTimeNanosecond || visitor.visitTime; break;\n        case Type.Decimal:              fn = visitor.visitDecimal; break;\n        case Type.List:                 fn = visitor.visitList; break;\n        case Type.Struct:               fn = visitor.visitStruct; break;\n        case Type.Union:                fn = visitor.visitUnion; break;\n        case Type.DenseUnion:           fn = visitor.visitDenseUnion || visitor.visitUnion; break;\n        case Type.SparseUnion:          fn = visitor.visitSparseUnion || visitor.visitUnion; break;\n        case Type.Dictionary:           fn = visitor.visitDictionary; break;\n        case Type.Interval:             fn = visitor.visitInterval; break;\n        case Type.IntervalDayTime:      fn = visitor.visitIntervalDayTime || visitor.visitInterval; break;\n        case Type.IntervalYearMonth:    fn = visitor.visitIntervalYearMonth || visitor.visitInterval; break;\n        case Type.FixedSizeList:        fn = visitor.visitFixedSizeList; break;\n        case Type.Map:                  fn = visitor.visitMap; break;\n    }\n    if (typeof fn === 'function') return fn;\n    if (!throwIfNotFound) return () => null;\n    throw new Error(`Unrecognized type '${Type[dtype]}'`);\n}\n\n/** @ignore */\nfunction inferDType<T extends DataType>(type: T): Type {\n    switch (type.typeId) {\n        case Type.Null: return Type.Null;\n        case Type.Int:\n            const { bitWidth, isSigned } = (type as any as Int);\n            switch (bitWidth) {\n                case  8: return isSigned ? Type.Int8  : Type.Uint8 ;\n                case 16: return isSigned ? Type.Int16 : Type.Uint16;\n                case 32: return isSigned ? Type.Int32 : Type.Uint32;\n                case 64: return isSigned ? Type.Int64 : Type.Uint64;\n            }\n            return Type.Int;\n        case Type.Float:\n            switch((type as any as Float).precision) {\n                case Precision.HALF: return Type.Float16;\n                case Precision.SINGLE: return Type.Float32;\n                case Precision.DOUBLE: return Type.Float64;\n            }\n            return Type.Float;\n        case Type.Binary: return Type.Binary;\n        case Type.Utf8: return Type.Utf8;\n        case Type.Bool: return Type.Bool;\n        case Type.Decimal: return Type.Decimal;\n        case Type.Time:\n            switch ((type as any as Time).unit) {\n                case TimeUnit.SECOND: return Type.TimeSecond;\n                case TimeUnit.MILLISECOND: return Type.TimeMillisecond;\n                case TimeUnit.MICROSECOND: return Type.TimeMicrosecond;\n                case TimeUnit.NANOSECOND: return Type.TimeNanosecond;\n            }\n            return Type.Time;\n        case Type.Timestamp:\n            switch ((type as any as Timestamp).unit) {\n                case TimeUnit.SECOND: return Type.TimestampSecond;\n                case TimeUnit.MILLISECOND: return Type.TimestampMillisecond;\n                case TimeUnit.MICROSECOND: return Type.TimestampMicrosecond;\n                case TimeUnit.NANOSECOND: return Type.TimestampNanosecond;\n            }\n            return Type.Timestamp;\n        case Type.Date:\n            switch ((type as any as Date_).unit) {\n                case DateUnit.DAY: return Type.DateDay;\n                case DateUnit.MILLISECOND: return Type.DateMillisecond;\n            }\n            return Type.Date;\n        case Type.Interval:\n            switch ((type as any as Interval).unit) {\n                case IntervalUnit.DAY_TIME: return Type.IntervalDayTime;\n                case IntervalUnit.YEAR_MONTH: return Type.IntervalYearMonth;\n            }\n            return Type.Interval;\n        case Type.Map: return Type.Map;\n        case Type.List: return Type.List;\n        case Type.Struct: return Type.Struct;\n        case Type.Union:\n            switch ((type as any as Union).mode) {\n                case UnionMode.Dense: return Type.DenseUnion;\n                case UnionMode.Sparse: return Type.SparseUnion;\n            }\n            return Type.Union;\n        case Type.FixedSizeBinary: return Type.FixedSizeBinary;\n        case Type.FixedSizeList: return Type.FixedSizeList;\n        case Type.Dictionary: return Type.Dictionary;\n    }\n    throw new Error(`Unrecognized type '${Type[type.typeId]}'`);\n}\n\nexport interface Visitor {\n    visitNull                  (node: any, ...args: any[]): any;\n    visitBool                  (node: any, ...args: any[]): any;\n    visitInt                   (node: any, ...args: any[]): any;\n    visitInt8?                 (node: any, ...args: any[]): any;\n    visitInt16?                (node: any, ...args: any[]): any;\n    visitInt32?                (node: any, ...args: any[]): any;\n    visitInt64?                (node: any, ...args: any[]): any;\n    visitUint8?                (node: any, ...args: any[]): any;\n    visitUint16?               (node: any, ...args: any[]): any;\n    visitUint32?               (node: any, ...args: any[]): any;\n    visitUint64?               (node: any, ...args: any[]): any;\n    visitFloat                 (node: any, ...args: any[]): any;\n    visitFloat16?              (node: any, ...args: any[]): any;\n    visitFloat32?              (node: any, ...args: any[]): any;\n    visitFloat64?              (node: any, ...args: any[]): any;\n    visitUtf8                  (node: any, ...args: any[]): any;\n    visitBinary                (node: any, ...args: any[]): any;\n    visitFixedSizeBinary       (node: any, ...args: any[]): any;\n    visitDate                  (node: any, ...args: any[]): any;\n    visitDateDay?              (node: any, ...args: any[]): any;\n    visitDateMillisecond?      (node: any, ...args: any[]): any;\n    visitTimestamp             (node: any, ...args: any[]): any;\n    visitTimestampSecond?      (node: any, ...args: any[]): any;\n    visitTimestampMillisecond? (node: any, ...args: any[]): any;\n    visitTimestampMicrosecond? (node: any, ...args: any[]): any;\n    visitTimestampNanosecond?  (node: any, ...args: any[]): any;\n    visitTime                  (node: any, ...args: any[]): any;\n    visitTimeSecond?           (node: any, ...args: any[]): any;\n    visitTimeMillisecond?      (node: any, ...args: any[]): any;\n    visitTimeMicrosecond?      (node: any, ...args: any[]): any;\n    visitTimeNanosecond?       (node: any, ...args: any[]): any;\n    visitDecimal               (node: any, ...args: any[]): any;\n    visitList                  (node: any, ...args: any[]): any;\n    visitStruct                (node: any, ...args: any[]): any;\n    visitUnion                 (node: any, ...args: any[]): any;\n    visitDenseUnion?           (node: any, ...args: any[]): any;\n    visitSparseUnion?          (node: any, ...args: any[]): any;\n    visitDictionary            (node: any, ...args: any[]): any;\n    visitInterval              (node: any, ...args: any[]): any;\n    visitIntervalDayTime?      (node: any, ...args: any[]): any;\n    visitIntervalYearMonth?    (node: any, ...args: any[]): any;\n    visitFixedSizeList         (node: any, ...args: any[]): any;\n    visitMap                   (node: any, ...args: any[]): any;\n}\n\n// Add these here so they're picked up by the externs creator\n// in the build, and closure-compiler doesn't minify them away\n(Visitor.prototype as any).visitInt8 = null;\n(Visitor.prototype as any).visitInt16 = null;\n(Visitor.prototype as any).visitInt32 = null;\n(Visitor.prototype as any).visitInt64 = null;\n(Visitor.prototype as any).visitUint8 = null;\n(Visitor.prototype as any).visitUint16 = null;\n(Visitor.prototype as any).visitUint32 = null;\n(Visitor.prototype as any).visitUint64 = null;\n(Visitor.prototype as any).visitFloat16 = null;\n(Visitor.prototype as any).visitFloat32 = null;\n(Visitor.prototype as any).visitFloat64 = null;\n(Visitor.prototype as any).visitDateDay = null;\n(Visitor.prototype as any).visitDateMillisecond = null;\n(Visitor.prototype as any).visitTimestampSecond = null;\n(Visitor.prototype as any).visitTimestampMillisecond = null;\n(Visitor.prototype as any).visitTimestampMicrosecond = null;\n(Visitor.prototype as any).visitTimestampNanosecond = null;\n(Visitor.prototype as any).visitTimeSecond = null;\n(Visitor.prototype as any).visitTimeMillisecond = null;\n(Visitor.prototype as any).visitTimeMicrosecond = null;\n(Visitor.prototype as any).visitTimeNanosecond = null;\n(Visitor.prototype as any).visitDenseUnion = null;\n(Visitor.prototype as any).visitSparseUnion = null;\n(Visitor.prototype as any).visitIntervalDayTime = null;\n(Visitor.prototype as any).visitIntervalYearMonth = null;\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { Data } from '../data';\nimport { Visitor } from '../visitor';\nimport { VectorType } from '../interfaces';\nimport { Schema, Field } from '../schema';\nimport {\n    DataType, Dictionary,\n    Bool, Null, Utf8, Binary, Decimal, FixedSizeBinary, List, FixedSizeList, Map_, Struct,\n    Float, Float16, Float32, Float64,\n    Int, Uint8, Uint16, Uint32, Uint64, Int8, Int16, Int32, Int64,\n    Date_, DateDay, DateMillisecond,\n    Interval, IntervalDayTime, IntervalYearMonth,\n    Time, TimeSecond, TimeMillisecond, TimeMicrosecond, TimeNanosecond,\n    Timestamp, TimestampSecond, TimestampMillisecond, TimestampMicrosecond, TimestampNanosecond,\n    Union, DenseUnion, SparseUnion,\n} from '../type';\n\n/** @ignore */\nexport interface TypeComparator extends Visitor {\n    visit<T extends DataType>(type: T, other?: DataType | null): other is T;\n    visitMany<T extends DataType>(nodes: T[], others?: DataType[] | null): boolean[];\n    getVisitFn<T extends DataType>(node: VectorType<T> |  Data<T> | T): (other?: DataType | null) => other is T;\n    visitNull                 <T extends Null>                 (type: T, other?: DataType | null): other is T;\n    visitBool                 <T extends Bool>                 (type: T, other?: DataType | null): other is T;\n    visitInt                  <T extends Int>                  (type: T, other?: DataType | null): other is T;\n    visitInt8                 <T extends Int8>                 (type: T, other?: DataType | null): other is T;\n    visitInt16                <T extends Int16>                (type: T, other?: DataType | null): other is T;\n    visitInt32                <T extends Int32>                (type: T, other?: DataType | null): other is T;\n    visitInt64                <T extends Int64>                (type: T, other?: DataType | null): other is T;\n    visitUint8                <T extends Uint8>                (type: T, other?: DataType | null): other is T;\n    visitUint16               <T extends Uint16>               (type: T, other?: DataType | null): other is T;\n    visitUint32               <T extends Uint32>               (type: T, other?: DataType | null): other is T;\n    visitUint64               <T extends Uint64>               (type: T, other?: DataType | null): other is T;\n    visitFloat                <T extends Float>                (type: T, other?: DataType | null): other is T;\n    visitFloat16              <T extends Float16>              (type: T, other?: DataType | null): other is T;\n    visitFloat32              <T extends Float32>              (type: T, other?: DataType | null): other is T;\n    visitFloat64              <T extends Float64>              (type: T, other?: DataType | null): other is T;\n    visitUtf8                 <T extends Utf8>                 (type: T, other?: DataType | null): other is T;\n    visitBinary               <T extends Binary>               (type: T, other?: DataType | null): other is T;\n    visitFixedSizeBinary      <T extends FixedSizeBinary>      (type: T, other?: DataType | null): other is T;\n    visitDate                 <T extends Date_>                (type: T, other?: DataType | null): other is T;\n    visitDateDay              <T extends DateDay>              (type: T, other?: DataType | null): other is T;\n    visitDateMillisecond      <T extends DateMillisecond>      (type: T, other?: DataType | null): other is T;\n    visitTimestamp            <T extends Timestamp>            (type: T, other?: DataType | null): other is T;\n    visitTimestampSecond      <T extends TimestampSecond>      (type: T, other?: DataType | null): other is T;\n    visitTimestampMillisecond <T extends TimestampMillisecond> (type: T, other?: DataType | null): other is T;\n    visitTimestampMicrosecond <T extends TimestampMicrosecond> (type: T, other?: DataType | null): other is T;\n    visitTimestampNanosecond  <T extends TimestampNanosecond>  (type: T, other?: DataType | null): other is T;\n    visitTime                 <T extends Time>                 (type: T, other?: DataType | null): other is T;\n    visitTimeSecond           <T extends TimeSecond>           (type: T, other?: DataType | null): other is T;\n    visitTimeMillisecond      <T extends TimeMillisecond>      (type: T, other?: DataType | null): other is T;\n    visitTimeMicrosecond      <T extends TimeMicrosecond>      (type: T, other?: DataType | null): other is T;\n    visitTimeNanosecond       <T extends TimeNanosecond>       (type: T, other?: DataType | null): other is T;\n    visitDecimal              <T extends Decimal>              (type: T, other?: DataType | null): other is T;\n    visitList                 <T extends List>                 (type: T, other?: DataType | null): other is T;\n    visitStruct               <T extends Struct>               (type: T, other?: DataType | null): other is T;\n    visitUnion                <T extends Union>                (type: T, other?: DataType | null): other is T;\n    visitDenseUnion           <T extends DenseUnion>           (type: T, other?: DataType | null): other is T;\n    visitSparseUnion          <T extends SparseUnion>          (type: T, other?: DataType | null): other is T;\n    visitDictionary           <T extends Dictionary>           (type: T, other?: DataType | null): other is T;\n    visitInterval             <T extends Interval>             (type: T, other?: DataType | null): other is T;\n    visitIntervalDayTime      <T extends IntervalDayTime>      (type: T, other?: DataType | null): other is T;\n    visitIntervalYearMonth    <T extends IntervalYearMonth>    (type: T, other?: DataType | null): other is T;\n    visitFixedSizeList        <T extends FixedSizeList>        (type: T, other?: DataType | null): other is T;\n    visitMap                  <T extends Map_>                 (type: T, other?: DataType | null): other is T;\n}\n\n/** @ignore */\nexport class TypeComparator extends Visitor {\n    compareSchemas<T extends { [key: string]: DataType }>(schema: Schema<T>, other?: Schema | null): other is Schema<T> {\n        return (schema === other) || (\n            other instanceof schema.constructor &&\n            instance.compareFields(schema.fields, other.fields)\n        );\n    }\n    compareFields<T extends { [key: string]: DataType }>(fields: Field<T[keyof T]>[], others?: Field[] | null): others is Field<T[keyof T]>[] {\n        return (fields === others) || (\n            Array.isArray(fields) &&\n            Array.isArray(others) &&\n            fields.length === others.length &&\n            fields.every((f, i) => instance.compareField(f, others[i]))\n        );\n    }\n    compareField<T extends DataType = any>(field: Field<T>, other?: Field | null): other is Field<T> {\n        return (field === other) || (\n            other instanceof field.constructor &&\n            field.name === other.name &&\n            field.nullable === other.nullable &&\n            instance.visit(field.type, other.type)\n        );\n    }\n}\n\nfunction compareConstructor<T extends DataType>(type: T, other?: DataType | null): other is T {\n    return other instanceof type.constructor;\n}\n\nfunction compareAny<T extends DataType>(type: T, other?: DataType | null): other is T {\n    return (type === other) || compareConstructor(type, other);\n}\n\nfunction compareInt<T extends Int>(type: T, other?: DataType | null): other is T {\n    return (type === other) || (\n        compareConstructor(type, other) &&\n        type.bitWidth === other.bitWidth &&\n        type.isSigned === other.isSigned\n    );\n}\n\nfunction compareFloat<T extends Float>(type: T, other?: DataType | null): other is T {\n    return (type === other) || (\n        compareConstructor(type, other) &&\n        type.precision === other.precision\n    );\n}\n\nfunction compareFixedSizeBinary<T extends FixedSizeBinary>(type: T, other?: DataType | null): other is T {\n    return (type === other) || (\n        compareConstructor(type, other) &&\n        type.byteWidth === other.byteWidth\n    );\n}\n\nfunction compareDate<T extends Date_>(type: T, other?: DataType | null): other is T {\n    return (type === other) || (\n        compareConstructor(type, other) &&\n        type.unit === other.unit\n    );\n}\n\nfunction compareTimestamp<T extends Timestamp>(type: T, other?: DataType | null): other is T {\n    return (type === other) || (\n        compareConstructor(type, other) &&\n        type.unit === other.unit &&\n        type.timezone === other.timezone\n    );\n}\n\nfunction compareTime<T extends Time>(type: T, other?: DataType | null): other is T {\n    return (type === other) || (\n        compareConstructor(type, other) &&\n        type.unit === other.unit &&\n        type.bitWidth === other.bitWidth\n    );\n}\n\nfunction compareList<T extends List>(type: T, other?: DataType | null): other is T {\n    return (type === other) || (\n        compareConstructor(type, other) &&\n        type.children.length === other.children.length &&\n        instance.compareFields(type.children, other.children)\n    );\n}\n\nfunction compareStruct<T extends Struct>(type: T, other?: DataType | null): other is T {\n    return (type === other) || (\n        compareConstructor(type, other) &&\n        type.children.length === other.children.length &&\n        instance.compareFields(type.children, other.children)\n    );\n}\n\nfunction compareUnion<T extends Union>(type: T, other?: DataType | null): other is T {\n    return (type === other) || (\n        compareConstructor(type, other) &&\n        type.mode === other.mode &&\n        type.typeIds.every((x, i) => x === other.typeIds[i]) &&\n        instance.compareFields(type.children, other.children)\n    );\n}\n\nfunction compareDictionary<T extends Dictionary>(type: T, other?: DataType | null): other is T {\n    return (type === other) || (\n        compareConstructor(type, other) &&\n        type.id === other.id &&\n        type.isOrdered === other.isOrdered &&\n        instance.visit(<any> type.indices, other.indices) &&\n        instance.visit(type.dictionary, other.dictionary)\n    );\n}\n\nfunction compareInterval<T extends Interval>(type: T, other?: DataType | null): other is T {\n    return (type === other) || (\n        compareConstructor(type, other) &&\n        type.unit === other.unit\n    );\n}\n\nfunction compareFixedSizeList<T extends FixedSizeList>(type: T, other?: DataType | null): other is T {\n    return (type === other) || (\n        compareConstructor(type, other) &&\n        type.listSize === other.listSize &&\n        type.children.length === other.children.length &&\n        instance.compareFields(type.children, other.children)\n    );\n}\n\nfunction compareMap<T extends Map_>(type: T, other?: DataType | null): other is T {\n    return (type === other) || (\n        compareConstructor(type, other) &&\n        type.keysSorted === other.keysSorted &&\n        type.children.length === other.children.length &&\n        instance.compareFields(type.children, other.children)\n    );\n}\n\nTypeComparator.prototype.visitNull                 =             compareAny;\nTypeComparator.prototype.visitBool                 =             compareAny;\nTypeComparator.prototype.visitInt                  =             compareInt;\nTypeComparator.prototype.visitInt8                 =             compareInt;\nTypeComparator.prototype.visitInt16                =             compareInt;\nTypeComparator.prototype.visitInt32                =             compareInt;\nTypeComparator.prototype.visitInt64                =             compareInt;\nTypeComparator.prototype.visitUint8                =             compareInt;\nTypeComparator.prototype.visitUint16               =             compareInt;\nTypeComparator.prototype.visitUint32               =             compareInt;\nTypeComparator.prototype.visitUint64               =             compareInt;\nTypeComparator.prototype.visitFloat                =           compareFloat;\nTypeComparator.prototype.visitFloat16              =           compareFloat;\nTypeComparator.prototype.visitFloat32              =           compareFloat;\nTypeComparator.prototype.visitFloat64              =           compareFloat;\nTypeComparator.prototype.visitUtf8                 =             compareAny;\nTypeComparator.prototype.visitBinary               =             compareAny;\nTypeComparator.prototype.visitFixedSizeBinary      = compareFixedSizeBinary;\nTypeComparator.prototype.visitDate                 =            compareDate;\nTypeComparator.prototype.visitDateDay              =            compareDate;\nTypeComparator.prototype.visitDateMillisecond      =            compareDate;\nTypeComparator.prototype.visitTimestamp            =       compareTimestamp;\nTypeComparator.prototype.visitTimestampSecond      =       compareTimestamp;\nTypeComparator.prototype.visitTimestampMillisecond =       compareTimestamp;\nTypeComparator.prototype.visitTimestampMicrosecond =       compareTimestamp;\nTypeComparator.prototype.visitTimestampNanosecond  =       compareTimestamp;\nTypeComparator.prototype.visitTime                 =            compareTime;\nTypeComparator.prototype.visitTimeSecond           =            compareTime;\nTypeComparator.prototype.visitTimeMillisecond      =            compareTime;\nTypeComparator.prototype.visitTimeMicrosecond      =            compareTime;\nTypeComparator.prototype.visitTimeNanosecond       =            compareTime;\nTypeComparator.prototype.visitDecimal              =             compareAny;\nTypeComparator.prototype.visitList                 =            compareList;\nTypeComparator.prototype.visitStruct               =          compareStruct;\nTypeComparator.prototype.visitUnion                =           compareUnion;\nTypeComparator.prototype.visitDenseUnion           =           compareUnion;\nTypeComparator.prototype.visitSparseUnion          =           compareUnion;\nTypeComparator.prototype.visitDictionary           =      compareDictionary;\nTypeComparator.prototype.visitInterval             =        compareInterval;\nTypeComparator.prototype.visitIntervalDayTime      =        compareInterval;\nTypeComparator.prototype.visitIntervalYearMonth    =        compareInterval;\nTypeComparator.prototype.visitFixedSizeList        =   compareFixedSizeList;\nTypeComparator.prototype.visitMap                  =             compareMap;\n\n/** @ignore */\nexport const instance = new TypeComparator();\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\n/* tslint:disable:class-name */\n\nimport { Field } from './schema';\nimport { flatbuffers } from 'flatbuffers';\nimport { TypedArrayConstructor } from './interfaces';\nimport { VectorType as V, TypeToDataType } from './interfaces';\nimport { instance as comparer } from './visitor/typecomparator';\n\nimport Long = flatbuffers.Long;\nimport {\n    Type,\n    Precision, UnionMode,\n    DateUnit, TimeUnit, IntervalUnit\n} from './enum';\n\n/** @ignore */\nexport type TimeBitWidth = 32 | 64;\n/** @ignore */\nexport type IntBitWidth = 8 | 16 | 32 | 64;\n/** @ignore */\nexport type IsSigned = { 'true': true; 'false': false };\n/** @ignore */\nexport type RowLike<T extends { [key: string]: DataType }> =\n      ( Iterable<[string, T[keyof T]['TValue'] | null]> )\n    & { [P in keyof T]: T[P]['TValue'] | null }\n    & { get<K extends keyof T>(key: K): T[K]['TValue'] | null; }\n    & { set<K extends keyof T>(key: K, val: T[K]['TValue'] | null): void; }\n    ;\n\n/** @ignore */\nexport type MapLike<K extends DataType = any, V extends DataType = any> =\n      { [P in K['TValue']]: V['TValue'] | null }\n    & ( Map<K['TValue'], V['TValue'] | null> )\n    ;\n\nexport interface DataType<TType extends Type = Type, TChildren extends { [key: string]: DataType } = any> {\n    readonly TType: TType;\n    readonly TArray: any;\n    readonly TValue: any;\n    readonly ArrayType: any;\n    readonly children: Field<TChildren[keyof TChildren]>[];\n}\n\n/**\n * An abstract base class for classes that encapsulate metadata about each of\n * the logical types that Arrow can represent.\n */\nexport abstract class DataType<TType extends Type = Type, TChildren extends { [key: string]: DataType } = any> {\n\n    // @ts-ignore\n    public [Symbol.toStringTag]: string;\n\n    /** @nocollapse */ static            isNull (x: any): x is Null            { return x && x.typeId === Type.Null;            }\n    /** @nocollapse */ static             isInt (x: any): x is Int_            { return x && x.typeId === Type.Int;             }\n    /** @nocollapse */ static           isFloat (x: any): x is Float           { return x && x.typeId === Type.Float;           }\n    /** @nocollapse */ static          isBinary (x: any): x is Binary          { return x && x.typeId === Type.Binary;          }\n    /** @nocollapse */ static            isUtf8 (x: any): x is Utf8            { return x && x.typeId === Type.Utf8;            }\n    /** @nocollapse */ static            isBool (x: any): x is Bool            { return x && x.typeId === Type.Bool;            }\n    /** @nocollapse */ static         isDecimal (x: any): x is Decimal         { return x && x.typeId === Type.Decimal;         }\n    /** @nocollapse */ static            isDate (x: any): x is Date_           { return x && x.typeId === Type.Date;            }\n    /** @nocollapse */ static            isTime (x: any): x is Time_           { return x && x.typeId === Type.Time;            }\n    /** @nocollapse */ static       isTimestamp (x: any): x is Timestamp_      { return x && x.typeId === Type.Timestamp;       }\n    /** @nocollapse */ static        isInterval (x: any): x is Interval_       { return x && x.typeId === Type.Interval;        }\n    /** @nocollapse */ static            isList (x: any): x is List            { return x && x.typeId === Type.List;            }\n    /** @nocollapse */ static          isStruct (x: any): x is Struct          { return x && x.typeId === Type.Struct;          }\n    /** @nocollapse */ static           isUnion (x: any): x is Union_          { return x && x.typeId === Type.Union;           }\n    /** @nocollapse */ static isFixedSizeBinary (x: any): x is FixedSizeBinary { return x && x.typeId === Type.FixedSizeBinary; }\n    /** @nocollapse */ static   isFixedSizeList (x: any): x is FixedSizeList   { return x && x.typeId === Type.FixedSizeList;   }\n    /** @nocollapse */ static             isMap (x: any): x is Map_            { return x && x.typeId === Type.Map;             }\n    /** @nocollapse */ static      isDictionary (x: any): x is Dictionary      { return x && x.typeId === Type.Dictionary;      }\n\n    public get typeId(): TType { return <any> Type.NONE; }\n    public compareTo(other: DataType): other is TypeToDataType<TType> {\n        return comparer.visit(this, other);\n    }\n\n    protected static [Symbol.toStringTag] = ((proto: DataType) => {\n        (<any> proto).children = null;\n        (<any> proto).ArrayType = Array;\n        return proto[Symbol.toStringTag] = 'DataType';\n    })(DataType.prototype);\n}\n\n/** @ignore */\nexport interface Null extends DataType<Type.Null> { TArray: void; TValue: null; }\n/** @ignore */\nexport class Null extends DataType<Type.Null> {\n    public toString() { return `Null`; }\n    public get typeId() { return Type.Null as Type.Null; }\n    protected static [Symbol.toStringTag] = ((proto: Null) => {\n        return proto[Symbol.toStringTag] = 'Null';\n    })(Null.prototype);\n}\n\n/** @ignore */\ntype Ints = Type.Int | Type.Int8 | Type.Int16 | Type.Int32 | Type.Int64 | Type.Uint8 | Type.Uint16 | Type.Uint32 | Type.Uint64;\n/** @ignore */\ntype IType = {\n    [Type.Int   ]: { bitWidth: IntBitWidth; isSigned: true | false; TArray: IntArray;    TValue: number | bigint | Int32Array | Uint32Array; };\n    [Type.Int8  ]: { bitWidth:           8; isSigned: true;         TArray: Int8Array;   TValue: number; };\n    [Type.Int16 ]: { bitWidth:          16; isSigned: true;         TArray: Int16Array;  TValue: number; };\n    [Type.Int32 ]: { bitWidth:          32; isSigned: true;         TArray: Int32Array;  TValue: number; };\n    [Type.Int64 ]: { bitWidth:          64; isSigned: true;         TArray: Int32Array;  TValue: bigint | Int32Array | Uint32Array; };\n    [Type.Uint8 ]: { bitWidth:           8; isSigned: false;        TArray: Uint8Array;  TValue: number; };\n    [Type.Uint16]: { bitWidth:          16; isSigned: false;        TArray: Uint16Array; TValue: number; };\n    [Type.Uint32]: { bitWidth:          32; isSigned: false;        TArray: Uint32Array; TValue: number; };\n    [Type.Uint64]: { bitWidth:          64; isSigned: false;        TArray: Uint32Array; TValue: bigint | Int32Array | Uint32Array; };\n};\n\n/** @ignore */\ninterface Int_<T extends Ints = Ints> extends DataType<T> { TArray: IType[T]['TArray']; TValue: IType[T]['TValue']; }\n/** @ignore */\nclass Int_<T extends Ints = Ints> extends DataType<T> {\n    constructor(public readonly isSigned: IType[T]['isSigned'],\n                public readonly bitWidth: IType[T]['bitWidth']) {\n        super();\n    }\n    public get typeId() { return Type.Int as T; }\n    public get ArrayType(): TypedArrayConstructor<IType[T]['TArray']> {\n        switch (this.bitWidth) {\n            case  8: return this.isSigned ?  Int8Array :  Uint8Array;\n            case 16: return this.isSigned ? Int16Array : Uint16Array;\n            case 32: return this.isSigned ? Int32Array : Uint32Array;\n            case 64: return this.isSigned ? Int32Array : Uint32Array;\n        }\n        throw new Error(`Unrecognized ${this[Symbol.toStringTag]} type`);\n    }\n    public toString() { return `${this.isSigned ? `I` : `Ui`}nt${this.bitWidth}`; }\n    protected static [Symbol.toStringTag] = ((proto: Int_) => {\n        (<any> proto).isSigned = null;\n        (<any> proto).bitWidth = null;\n        return proto[Symbol.toStringTag] = 'Int';\n    })(Int_.prototype);\n}\n\nexport { Int_ as Int };\n\n/** @ignore */\nexport class Int8 extends Int_<Type.Int8> { constructor() { super(true, 8); } }\n/** @ignore */\nexport class Int16 extends Int_<Type.Int16> { constructor() { super(true, 16); } }\n/** @ignore */\nexport class Int32 extends Int_<Type.Int32> { constructor() { super(true, 32); } }\n/** @ignore */\nexport class Int64 extends Int_<Type.Int64> { constructor() { super(true, 64); } }\n/** @ignore */\nexport class Uint8 extends Int_<Type.Uint8> { constructor() { super(false, 8); } }\n/** @ignore */\nexport class Uint16 extends Int_<Type.Uint16> { constructor() { super(false, 16); } }\n/** @ignore */\nexport class Uint32 extends Int_<Type.Uint32> { constructor() { super(false, 32); } }\n/** @ignore */\nexport class Uint64 extends Int_<Type.Uint64> { constructor() { super(false, 64); } }\n\nObject.defineProperty(Int8.prototype, 'ArrayType', { value: Int8Array });\nObject.defineProperty(Int16.prototype, 'ArrayType', { value: Int16Array });\nObject.defineProperty(Int32.prototype, 'ArrayType', { value: Int32Array });\nObject.defineProperty(Int64.prototype, 'ArrayType', { value: Int32Array });\nObject.defineProperty(Uint8.prototype, 'ArrayType', { value: Uint8Array });\nObject.defineProperty(Uint16.prototype, 'ArrayType', { value: Uint16Array });\nObject.defineProperty(Uint32.prototype, 'ArrayType', { value: Uint32Array });\nObject.defineProperty(Uint64.prototype, 'ArrayType', { value: Uint32Array });\n\n/** @ignore */\ntype Floats = Type.Float | Type.Float16 | Type.Float32 | Type.Float64;\n/** @ignore */\ntype FType = {\n    [Type.Float  ]: { precision: Precision;        TArray: FloatArray;    TValue: number; };\n    [Type.Float16]: { precision: Precision.HALF;   TArray: Uint16Array;   TValue: number; };\n    [Type.Float32]: { precision: Precision.SINGLE; TArray: Float32Array;  TValue: number; };\n    [Type.Float64]: { precision: Precision.DOUBLE; TArray: Float64Array;  TValue: number; };\n};\n\n/** @ignore */\nexport interface Float<T extends Floats = Floats> extends DataType<T> { TArray: FType[T]['TArray']; TValue: number; }\n/** @ignore */\nexport class Float<T extends Floats = Floats> extends DataType<T> {\n    constructor(public readonly precision: Precision) {\n        super();\n    }\n    public get typeId() { return Type.Float as T; }\n    public get ArrayType(): TypedArrayConstructor<FType[T]['TArray']> {\n        switch (this.precision) {\n            case Precision.HALF: return Uint16Array;\n            case Precision.SINGLE: return Float32Array;\n            case Precision.DOUBLE: return Float64Array;\n        }\n        throw new Error(`Unrecognized ${this[Symbol.toStringTag]} type`);\n    }\n    public toString() { return `Float${(this.precision << 5) || 16}`; }\n    protected static [Symbol.toStringTag] = ((proto: Float) => {\n        (<any> proto).precision = null;\n        return proto[Symbol.toStringTag] = 'Float';\n    })(Float.prototype);\n}\n\n/** @ignore */\nexport class Float16 extends Float<Type.Float16> { constructor() { super(Precision.HALF); } }\n/** @ignore */\nexport class Float32 extends Float<Type.Float32> { constructor() { super(Precision.SINGLE); } }\n/** @ignore */\nexport class Float64 extends Float<Type.Float64> { constructor() { super(Precision.DOUBLE); } }\n\nObject.defineProperty(Float16.prototype, 'ArrayType', { value: Uint16Array });\nObject.defineProperty(Float32.prototype, 'ArrayType', { value: Float32Array });\nObject.defineProperty(Float64.prototype, 'ArrayType', { value: Float64Array });\n\n/** @ignore */\nexport interface Binary extends DataType<Type.Binary> { TArray: Uint8Array; TValue: Uint8Array; ArrayType: TypedArrayConstructor<Uint8Array>; }\n/** @ignore */\nexport class Binary extends DataType<Type.Binary> {\n    constructor() {\n        super();\n    }\n    public get typeId() { return Type.Binary as Type.Binary; }\n    public toString() { return `Binary`; }\n    protected static [Symbol.toStringTag] = ((proto: Binary) => {\n        (<any> proto).ArrayType = Uint8Array;\n        return proto[Symbol.toStringTag] = 'Binary';\n    })(Binary.prototype);\n}\n\n/** @ignore */\nexport interface Utf8 extends DataType<Type.Utf8> { TArray: Uint8Array; TValue: string; ArrayType: TypedArrayConstructor<Uint8Array>; }\n/** @ignore */\nexport class Utf8 extends DataType<Type.Utf8> {\n    constructor() {\n        super();\n    }\n    public get typeId() { return Type.Utf8 as Type.Utf8; }\n    public toString() { return `Utf8`; }\n    protected static [Symbol.toStringTag] = ((proto: Utf8) => {\n        (<any> proto).ArrayType = Uint8Array;\n        return proto[Symbol.toStringTag] = 'Utf8';\n    })(Utf8.prototype);\n}\n\n/** @ignore */\nexport interface Bool extends DataType<Type.Bool> { TArray: Uint8Array; TValue: boolean; ArrayType: TypedArrayConstructor<Uint8Array>; }\n/** @ignore */\nexport class Bool extends DataType<Type.Bool> {\n    constructor() {\n        super();\n    }\n    public get typeId() { return Type.Bool as Type.Bool; }\n    public toString() { return `Bool`; }\n    protected static [Symbol.toStringTag] = ((proto: Bool) => {\n        (<any> proto).ArrayType = Uint8Array;\n        return proto[Symbol.toStringTag] = 'Bool';\n    })(Bool.prototype);\n}\n\n/** @ignore */\nexport interface Decimal extends DataType<Type.Decimal> { TArray: Uint32Array; TValue: Uint32Array; ArrayType: TypedArrayConstructor<Uint32Array>; }\n/** @ignore */\nexport class Decimal extends DataType<Type.Decimal> {\n    constructor(public readonly scale: number,\n                public readonly precision: number) {\n        super();\n    }\n    public get typeId() { return Type.Decimal as Type.Decimal; }\n    public toString() { return `Decimal[${this.precision}e${this.scale > 0 ? `+` : ``}${this.scale}]`; }\n    protected static [Symbol.toStringTag] = ((proto: Decimal) => {\n        (<any> proto).scale = null;\n        (<any> proto).precision = null;\n        (<any> proto).ArrayType = Uint32Array;\n        return proto[Symbol.toStringTag] = 'Decimal';\n    })(Decimal.prototype);\n}\n\n/** @ignore */\nexport type Dates = Type.Date | Type.DateDay | Type.DateMillisecond;\n/** @ignore */\nexport interface Date_<T extends Dates = Dates> extends DataType<T> { TArray: Int32Array; TValue: Date; ArrayType: TypedArrayConstructor<Int32Array>; }\n/** @ignore */\nexport class Date_<T extends Dates = Dates> extends DataType<T> {\n    constructor(public readonly unit: DateUnit) {\n        super();\n    }\n    public get typeId() { return Type.Date as T; }\n    public toString() { return `Date${(this.unit + 1) * 32}<${DateUnit[this.unit]}>`; }\n    protected static [Symbol.toStringTag] = ((proto: Date_) => {\n        (<any> proto).unit = null;\n        (<any> proto).ArrayType = Int32Array;\n        return proto[Symbol.toStringTag] = 'Date';\n    })(Date_.prototype);\n}\n\n/** @ignore */\nexport class DateDay extends Date_<Type.DateDay> { constructor() { super(DateUnit.DAY); } }\n/** @ignore */\nexport class DateMillisecond extends Date_<Type.DateMillisecond> { constructor() { super(DateUnit.MILLISECOND); } }\n\n/** @ignore */\ntype Times = Type.Time | Type.TimeSecond | Type.TimeMillisecond | Type.TimeMicrosecond | Type.TimeNanosecond;\n/** @ignore */\ntype TimesType = {\n    [Type.Time           ]: { unit: TimeUnit;             TValue: number | Int32Array };\n    [Type.TimeSecond     ]: { unit: TimeUnit.SECOND;      TValue: number;             };\n    [Type.TimeMillisecond]: { unit: TimeUnit.MILLISECOND; TValue: number;             };\n    [Type.TimeMicrosecond]: { unit: TimeUnit.MICROSECOND; TValue: Int32Array;         };\n    [Type.TimeNanosecond ]: { unit: TimeUnit.NANOSECOND;  TValue: Int32Array;         };\n};\n\n/** @ignore */\ninterface Time_<T extends Times = Times> extends DataType<T> { TArray: Int32Array; TValue: TimesType[T]['TValue']; ArrayType: TypedArrayConstructor<Int32Array>; }\n/** @ignore */\nclass Time_<T extends Times = Times> extends DataType<T> {\n    constructor(public readonly unit: TimesType[T]['unit'],\n                public readonly bitWidth: TimeBitWidth) {\n        super();\n    }\n    public get typeId() { return Type.Time as T; }\n    public toString() { return `Time${this.bitWidth}<${TimeUnit[this.unit]}>`; }\n    protected static [Symbol.toStringTag] = ((proto: Time_) => {\n        (<any> proto).unit = null;\n        (<any> proto).bitWidth = null;\n        (<any> proto).ArrayType = Int32Array;\n        return proto[Symbol.toStringTag] = 'Time';\n    })(Time_.prototype);\n}\n\nexport { Time_ as Time };\n\n/** @ignore */\nexport class TimeSecond extends Time_<Type.TimeSecond> { constructor() { super(TimeUnit.SECOND, 32); } }\n/** @ignore */\nexport class TimeMillisecond extends Time_<Type.TimeMillisecond> { constructor() { super(TimeUnit.MILLISECOND, 32); } }\n/** @ignore */\nexport class TimeMicrosecond extends Time_<Type.TimeMicrosecond> { constructor() { super(TimeUnit.MICROSECOND, 64); } }\n/** @ignore */\nexport class TimeNanosecond extends Time_<Type.TimeNanosecond> { constructor() { super(TimeUnit.NANOSECOND, 64); } }\n\n/** @ignore */\ntype Timestamps = Type.Timestamp | Type.TimestampSecond | Type.TimestampMillisecond | Type.TimestampMicrosecond | Type.TimestampNanosecond;\n/** @ignore */\ninterface Timestamp_<T extends Timestamps = Timestamps> extends DataType<T> { TArray: Int32Array; TValue: number; ArrayType: TypedArrayConstructor<Int32Array>; }\n/** @ignore */\nclass Timestamp_<T extends Timestamps = Timestamps> extends DataType<T> {\n    constructor(public readonly unit: TimeUnit,\n                public readonly timezone?: string | null) {\n        super();\n    }\n    public get typeId() { return Type.Timestamp as T; }\n    public toString() { return `Timestamp<${TimeUnit[this.unit]}${this.timezone ? `, ${this.timezone}` : ``}>`; }\n    protected static [Symbol.toStringTag] = ((proto: Timestamp_) => {\n        (<any> proto).unit = null;\n        (<any> proto).timezone = null;\n        (<any> proto).ArrayType = Int32Array;\n        return proto[Symbol.toStringTag] = 'Timestamp';\n    })(Timestamp_.prototype);\n}\n\nexport { Timestamp_ as Timestamp };\n\n/** @ignore */\nexport class TimestampSecond extends Timestamp_<Type.TimestampSecond> { constructor(timezone?: string | null) { super(TimeUnit.SECOND, timezone); } }\n/** @ignore */\nexport class TimestampMillisecond extends Timestamp_<Type.TimestampMillisecond> { constructor(timezone?: string | null) { super(TimeUnit.MILLISECOND, timezone); } }\n/** @ignore */\nexport class TimestampMicrosecond extends Timestamp_<Type.TimestampMicrosecond> { constructor(timezone?: string | null) { super(TimeUnit.MICROSECOND, timezone); } }\n/** @ignore */\nexport class TimestampNanosecond extends Timestamp_<Type.TimestampNanosecond> { constructor(timezone?: string | null) { super(TimeUnit.NANOSECOND, timezone); } }\n\n/** @ignore */\ntype Intervals = Type.Interval | Type.IntervalDayTime | Type.IntervalYearMonth;\n/** @ignore */\ninterface Interval_<T extends Intervals = Intervals> extends DataType<T> { TArray: Int32Array; TValue: Int32Array; ArrayType: TypedArrayConstructor<Int32Array>; }\n/** @ignore */\nclass Interval_<T extends Intervals = Intervals> extends DataType<T> {\n    constructor(public readonly unit: IntervalUnit) {\n        super();\n    }\n    public get typeId() { return Type.Interval as T; }\n    public toString() { return `Interval<${IntervalUnit[this.unit]}>`; }\n    protected static [Symbol.toStringTag] = ((proto: Interval_) => {\n        (<any> proto).unit = null;\n        (<any> proto).ArrayType = Int32Array;\n        return proto[Symbol.toStringTag] = 'Interval';\n    })(Interval_.prototype);\n}\n\nexport { Interval_ as Interval };\n\n/** @ignore */\nexport class IntervalDayTime extends Interval_<Type.IntervalDayTime> { constructor() { super(IntervalUnit.DAY_TIME); } }\n/** @ignore */\nexport class IntervalYearMonth extends Interval_<Type.IntervalYearMonth> { constructor() { super(IntervalUnit.YEAR_MONTH); } }\n\n/** @ignore */\nexport interface List<T extends DataType = any> extends DataType<Type.List, { [0]: T }>  { TArray: IterableArrayLike<T>; TValue: V<T>; }\n/** @ignore */\nexport class List<T extends DataType = any> extends DataType<Type.List, { [0]: T }> {\n    constructor(child: Field<T>) {\n        super();\n        this.children = [child];\n    }\n    public readonly children: Field<T>[];\n    public get typeId() { return Type.List as Type.List; }\n    public toString() { return `List<${this.valueType}>`; }\n    public get valueType(): T { return this.children[0].type as T; }\n    public get valueField(): Field<T> { return this.children[0] as Field<T>; }\n    public get ArrayType(): T['ArrayType'] { return this.valueType.ArrayType; }\n    protected static [Symbol.toStringTag] = ((proto: List) => {\n        (<any> proto).children = null;\n        return proto[Symbol.toStringTag] = 'List';\n    })(List.prototype);\n}\n\n/** @ignore */\nexport interface Struct<T extends { [key: string]: DataType } = any> extends DataType<Type.Struct> { TArray: IterableArrayLike<RowLike<T>>; TValue: RowLike<T>; dataTypes: T; }\n/** @ignore */\nexport class Struct<T extends { [key: string]: DataType } = any> extends DataType<Type.Struct, T> {\n    public readonly children: Field<T[keyof T]>[];\n    constructor(children: Field<T[keyof T]>[]) {\n        super();\n        this.children = children;\n    }\n    public get typeId() { return Type.Struct as Type.Struct; }\n    public toString() { return `Struct<{${this.children.map((f) => `${f.name}:${f.type}`).join(`, `)}}>`; }\n    protected static [Symbol.toStringTag] = ((proto: Struct) => {\n        (<any> proto).children = null;\n        return proto[Symbol.toStringTag] = 'Struct';\n    })(Struct.prototype);\n}\n\n/** @ignore */\ntype Unions = Type.Union | Type.DenseUnion | Type.SparseUnion;\n/** @ignore */\ninterface Union_<T extends Unions = Unions> extends DataType<T> { TArray: Int8Array; TValue: any; ArrayType: TypedArrayConstructor<Int8Array>; }\n/** @ignore */\nclass Union_<T extends Unions = Unions> extends DataType<T> {\n    public readonly mode: UnionMode;\n    public readonly typeIds: Int32Array;\n    public readonly children: Field<any>[];\n    public readonly typeIdToChildIndex: { [key: number]: number };\n    constructor(mode: UnionMode,\n                typeIds: number[] | Int32Array,\n                children: Field<any>[]) {\n        super();\n        this.mode = mode;\n        this.children = children;\n        this.typeIds = typeIds = Int32Array.from(typeIds);\n        this.typeIdToChildIndex = typeIds.reduce((typeIdToChildIndex, typeId, idx) => {\n            return (typeIdToChildIndex[typeId] = idx) && typeIdToChildIndex || typeIdToChildIndex;\n        }, Object.create(null) as { [key: number]: number });\n    }\n    public get typeId() { return Type.Union as T; }\n    public toString() { return `${this[Symbol.toStringTag]}<${\n        this.children.map((x) => `${x.type}`).join(` | `)\n    }>`; }\n    protected static [Symbol.toStringTag] = ((proto: Union_) => {\n        (<any> proto).mode = null;\n        (<any> proto).typeIds = null;\n        (<any> proto).children = null;\n        (<any> proto).typeIdToChildIndex = null;\n        (<any> proto).ArrayType = Int8Array;\n        return proto[Symbol.toStringTag] = 'Union';\n    })(Union_.prototype);\n}\n\nexport { Union_ as Union };\n\n/** @ignore */\nexport class DenseUnion extends Union_<Type.DenseUnion> {\n    constructor(typeIds: number[] | Int32Array, children: Field[]) {\n        super(UnionMode.Dense, typeIds, children);\n    }\n}\n\n/** @ignore */\nexport class SparseUnion extends Union_<Type.SparseUnion> {\n    constructor(typeIds: number[] | Int32Array, children: Field[]) {\n        super(UnionMode.Sparse, typeIds, children);\n    }\n}\n\n/** @ignore */\nexport interface FixedSizeBinary extends DataType<Type.FixedSizeBinary> { TArray: Uint8Array; TValue: Uint8Array; ArrayType: TypedArrayConstructor<Uint8Array>; }\n/** @ignore */\nexport class FixedSizeBinary extends DataType<Type.FixedSizeBinary> {\n    constructor(public readonly byteWidth: number) {\n        super();\n    }\n    public get typeId() { return Type.FixedSizeBinary as Type.FixedSizeBinary; }\n    public toString() { return `FixedSizeBinary[${this.byteWidth}]`; }\n    protected static [Symbol.toStringTag] = ((proto: FixedSizeBinary) => {\n        (<any> proto).byteWidth = null;\n        (<any> proto).ArrayType = Uint8Array;\n        return proto[Symbol.toStringTag] = 'FixedSizeBinary';\n    })(FixedSizeBinary.prototype);\n}\n\n/** @ignore */\nexport interface FixedSizeList<T extends DataType = any> extends DataType<Type.FixedSizeList> { TArray: IterableArrayLike<T['TArray']>; TValue: V<T>; }\n/** @ignore */\nexport class FixedSizeList<T extends DataType = any> extends DataType<Type.FixedSizeList, { [0]: T }> {\n    public readonly children: Field<T>[];\n    constructor(public readonly listSize: number, child: Field<T>) {\n        super();\n        this.children = [child];\n    }\n    public get typeId() { return Type.FixedSizeList as Type.FixedSizeList; }\n    public get valueType(): T { return this.children[0].type as T; }\n    public get valueField(): Field<T> { return this.children[0] as Field<T>; }\n    public get ArrayType(): T['ArrayType'] { return this.valueType.ArrayType; }\n    public toString() { return `FixedSizeList[${this.listSize}]<${this.valueType}>`; }\n    protected static [Symbol.toStringTag] = ((proto: FixedSizeList) => {\n        (<any> proto).children = null;\n        (<any> proto).listSize = null;\n        return proto[Symbol.toStringTag] = 'FixedSizeList';\n    })(FixedSizeList.prototype);\n}\n\n/** @ignore */\nexport interface Map_<TKey extends DataType = any, TValue extends DataType = any> extends DataType<Type.Map> {\n    TArray: IterableArrayLike<Map<TKey['TValue'], TValue['TValue'] | null>>;\n    TChild: Struct<{ key: TKey, value: TValue }>;\n    TValue: MapLike<TKey, TValue>;\n}\n\n/** @ignore */\nexport class Map_<TKey extends DataType = any, TValue extends DataType = any> extends DataType<Type.Map> {\n    constructor(child: Field<Struct<{ key: TKey, value: TValue }>>, keysSorted = false) {\n        super();\n        this.children = [child];\n        this.keysSorted = keysSorted;\n    }\n    public readonly keysSorted: boolean;\n    public readonly children: Field<Struct<{ key: TKey, value: TValue }>>[];\n    public get typeId() { return Type.Map as Type.Map; }\n    public get keyType(): TKey { return this.children[0].type.children[0].type as TKey; }\n    public get valueType(): TValue { return this.children[0].type.children[1].type as TValue; }\n    public toString() { return `Map<{${this.children[0].type.children.map((f) => `${f.name}:${f.type}`).join(`, `)}}>`; }\n    protected static [Symbol.toStringTag] = ((proto: Map_) => {\n        (<any> proto).children = null;\n        (<any> proto).keysSorted = null;\n        return proto[Symbol.toStringTag] = 'Map_';\n    })(Map_.prototype);\n}\n\n/** @ignore */\nconst getId = ((atomicDictionaryId) => () => ++atomicDictionaryId)(-1);\n\n/** @ignore */\nexport type TKeys = Int8 | Int16 | Int32 | Uint8 | Uint16 | Uint32;\n\n/** @ignore */\nexport interface Dictionary<T extends DataType = any, TKey extends TKeys = TKeys> extends DataType<Type.Dictionary> { TArray: TKey['TArray']; TValue: T['TValue']; }\n/** @ignore */\nexport class Dictionary<T extends DataType = any, TKey extends TKeys = TKeys> extends DataType<Type.Dictionary> {\n    public readonly id: number;\n    public readonly indices: TKey;\n    public readonly dictionary: T;\n    public readonly isOrdered: boolean;\n    constructor(dictionary: T, indices: TKey, id?: Long | number | null, isOrdered?: boolean | null) {\n        super();\n        this.indices = indices;\n        this.dictionary = dictionary;\n        this.isOrdered = isOrdered || false;\n        this.id = id == null ? getId() : typeof id === 'number' ? id : id.low;\n    }\n    public get typeId() { return Type.Dictionary as Type.Dictionary; }\n    public get children() { return this.dictionary.children; }\n    public get valueType(): T { return this.dictionary as T; }\n    public get ArrayType(): T['ArrayType'] { return this.dictionary.ArrayType; }\n    public toString() { return `Dictionary<${this.indices}, ${this.dictionary}>`; }\n    protected static [Symbol.toStringTag] = ((proto: Dictionary) => {\n        (<any> proto).id = null;\n        (<any> proto).indices = null;\n        (<any> proto).isOrdered = null;\n        (<any> proto).dictionary = null;\n        return proto[Symbol.toStringTag] = 'Dictionary';\n    })(Dictionary.prototype);\n}\n\n/** @ignore */\nexport interface IterableArrayLike<T = any> extends ArrayLike<T>, Iterable<T> {}\n/** @ignore */\nexport type FloatArray = Uint16Array | Float32Array | Float64Array;\n/** @ignore */\nexport type IntArray = Int8Array | Int16Array | Int32Array | Uint8Array | Uint16Array | Uint32Array;\n\n/** @ignore */\nexport function strideForType(type: DataType) {\n    let t: any = type;\n    switch (type.typeId) {\n        case Type.Decimal: return 4;\n        case Type.Timestamp: return 2;\n        case Type.Date: return 1 + (t as Date_).unit;\n        case Type.Interval: return 1 + (t as Interval_).unit;\n        case Type.Int: return 1 + +((t as Int_).bitWidth > 32);\n        case Type.Time: return 1 + +((t as Time_).bitWidth > 32);\n        case Type.FixedSizeList: return (t as FixedSizeList).listSize;\n        case Type.FixedSizeBinary: return (t as FixedSizeBinary).byteWidth;\n        default: return 1;\n    }\n}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { Vector } from './vector';\nimport { truncateBitmap } from './util/bit';\nimport { popcnt_bit_range } from './util/bit';\nimport { BufferType, UnionMode, Type } from './enum';\nimport { DataType, SparseUnion, DenseUnion, strideForType } from './type';\nimport { toArrayBufferView, toUint8Array, toInt32Array } from './util/buffer';\nimport {\n    Dictionary,\n    Null, Int, Float,\n    Binary, Bool, Utf8, Decimal,\n    Date_, Time, Timestamp, Interval,\n    List, Struct, Union, FixedSizeBinary, FixedSizeList, Map_,\n} from './type';\n\n// When slicing, we do not know the null count of the sliced range without\n// doing some computation. To avoid doing this eagerly, we set the null count\n// to -1 (any negative number will do). When Vector.nullCount is called the\n// first time, the null count will be computed. See ARROW-33\n/** @ignore */ export type kUnknownNullCount = -1;\n/** @ignore */ export const kUnknownNullCount = -1;\n\n/** @ignore */ export type NullBuffer = Uint8Array | null | undefined;\n/** @ignore */ export type TypeIdsBuffer = Int8Array  | ArrayLike<number> | Iterable<number> | undefined;\n/** @ignore */ export type ValueOffsetsBuffer = Int32Array  | ArrayLike<number> | Iterable<number> | undefined;\n/** @ignore */ export type DataBuffer<T extends DataType> = T['TArray'] | ArrayLike<number> | Iterable<number> | undefined;\n\n/** @ignore */\nexport interface Buffers<T extends DataType> {\n      [BufferType.OFFSET]: Int32Array;\n        [BufferType.DATA]: T['TArray'];\n    [BufferType.VALIDITY]: Uint8Array;\n        [BufferType.TYPE]: T['TArray'];\n}\n\n/** @ignore */\nexport interface Data<T extends DataType = DataType> {\n    readonly TType: T['TType'];\n    readonly TArray: T['TArray'];\n    readonly TValue: T['TValue'];\n}\n\n/** @ignore */\nexport class Data<T extends DataType = DataType> {\n\n    public readonly type: T;\n    public readonly length: number;\n    public readonly offset: number;\n    public readonly stride: number;\n    public readonly childData: Data[];\n\n    /**\n     * The dictionary for this Vector, if any. Only used for Dictionary type.\n     */\n    public dictionary?: Vector;\n\n    public readonly values: Buffers<T>[BufferType.DATA];\n    // @ts-ignore\n    public readonly typeIds: Buffers<T>[BufferType.TYPE];\n    // @ts-ignore\n    public readonly nullBitmap: Buffers<T>[BufferType.VALIDITY];\n    // @ts-ignore\n    public readonly valueOffsets: Buffers<T>[BufferType.OFFSET];\n\n    public get typeId(): T['TType'] { return this.type.typeId; }\n    public get ArrayType(): T['ArrayType'] { return this.type.ArrayType; }\n    public get buffers() {\n        return [this.valueOffsets, this.values, this.nullBitmap, this.typeIds] as Buffers<T>;\n    }\n    public get byteLength(): number {\n        let byteLength = 0;\n        let { valueOffsets, values, nullBitmap, typeIds } = this;\n        valueOffsets && (byteLength += valueOffsets.byteLength);\n        values       && (byteLength += values.byteLength);\n        nullBitmap   && (byteLength += nullBitmap.byteLength);\n        typeIds      && (byteLength += typeIds.byteLength);\n        return this.childData.reduce((byteLength, child) => byteLength + child.byteLength, byteLength);\n    }\n\n    protected _nullCount: number | kUnknownNullCount;\n\n    public get nullCount() {\n        let nullCount = this._nullCount;\n        let nullBitmap: Uint8Array | undefined;\n        if (nullCount <= kUnknownNullCount && (nullBitmap = this.nullBitmap)) {\n            this._nullCount = nullCount = this.length - popcnt_bit_range(nullBitmap, this.offset, this.offset + this.length);\n        }\n        return nullCount;\n    }\n\n    constructor(type: T, offset: number, length: number, nullCount?: number, buffers?: Partial<Buffers<T>> | Data<T>, childData?: (Data | Vector)[], dictionary?: Vector) {\n        this.type = type;\n        this.dictionary = dictionary;\n        this.offset = Math.floor(Math.max(offset || 0, 0));\n        this.length = Math.floor(Math.max(length || 0, 0));\n        this._nullCount = Math.floor(Math.max(nullCount || 0, -1));\n        this.childData = (childData || []).map((x) => x instanceof Data ? x : x.data) as Data[];\n        let buffer: Buffers<T>[keyof Buffers<T>];\n        if (buffers instanceof Data) {\n            this.stride = buffers.stride;\n            this.values = buffers.values;\n            this.typeIds = buffers.typeIds;\n            this.nullBitmap = buffers.nullBitmap;\n            this.valueOffsets = buffers.valueOffsets;\n        } else {\n            this.stride = strideForType(type);\n            if (buffers) {\n                (buffer = (buffers as Buffers<T>)[0]) && (this.valueOffsets = buffer);\n                (buffer = (buffers as Buffers<T>)[1]) && (this.values = buffer);\n                (buffer = (buffers as Buffers<T>)[2]) && (this.nullBitmap = buffer);\n                (buffer = (buffers as Buffers<T>)[3]) && (this.typeIds = buffer);\n            }\n        }\n    }\n\n    public clone<R extends DataType>(type: R, offset = this.offset, length = this.length, nullCount = this._nullCount, buffers: Buffers<R> = <any> this, childData: (Data | Vector)[] = this.childData) {\n        return new Data(type, offset, length, nullCount, buffers, childData, this.dictionary);\n    }\n\n    public slice(offset: number, length: number): Data<T> {\n        const { stride, typeId, childData } = this;\n        // +true === 1, +false === 0, so this means\n        // we keep nullCount at 0 if it's already 0,\n        // otherwise set to the invalidated flag -1\n        const nullCount = +(this._nullCount === 0) - 1;\n        const childStride = typeId === 16 /* FixedSizeList */ ? stride : 1;\n        const buffers = this._sliceBuffers(offset, length, stride, typeId);\n        return this.clone<T>(this.type, this.offset + offset, length, nullCount, buffers,\n            // Don't slice children if we have value offsets (the variable-width types)\n            (!childData.length || this.valueOffsets) ? childData : this._sliceChildren(childData, childStride * offset, childStride * length));\n    }\n\n    public _changeLengthAndBackfillNullBitmap(newLength: number): Data<T> {\n        if (this.typeId === Type.Null) {\n            return this.clone(this.type, 0, newLength, 0);\n        }\n        const { length, nullCount } = this;\n        // start initialized with 0s (nulls), then fill from 0 to length with 1s (not null)\n        const bitmap = new Uint8Array(((newLength + 63) & ~63) >> 3).fill(255, 0, length >> 3);\n        // set all the bits in the last byte (up to bit `length - length % 8`) to 1 (not null)\n        bitmap[length >> 3] = (1 << (length - (length & ~7))) - 1;\n        // if we have a nullBitmap, truncate + slice and set it over the pre-filled 1s\n        if (nullCount > 0) {\n            bitmap.set(truncateBitmap(this.offset, length, this.nullBitmap), 0);\n        }\n        const buffers = this.buffers;\n        buffers[BufferType.VALIDITY] = bitmap;\n        return this.clone(this.type, 0, newLength, nullCount + (newLength - length), buffers);\n    }\n\n    protected _sliceBuffers(offset: number, length: number, stride: number, typeId: T['TType']): Buffers<T> {\n        let arr: any, { buffers } = this;\n        // If typeIds exist, slice the typeIds buffer\n        (arr = buffers[BufferType.TYPE]) && (buffers[BufferType.TYPE] = arr.subarray(offset, offset + length));\n        // If offsets exist, only slice the offsets buffer\n        (arr = buffers[BufferType.OFFSET]) && (buffers[BufferType.OFFSET] = arr.subarray(offset, offset + length + 1)) ||\n        // Otherwise if no offsets, slice the data buffer. Don't slice the data vector for Booleans, since the offset goes by bits not bytes\n        (arr = buffers[BufferType.DATA]) && (buffers[BufferType.DATA] = typeId === 6 ? arr : arr.subarray(stride * offset, stride * (offset + length)));\n        return buffers;\n    }\n\n    protected _sliceChildren(childData: Data[], offset: number, length: number): Data[] {\n        return childData.map((child) => child.slice(offset, length));\n    }\n\n    //\n    // Convenience methods for creating Data instances for each of the Arrow Vector types\n    //\n    /** @nocollapse */\n    public static new<T extends DataType>(type: T, offset: number, length: number, nullCount?: number, buffers?: Partial<Buffers<T>> | Data<T>, childData?: (Data | Vector)[], dictionary?: Vector): Data<T> {\n        if (buffers instanceof Data) { buffers = buffers.buffers; } else if (!buffers) { buffers = [] as Partial<Buffers<T>>; }\n        switch (type.typeId) {\n            case Type.Null:            return <unknown> Data.Null(            <unknown> type as Null,            offset, length) as Data<T>;\n            case Type.Int:             return <unknown> Data.Int(             <unknown> type as Int,             offset, length, nullCount || 0, buffers[BufferType.VALIDITY], buffers[BufferType.DATA] || []) as Data<T>;\n            case Type.Dictionary:      return <unknown> Data.Dictionary(      <unknown> type as Dictionary,      offset, length, nullCount || 0, buffers[BufferType.VALIDITY], buffers[BufferType.DATA] || [], dictionary!) as Data<T>;\n            case Type.Float:           return <unknown> Data.Float(           <unknown> type as Float,           offset, length, nullCount || 0, buffers[BufferType.VALIDITY], buffers[BufferType.DATA] || []) as Data<T>;\n            case Type.Bool:            return <unknown> Data.Bool(            <unknown> type as Bool,            offset, length, nullCount || 0, buffers[BufferType.VALIDITY], buffers[BufferType.DATA] || []) as Data<T>;\n            case Type.Decimal:         return <unknown> Data.Decimal(         <unknown> type as Decimal,         offset, length, nullCount || 0, buffers[BufferType.VALIDITY], buffers[BufferType.DATA] || []) as Data<T>;\n            case Type.Date:            return <unknown> Data.Date(            <unknown> type as Date_,           offset, length, nullCount || 0, buffers[BufferType.VALIDITY], buffers[BufferType.DATA] || []) as Data<T>;\n            case Type.Time:            return <unknown> Data.Time(            <unknown> type as Time,            offset, length, nullCount || 0, buffers[BufferType.VALIDITY], buffers[BufferType.DATA] || []) as Data<T>;\n            case Type.Timestamp:       return <unknown> Data.Timestamp(       <unknown> type as Timestamp,       offset, length, nullCount || 0, buffers[BufferType.VALIDITY], buffers[BufferType.DATA] || []) as Data<T>;\n            case Type.Interval:        return <unknown> Data.Interval(        <unknown> type as Interval,        offset, length, nullCount || 0, buffers[BufferType.VALIDITY], buffers[BufferType.DATA] || []) as Data<T>;\n            case Type.FixedSizeBinary: return <unknown> Data.FixedSizeBinary( <unknown> type as FixedSizeBinary, offset, length, nullCount || 0, buffers[BufferType.VALIDITY], buffers[BufferType.DATA] || []) as Data<T>;\n            case Type.Binary:          return <unknown> Data.Binary(          <unknown> type as Binary,          offset, length, nullCount || 0, buffers[BufferType.VALIDITY], buffers[BufferType.OFFSET] || [], buffers[BufferType.DATA] || []) as Data<T>;\n            case Type.Utf8:            return <unknown> Data.Utf8(            <unknown> type as Utf8,            offset, length, nullCount || 0, buffers[BufferType.VALIDITY], buffers[BufferType.OFFSET] || [], buffers[BufferType.DATA] || []) as Data<T>;\n            case Type.List:            return <unknown> Data.List(            <unknown> type as List,            offset, length, nullCount || 0, buffers[BufferType.VALIDITY], buffers[BufferType.OFFSET] || [], (childData || [])[0]) as Data<T>;\n            case Type.FixedSizeList:   return <unknown> Data.FixedSizeList(   <unknown> type as FixedSizeList,   offset, length, nullCount || 0, buffers[BufferType.VALIDITY], (childData || [])[0]) as Data<T>;\n            case Type.Struct:          return <unknown> Data.Struct(          <unknown> type as Struct,          offset, length, nullCount || 0, buffers[BufferType.VALIDITY], childData || []) as Data<T>;\n            case Type.Map:             return <unknown> Data.Map(             <unknown> type as Map_,            offset, length, nullCount || 0, buffers[BufferType.VALIDITY], buffers[BufferType.OFFSET] || [], (childData || [])[0]) as Data<T>;\n            case Type.Union:           return <unknown> Data.Union(           <unknown> type as Union,           offset, length, nullCount || 0, buffers[BufferType.VALIDITY], buffers[BufferType.TYPE] || [], buffers[BufferType.OFFSET] || childData, childData) as Data<T>;\n        }\n        throw new Error(`Unrecognized typeId ${type.typeId}`);\n    }\n\n    /** @nocollapse */\n    public static Null<T extends Null>(type: T, offset: number, length: number) {\n        return new Data(type, offset, length, 0);\n    }\n    /** @nocollapse */\n    public static Int<T extends Int>(type: T, offset: number, length: number, nullCount: number, nullBitmap: NullBuffer, data: DataBuffer<T>) {\n        return new Data(type, offset, length, nullCount, [undefined, toArrayBufferView(type.ArrayType, data), toUint8Array(nullBitmap)]);\n    }\n    /** @nocollapse */\n    public static Dictionary<T extends Dictionary>(type: T, offset: number, length: number, nullCount: number, nullBitmap: NullBuffer, data: DataBuffer<T>, dictionary: Vector<T['dictionary']>) {\n        return new Data(type, offset, length, nullCount, [undefined, toArrayBufferView<T['TArray']>(type.indices.ArrayType, data), toUint8Array(nullBitmap)], [], dictionary);\n    }\n    /** @nocollapse */\n    public static Float<T extends Float>(type: T, offset: number, length: number, nullCount: number, nullBitmap: NullBuffer, data: DataBuffer<T>) {\n        return new Data(type, offset, length, nullCount, [undefined, toArrayBufferView(type.ArrayType, data), toUint8Array(nullBitmap)]);\n    }\n    /** @nocollapse */\n    public static Bool<T extends Bool>(type: T, offset: number, length: number, nullCount: number, nullBitmap: NullBuffer, data: DataBuffer<T>) {\n        return new Data(type, offset, length, nullCount, [undefined, toArrayBufferView(type.ArrayType, data), toUint8Array(nullBitmap)]);\n    }\n    /** @nocollapse */\n    public static Decimal<T extends Decimal>(type: T, offset: number, length: number, nullCount: number, nullBitmap: NullBuffer, data: DataBuffer<T>) {\n        return new Data(type, offset, length, nullCount, [undefined, toArrayBufferView(type.ArrayType, data), toUint8Array(nullBitmap)]);\n    }\n    /** @nocollapse */\n    public static Date<T extends Date_>(type: T, offset: number, length: number, nullCount: number, nullBitmap: NullBuffer, data: DataBuffer<T>) {\n        return new Data(type, offset, length, nullCount, [undefined, toArrayBufferView(type.ArrayType, data), toUint8Array(nullBitmap)]);\n    }\n    /** @nocollapse */\n    public static Time<T extends Time>(type: T, offset: number, length: number, nullCount: number, nullBitmap: NullBuffer, data: DataBuffer<T>) {\n        return new Data(type, offset, length, nullCount, [undefined, toArrayBufferView(type.ArrayType, data), toUint8Array(nullBitmap)]);\n    }\n    /** @nocollapse */\n    public static Timestamp<T extends Timestamp>(type: T, offset: number, length: number, nullCount: number, nullBitmap: NullBuffer, data: DataBuffer<T>) {\n        return new Data(type, offset, length, nullCount, [undefined, toArrayBufferView(type.ArrayType, data), toUint8Array(nullBitmap)]);\n    }\n    /** @nocollapse */\n    public static Interval<T extends Interval>(type: T, offset: number, length: number, nullCount: number, nullBitmap: NullBuffer, data: DataBuffer<T>) {\n        return new Data(type, offset, length, nullCount, [undefined, toArrayBufferView(type.ArrayType, data), toUint8Array(nullBitmap)]);\n    }\n    /** @nocollapse */\n    public static FixedSizeBinary<T extends FixedSizeBinary>(type: T, offset: number, length: number, nullCount: number, nullBitmap: NullBuffer, data: DataBuffer<T>) {\n        return new Data(type, offset, length, nullCount, [undefined, toArrayBufferView(type.ArrayType, data), toUint8Array(nullBitmap)]);\n    }\n    /** @nocollapse */\n    public static Binary<T extends Binary>(type: T, offset: number, length: number, nullCount: number, nullBitmap: NullBuffer, valueOffsets: ValueOffsetsBuffer, data: Uint8Array) {\n        return new Data(type, offset, length, nullCount, [toInt32Array(valueOffsets), toUint8Array(data), toUint8Array(nullBitmap)]);\n    }\n    /** @nocollapse */\n    public static Utf8<T extends Utf8>(type: T, offset: number, length: number, nullCount: number, nullBitmap: NullBuffer, valueOffsets: ValueOffsetsBuffer, data: Uint8Array) {\n        return new Data(type, offset, length, nullCount, [toInt32Array(valueOffsets), toUint8Array(data), toUint8Array(nullBitmap)]);\n    }\n    /** @nocollapse */\n    public static List<T extends List>(type: T, offset: number, length: number, nullCount: number, nullBitmap: NullBuffer, valueOffsets: ValueOffsetsBuffer, child: Data<T['valueType']> | Vector<T['valueType']>) {\n        return new Data(type, offset, length, nullCount, [toInt32Array(valueOffsets), undefined, toUint8Array(nullBitmap)], [child]);\n    }\n    /** @nocollapse */\n    public static FixedSizeList<T extends FixedSizeList>(type: T, offset: number, length: number, nullCount: number, nullBitmap: NullBuffer, child: Data<T['valueType']> | Vector<T['valueType']>) {\n        return new Data(type, offset, length, nullCount, [undefined, undefined, toUint8Array(nullBitmap)], [child]);\n    }\n    /** @nocollapse */\n    public static Struct<T extends Struct>(type: T, offset: number, length: number, nullCount: number, nullBitmap: NullBuffer, children: (Data | Vector)[]) {\n        return new Data(type, offset, length, nullCount, [undefined, undefined, toUint8Array(nullBitmap)], children);\n    }\n    /** @nocollapse */\n    public static Map<T extends Map_>(type: T, offset: number, length: number, nullCount: number, nullBitmap: NullBuffer, valueOffsets: ValueOffsetsBuffer, child: (Data | Vector)) {\n        return new Data(type, offset, length, nullCount, [toInt32Array(valueOffsets), undefined, toUint8Array(nullBitmap)], [child]);\n    }\n    public static Union<T extends SparseUnion>(type: T, offset: number, length: number, nullCount: number, nullBitmap: NullBuffer, typeIds: TypeIdsBuffer, children: (Data | Vector)[], _?: any): Data<T>;\n    public static Union<T extends DenseUnion>(type: T, offset: number, length: number, nullCount: number, nullBitmap: NullBuffer, typeIds: TypeIdsBuffer, valueOffsets: ValueOffsetsBuffer, children: (Data | Vector)[]): Data<T>;\n    public static Union<T extends Union>(type: T, offset: number, length: number, nullCount: number, nullBitmap: NullBuffer, typeIds: TypeIdsBuffer, valueOffsetsOrChildren: ValueOffsetsBuffer | (Data | Vector)[], children?: (Data | Vector)[]): Data<T>;\n    /** @nocollapse */\n    public static Union<T extends Union>(type: T, offset: number, length: number, nullCount: number, nullBitmap: NullBuffer, typeIds: TypeIdsBuffer, valueOffsetsOrChildren: ValueOffsetsBuffer | (Data | Vector)[], children?: (Data | Vector)[]) {\n        const buffers = <unknown> [\n            undefined, undefined,\n            toUint8Array(nullBitmap),\n            toArrayBufferView(type.ArrayType, typeIds)\n        ] as Partial<Buffers<T>>;\n        if (type.mode === UnionMode.Sparse) {\n            return new Data(type, offset, length, nullCount, buffers, valueOffsetsOrChildren as (Data | Vector)[]);\n        }\n        buffers[BufferType.OFFSET] = toInt32Array(<ValueOffsetsBuffer> valueOffsetsOrChildren);\n        return new Data(type, offset, length, nullCount, buffers, children);\n    }\n}\n\n(Data.prototype as any).childData = Object.freeze([]);\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\n/** @ignore */ const undf = void (0);\n\n/** @ignore */\nexport function valueToString(x: any) {\n    if (x === null) { return 'null'; }\n    if (x === undf) { return 'undefined'; }\n    switch (typeof x) {\n        case 'number': return `${x}`;\n        case 'bigint': return `${x}`;\n        case 'string': return `\"${x}\"`;\n    }\n    // If [Symbol.toPrimitive] is implemented (like in BN)\n    // use it instead of JSON.stringify(). This ensures we\n    // print BigInts, Decimals, and Binary in their native\n    // representation\n    if (typeof x[Symbol.toPrimitive] === 'function') {\n        return x[Symbol.toPrimitive]('string');\n    }\n    return ArrayBuffer.isView(x) ? `[${x}]` : JSON.stringify(x);\n}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { DataType } from '../type';\nimport { valueToString } from '../util/pretty';\nimport { BigIntAvailable } from '../util/compat';\n\n/**\n * Dynamically compile the null values into an `isValid()` function whose\n * implementation is a switch statement. Microbenchmarks in v8 indicate\n * this approach is 25% faster than using an ES6 Map.\n *\n * @example\n * console.log(createIsValidFunction([null, 'N/A', NaN]));\n * `function (x) {\n *     if (x !== x) return false;\n *     switch (x) {\n *         case null:\n *         case \"N/A\":\n *             return false;\n *     }\n *     return true;\n * }`\n *\n * @ignore\n * @param nullValues\n */\nexport function createIsValidFunction<T extends DataType = any, TNull = any>(nullValues?: ReadonlyArray<TNull>) {\n\n    if (!nullValues || nullValues.length <= 0) {\n        // @ts-ignore\n        return function isValid(value: any) { return true; };\n    }\n\n    let fnBody = '';\n    let noNaNs = nullValues.filter((x) => x === x);\n\n    if (noNaNs.length > 0) {\n        fnBody = `\n    switch (x) {${noNaNs.map((x) => `\n        case ${valueToCase(x)}:`).join('')}\n            return false;\n    }`;\n    }\n\n    // NaN doesn't equal anything including itself, so it doesn't work as a\n    // switch case. Instead we must explicitly check for NaN before the switch.\n    if (nullValues.length !== noNaNs.length) {\n        fnBody = `if (x !== x) return false;\\n${fnBody}`;\n    }\n\n    return new Function(`x`, `${fnBody}\\nreturn true;`) as (value: T['TValue'] | TNull) => boolean;\n}\n\n/** @ignore */\nfunction valueToCase(x: any) {\n    if (typeof x !== 'bigint') {\n        return valueToString(x);\n    } else if (BigIntAvailable) {\n        return `${valueToString(x)}n`;\n    }\n    return `\"${valueToString(x)}\"`;\n}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { memcpy } from '../util/buffer';\nimport { BigIntAvailable, BigInt64Array, BigUint64Array } from '../util/compat';\nimport {\n    TypedArray, TypedArrayConstructor,\n    BigIntArray, BigIntArrayConstructor\n} from '../interfaces';\n\n/** @ignore */ type DataValue<T> = T extends TypedArray ? number : T extends BigIntArray ? WideValue<T> : T;\n/** @ignore */ type WideValue<T extends BigIntArray> = T extends BigIntArray ? bigint | Int32Array | Uint32Array : never;\n/** @ignore */ type ArrayCtor<T extends TypedArray | BigIntArray> =\n    T extends TypedArray  ? TypedArrayConstructor<T>  :\n    T extends BigIntArray ? BigIntArrayConstructor<T> :\n    any;\n\n/** @ignore */\nconst roundLengthUpToNearest64Bytes = (len: number, BPE: number) => ((((len * BPE) + 63) & ~63) || 64) / BPE;\n/** @ignore */\nconst sliceOrExtendArray = <T extends TypedArray | BigIntArray>(arr: T, len = 0) => (\n    arr.length >= len ? arr.subarray(0, len) : memcpy(new (arr.constructor as any)(len), arr, 0)\n) as T;\n\n/** @ignore */\nexport interface BufferBuilder<T extends TypedArray | BigIntArray = any, TValue = DataValue<T>> {\n    readonly offset: number;\n}\n\n/** @ignore */\nexport class BufferBuilder<T extends TypedArray | BigIntArray = any, TValue = DataValue<T>> {\n\n    constructor(buffer: T, stride = 1) {\n        this.buffer = buffer;\n        this.stride = stride;\n        this.BYTES_PER_ELEMENT = buffer.BYTES_PER_ELEMENT;\n        this.ArrayType = buffer.constructor as ArrayCtor<T>;\n        this._resize(this.length = buffer.length / stride | 0);\n    }\n\n    public buffer: T;\n    public length: number;\n    public readonly stride: number;\n    public readonly ArrayType: ArrayCtor<T>;\n    public readonly BYTES_PER_ELEMENT: number;\n\n    public get byteLength() { return this.length * this.stride * this.BYTES_PER_ELEMENT | 0; }\n    public get reservedLength() { return this.buffer.length / this.stride; }\n    public get reservedByteLength() { return this.buffer.byteLength; }\n\n    // @ts-ignore\n    public set(index: number, value: TValue) { return this; }\n    public append(value: TValue) { return this.set(this.length, value); }\n    public reserve(extra: number) {\n        if (extra > 0) {\n            this.length += extra;\n            const stride = this.stride;\n            const length = this.length * stride;\n            const reserved = this.buffer.length;\n            if (length >= reserved) {\n                this._resize(reserved === 0\n                    ? roundLengthUpToNearest64Bytes(length * 1, this.BYTES_PER_ELEMENT)\n                    : roundLengthUpToNearest64Bytes(length * 2, this.BYTES_PER_ELEMENT)\n                );\n            }\n        }\n        return this;\n    }\n    public flush(length = this.length) {\n        length = roundLengthUpToNearest64Bytes(length * this.stride, this.BYTES_PER_ELEMENT);\n        const array = sliceOrExtendArray<T>(this.buffer, length);\n        this.clear();\n        return array;\n    }\n    public clear() {\n        this.length = 0;\n        this._resize(0);\n        return this;\n    }\n    protected _resize(newLength: number) {\n        return this.buffer = <T> memcpy(new this.ArrayType(newLength), this.buffer);\n    }\n}\n\n(BufferBuilder.prototype as any).offset = 0;\n\n/** @ignore */\nexport class DataBufferBuilder<T extends TypedArray> extends BufferBuilder<T, number> {\n    public last() { return this.get(this.length - 1); }\n    public get(index: number) { return this.buffer[index]; }\n    public set(index: number, value: number) {\n        this.reserve(index - this.length + 1);\n        this.buffer[index * this.stride] = value;\n        return this;\n    }\n}\n\n/** @ignore */\nexport class BitmapBufferBuilder extends DataBufferBuilder<Uint8Array> {\n\n    constructor(data = new Uint8Array(0)) { super(data, 1 / 8); }\n\n    public numValid = 0;\n    public get numInvalid() { return this.length - this.numValid; }\n    public get(idx: number) { return this.buffer[idx >> 3] >> idx % 8 & 1; }\n    public set(idx: number, val: number) {\n        const { buffer } = this.reserve(idx - this.length + 1);\n        const byte = idx >> 3, bit = idx % 8, cur = buffer[byte] >> bit & 1;\n        // If `val` is truthy and the current bit is 0, flip it to 1 and increment `numValid`.\n        // If `val` is falsey and the current bit is 1, flip it to 0 and decrement `numValid`.\n        val ? cur === 0 && ((buffer[byte] |=  (1 << bit)), ++this.numValid)\n            : cur === 1 && ((buffer[byte] &= ~(1 << bit)), --this.numValid);\n        return this;\n    }\n    public clear() {\n        this.numValid = 0;\n        return super.clear();\n    }\n}\n\n/** @ignore */\nexport class OffsetsBufferBuilder extends DataBufferBuilder<Int32Array> {\n    constructor(data = new Int32Array(1)) { super(data, 1); }\n    public append(value: number) {\n        return this.set(this.length - 1, value);\n    }\n    public set(index: number, value: number) {\n        const offset = this.length - 1;\n        const buffer = this.reserve(index - offset + 1).buffer;\n        if (offset < index++) {\n            buffer.fill(buffer[offset], offset, index);\n        }\n        buffer[index] = buffer[index - 1] + value;\n        return this;\n    }\n    public flush(length = this.length - 1) {\n        if (length > this.length) {\n            this.set(length - 1, 0);\n        }\n        return super.flush(length + 1);\n    }\n}\n\n/** @ignore */\nexport class WideBufferBuilder<T extends TypedArray, R extends BigIntArray> extends BufferBuilder<T, DataValue<T>> {\n    // @ts-ignore\n    public buffer64: R;\n    // @ts-ignore\n    protected _ArrayType64: BigIntArrayConstructor<R>;\n    public get ArrayType64() {\n        return this._ArrayType64 || (this._ArrayType64 = <BigIntArrayConstructor<R>> (this.buffer instanceof Int32Array ? BigInt64Array : BigUint64Array));\n    }\n    public set(index: number, value: DataValue<T>) {\n        this.reserve(index - this.length + 1);\n        switch (typeof value) {\n            case 'bigint': this.buffer64[index] = value; break;\n            case 'number': this.buffer[index * this.stride] = value; break;\n            default: this.buffer.set(value as TypedArray, index * this.stride);\n        }\n        return this;\n    }\n    protected _resize(newLength: number) {\n        const data = super._resize(newLength);\n        const length = data.byteLength / (this.BYTES_PER_ELEMENT * this.stride);\n        if (BigIntAvailable) {\n            this.buffer64 = new this.ArrayType64(data.buffer, data.byteOffset, length);\n        }\n        return data;\n    }\n}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { Vector } from './vector';\nimport { BufferType } from './enum';\nimport { Data, Buffers } from './data';\nimport { createIsValidFunction } from './builder/valid';\nimport { BuilderType as B, VectorType as V} from './interfaces';\nimport { BufferBuilder, BitmapBufferBuilder, DataBufferBuilder, OffsetsBufferBuilder } from './builder/buffer';\nimport {\n    DataType, strideForType,\n    Float, Int, Decimal, FixedSizeBinary,\n    Date_, Time, Timestamp, Interval,\n    Utf8, Binary, List, Map_\n} from './type';\n\n/**\n * A set of options required to create a `Builder` instance for a given `DataType`.\n * @see {@link Builder}\n */\nexport interface BuilderOptions<T extends DataType = any, TNull = any> {\n    type: T;\n    nullValues?: TNull[] | ReadonlyArray<TNull> | null;\n    children?: { [key: string]: BuilderOptions; } | BuilderOptions[];\n}\n\n/**\n * A set of options to create an Iterable or AsyncIterable `Builder` transform function.\n * @see {@link Builder.throughIterable}\n * @see {@link Builder.throughAsyncIterable}\n */\n\nexport interface IterableBuilderOptions<T extends DataType = any, TNull = any> extends BuilderOptions<T, TNull> {\n    highWaterMark?: number;\n    queueingStrategy?: 'bytes' | 'count';\n    dictionaryHashFunction?: (value: any) => string | number;\n    valueToChildTypeId?: (builder: Builder<T, TNull>, value: any, offset: number) => number;\n}\n\n/**\n * An abstract base class for types that construct Arrow Vectors from arbitrary JavaScript values.\n *\n * A `Builder` is responsible for writing arbitrary JavaScript values\n * to ArrayBuffers and/or child Builders according to the Arrow specification\n * for each DataType, creating or resizing the underlying ArrayBuffers as necessary.\n *\n * The `Builder` for each Arrow `DataType` handles converting and appending\n * values for a given `DataType`. The high-level {@link Builder.new `Builder.new()`} convenience\n * method creates the specific `Builder` subclass for the supplied `DataType`.\n *\n * Once created, `Builder` instances support both appending values to the end\n * of the `Builder`, and random-access writes to specific indices\n * (`Builder.prototype.append(value)` is a convenience method for\n * `builder.set(builder.length, value)`). Appending or setting values beyond the\n * Builder's current length may cause the builder to grow its underlying buffers\n * or child Builders (if applicable) to accommodate the new values.\n *\n * After enough values have been written to a `Builder`, `Builder.prototype.flush()`\n * will commit the values to the underlying ArrayBuffers (or child Builders). The\n * internal Builder state will be reset, and an instance of `Data<T>` is returned.\n * Alternatively, `Builder.prototype.toVector()` will flush the `Builder` and return\n * an instance of `Vector<T>` instead.\n *\n * When there are no more values to write, use `Builder.prototype.finish()` to\n * finalize the `Builder`. This does not reset the internal state, so it is\n * necessary to call `Builder.prototype.flush()` or `toVector()` one last time\n * if there are still values queued to be flushed.\n *\n * Note: calling `Builder.prototype.finish()` is required when using a `DictionaryBuilder`,\n * because this is when it flushes the values that have been enqueued in its internal\n * dictionary's `Builder`, and creates the `dictionaryVector` for the `Dictionary` `DataType`.\n *\n * ```ts\n * import { Builder, Utf8 } from 'apache-arrow';\n *\n * const utf8Builder = Builder.new({\n *     type: new Utf8(),\n *     nullValues: [null, 'n/a']\n * });\n *\n * utf8Builder\n *     .append('hello')\n *     .append('n/a')\n *     .append('world')\n *     .append(null);\n *\n * const utf8Vector = utf8Builder.finish().toVector();\n *\n * console.log(utf8Vector.toJSON());\n * // > [\"hello\", null, \"world\", null]\n * ```\n *\n * @typeparam T The `DataType` of this `Builder`.\n * @typeparam TNull The type(s) of values which will be considered null-value sentinels.\n */\nexport abstract class Builder<T extends DataType = any, TNull = any> {\n\n    /**\n     * Create a `Builder` instance based on the `type` property of the supplied `options` object.\n     * @param {BuilderOptions<T, TNull>} options An object with a required `DataType` instance\n     * and other optional parameters to be passed to the `Builder` subclass for the given `type`.\n     *\n     * @typeparam T The `DataType` of the `Builder` to create.\n     * @typeparam TNull The type(s) of values which will be considered null-value sentinels.\n     * @nocollapse\n     */\n    // @ts-ignore\n    public static new<T extends DataType = any, TNull = any>(options: BuilderOptions<T, TNull>): B<T, TNull> {}\n\n    /** @nocollapse */\n    // @ts-ignore\n    public static throughNode<T extends DataType = any, TNull = any>(options: import('./io/node/builder').BuilderDuplexOptions<T, TNull>): import('stream').Duplex {\n        throw new Error(`\"throughNode\" not available in this environment`);\n    }\n    /** @nocollapse */\n    // @ts-ignore\n    public static throughDOM<T extends DataType = any, TNull = any>(options: import('./io/whatwg/builder').BuilderTransformOptions<T, TNull>): import('./io/whatwg/builder').BuilderTransform<T, TNull> {\n        throw new Error(`\"throughDOM\" not available in this environment`);\n    }\n\n    /**\n     * Transform a synchronous `Iterable` of arbitrary JavaScript values into a\n     * sequence of Arrow Vector<T> following the chunking semantics defined in\n     * the supplied `options` argument.\n     *\n     * This function returns a function that accepts an `Iterable` of values to\n     * transform. When called, this function returns an Iterator of `Vector<T>`.\n     *\n     * The resulting `Iterator<Vector<T>>` yields Vectors based on the\n     * `queueingStrategy` and `highWaterMark` specified in the `options` argument.\n     *\n     * * If `queueingStrategy` is `\"count\"` (or omitted), The `Iterator<Vector<T>>`\n     *   will flush the underlying `Builder` (and yield a new `Vector<T>`) once the\n     *   Builder's `length` reaches or exceeds the supplied `highWaterMark`.\n     * * If `queueingStrategy` is `\"bytes\"`, the `Iterator<Vector<T>>` will flush\n     *   the underlying `Builder` (and yield a new `Vector<T>`) once its `byteLength`\n     *   reaches or exceeds the supplied `highWaterMark`.\n     *\n     * @param {IterableBuilderOptions<T, TNull>} options An object of properties which determine the `Builder` to create and the chunking semantics to use.\n     * @returns A function which accepts a JavaScript `Iterable` of values to\n     *          write, and returns an `Iterator` that yields Vectors according\n     *          to the chunking semantics defined in the `options` argument.\n     * @nocollapse\n     */\n    public static throughIterable<T extends DataType = any, TNull = any>(options: IterableBuilderOptions<T, TNull>) {\n        return throughIterable(options);\n    }\n\n    /**\n     * Transform an `AsyncIterable` of arbitrary JavaScript values into a\n     * sequence of Arrow Vector<T> following the chunking semantics defined in\n     * the supplied `options` argument.\n     *\n     * This function returns a function that accepts an `AsyncIterable` of values to\n     * transform. When called, this function returns an AsyncIterator of `Vector<T>`.\n     *\n     * The resulting `AsyncIterator<Vector<T>>` yields Vectors based on the\n     * `queueingStrategy` and `highWaterMark` specified in the `options` argument.\n     *\n     * * If `queueingStrategy` is `\"count\"` (or omitted), The `AsyncIterator<Vector<T>>`\n     *   will flush the underlying `Builder` (and yield a new `Vector<T>`) once the\n     *   Builder's `length` reaches or exceeds the supplied `highWaterMark`.\n     * * If `queueingStrategy` is `\"bytes\"`, the `AsyncIterator<Vector<T>>` will flush\n     *   the underlying `Builder` (and yield a new `Vector<T>`) once its `byteLength`\n     *   reaches or exceeds the supplied `highWaterMark`.\n     *\n     * @param {IterableBuilderOptions<T, TNull>} options An object of properties which determine the `Builder` to create and the chunking semantics to use.\n     * @returns A function which accepts a JavaScript `AsyncIterable` of values\n     *          to write, and returns an `AsyncIterator` that yields Vectors\n     *          according to the chunking semantics defined in the `options`\n     *          argument.\n     * @nocollapse\n     */\n    public static throughAsyncIterable<T extends DataType = any, TNull = any>(options: IterableBuilderOptions<T, TNull>) {\n        return throughAsyncIterable(options);\n    }\n\n    /**\n     * Construct a builder with the given Arrow DataType with optional null values,\n     * which will be interpreted as \"null\" when set or appended to the `Builder`.\n     * @param {{ type: T, nullValues?: any[] }} options A `BuilderOptions` object used to create this `Builder`.\n     */\n    constructor({ 'type': type, 'nullValues': nulls }: BuilderOptions<T, TNull>) {\n        this.type = type;\n        this.children = [];\n        this.nullValues = nulls;\n        this.stride = strideForType(type);\n        this._nulls = new BitmapBufferBuilder();\n        if (nulls && nulls.length > 0) {\n            this._isValid = createIsValidFunction(nulls);\n        }\n    }\n\n    /**\n     * The Builder's `DataType` instance.\n     * @readonly\n     */\n    public type: T;\n    /**\n     * The number of values written to the `Builder` that haven't been flushed yet.\n     * @readonly\n     */\n    public length = 0;\n    /**\n     * A boolean indicating whether `Builder.prototype.finish()` has been called on this `Builder`.\n     * @readonly\n     */\n    public finished = false;\n    /**\n     * The number of elements in the underlying values TypedArray that\n     * represent a single logical element, determined by this Builder's\n     * `DataType`. This is 1 for most types, but is larger when the `DataType`\n     * is `Int64`, `Uint64`, `Decimal`, `DateMillisecond`, certain variants of\n     * `Interval`, `Time`, or `Timestamp`, `FixedSizeBinary`, and `FixedSizeList`.\n     * @readonly\n     */\n    public readonly stride: number;\n    public readonly children: Builder[];\n    /**\n     * The list of null-value sentinels for this `Builder`. When one of these values\n     * is written to the `Builder` (either via `Builder.prototype.set()` or `Builder.prototype.append()`),\n     * a 1-bit is written to this Builder's underlying null BitmapBufferBuilder.\n     * @readonly\n     */\n    public readonly nullValues?: TNull[] | ReadonlyArray<TNull> | null;\n\n    /**\n     * Flush the `Builder` and return a `Vector<T>`.\n     * @returns {Vector<T>} A `Vector<T>` of the flushed values.\n     */\n    public toVector() { return Vector.new(this.flush()); }\n\n    public get ArrayType() { return this.type.ArrayType; }\n    public get nullCount() { return this._nulls.numInvalid; }\n    public get numChildren() { return this.children.length; }\n\n    /**\n     * @returns The aggregate length (in bytes) of the values that have been written.\n     */\n    public get byteLength(): number {\n        let size = 0;\n        this._offsets && (size += this._offsets.byteLength);\n        this._values && (size += this._values.byteLength);\n        this._nulls && (size += this._nulls.byteLength);\n        this._typeIds && (size += this._typeIds.byteLength);\n        return this.children.reduce((size, child) => size + child.byteLength, size);\n    }\n\n    /**\n     * @returns The aggregate number of rows that have been reserved to write new values.\n     */\n    public get reservedLength(): number {\n        return this._nulls.reservedLength;\n    }\n\n    /**\n     * @returns The aggregate length (in bytes) that has been reserved to write new values.\n     */\n    public get reservedByteLength(): number {\n        let size = 0;\n        this._offsets && (size += this._offsets.reservedByteLength);\n        this._values && (size += this._values.reservedByteLength);\n        this._nulls && (size += this._nulls.reservedByteLength);\n        this._typeIds && (size += this._typeIds.reservedByteLength);\n        return this.children.reduce((size, child) => size + child.reservedByteLength, size);\n    }\n\n    // @ts-ignore\n    protected _offsets: DataBufferBuilder<Int32Array>;\n    public get valueOffsets() { return this._offsets ? this._offsets.buffer : null; }\n\n    // @ts-ignore\n    protected _values: BufferBuilder<T['TArray'], any>;\n    public get values() { return this._values ? this._values.buffer : null; }\n\n    protected _nulls: BitmapBufferBuilder;\n    public get nullBitmap() { return this._nulls ? this._nulls.buffer : null; }\n\n    // @ts-ignore\n    protected _typeIds: DataBufferBuilder<Int8Array>;\n    public get typeIds() { return this._typeIds ? this._typeIds.buffer : null; }\n\n    // @ts-ignore\n    protected _isValid: (value: T['TValue'] | TNull) => boolean;\n    // @ts-ignore\n    protected _setValue: (inst: Builder<T>, index: number, value: T['TValue']) => void;\n\n    /**\n     * Appends a value (or null) to this `Builder`.\n     * This is equivalent to `builder.set(builder.length, value)`.\n     * @param {T['TValue'] | TNull } value The value to append.\n     */\n    public append(value: T['TValue'] | TNull) { return this.set(this.length, value); }\n\n    /**\n     * Validates whether a value is valid (true), or null (false)\n     * @param {T['TValue'] | TNull } value The value to compare against null the value representations\n     */\n    // @ts-ignore\n    public isValid(value: T['TValue'] | TNull): boolean { return this._isValid(value); }\n\n    /**\n     * Write a value (or null-value sentinel) at the supplied index.\n     * If the value matches one of the null-value representations, a 1-bit is\n     * written to the null `BitmapBufferBuilder`. Otherwise, a 0 is written to\n     * the null `BitmapBufferBuilder`, and the value is passed to\n     * `Builder.prototype.setValue()`.\n     * @param {number} index The index of the value to write.\n     * @param {T['TValue'] | TNull } value The value to write at the supplied index.\n     * @returns {this} The updated `Builder` instance.\n     */\n    public set(index: number, value: T['TValue'] | TNull) {\n        if (this.setValid(index, this.isValid(value))) {\n            this.setValue(index, value);\n        }\n        return this;\n    }\n\n    /**\n     * Write a value to the underlying buffers at the supplied index, bypassing\n     * the null-value check. This is a low-level method that\n     * @param {number} index\n     * @param {T['TValue'] | TNull } value\n     */\n    // @ts-ignore\n    public setValue(index: number, value: T['TValue']) { this._setValue(this, index, value); }\n    public setValid(index: number, valid: boolean) {\n        this.length = this._nulls.set(index, +valid).length;\n        return valid;\n    }\n\n    // @ts-ignore\n    public addChild(child: Builder, name = `${this.numChildren}`) {\n        throw new Error(`Cannot append children to non-nested type \"${this.type}\"`);\n    }\n\n    /**\n     * Retrieve the child `Builder` at the supplied `index`, or null if no child\n     * exists at that index.\n     * @param {number} index The index of the child `Builder` to retrieve.\n     * @returns {Builder | null} The child Builder at the supplied index or null.\n     */\n    public getChildAt<R extends DataType = any>(index: number): Builder<R> | null {\n        return this.children[index] || null;\n    }\n\n    /**\n     * Commit all the values that have been written to their underlying\n     * ArrayBuffers, including any child Builders if applicable, and reset\n     * the internal `Builder` state.\n     * @returns A `Data<T>` of the buffers and childData representing the values written.\n     */\n    public flush() {\n\n        const buffers: any = [];\n        const values =  this._values;\n        const offsets =  this._offsets;\n        const typeIds =  this._typeIds;\n        const { length, nullCount } = this;\n\n        if (typeIds) { /* Unions */\n            buffers[BufferType.TYPE] = typeIds.flush(length);\n            // DenseUnions\n            offsets && (buffers[BufferType.OFFSET] = offsets.flush(length));\n        } else if (offsets) { /* Variable-width primitives (Binary, Utf8) and Lists */\n            // Binary, Utf8\n            values && (buffers[BufferType.DATA] = values.flush(offsets.last()));\n            buffers[BufferType.OFFSET] = offsets.flush(length);\n        } else if (values) { /* Fixed-width primitives (Int, Float, Decimal, Time, Timestamp, and Interval) */\n            buffers[BufferType.DATA] = values.flush(length);\n        }\n\n        nullCount > 0 && (buffers[BufferType.VALIDITY] = this._nulls.flush(length));\n\n        const data = Data.new<T>(\n            this.type, 0, length, nullCount, buffers as Buffers<T>,\n            this.children.map((child) => child.flush())) as Data<T>;\n\n        this.clear();\n\n        return data;\n    }\n\n    /**\n     * Finalize this `Builder`, and child builders if applicable.\n     * @returns {this} The finalized `Builder` instance.\n     */\n    public finish() {\n        this.finished = true;\n        this.children.forEach((child) => child.finish());\n        return this;\n    }\n\n    /**\n     * Clear this Builder's internal state, including child Builders if applicable, and reset the length to 0.\n     * @returns {this} The cleared `Builder` instance.\n     */\n    public clear() {\n        this.length = 0;\n        this._offsets && (this._offsets.clear());\n        this._values && (this._values.clear());\n        this._nulls && (this._nulls.clear());\n        this._typeIds && (this._typeIds.clear());\n        this.children.forEach((child) => child.clear());\n        return this;\n    }\n}\n\n(Builder.prototype as any).length = 1;\n(Builder.prototype as any).stride = 1;\n(Builder.prototype as any).children = null;\n(Builder.prototype as any).finished = false;\n(Builder.prototype as any).nullValues = null;\n(Builder.prototype as any)._isValid = () => true;\n\n/** @ignore */\nexport abstract class FixedWidthBuilder<T extends Int | Float | FixedSizeBinary | Date_ | Timestamp | Time | Decimal | Interval = any, TNull = any> extends Builder<T, TNull> {\n    constructor(opts: BuilderOptions<T, TNull>) {\n        super(opts);\n        this._values = new DataBufferBuilder(new this.ArrayType(0), this.stride);\n    }\n    public setValue(index: number, value: T['TValue']) {\n        const values = this._values;\n        values.reserve(index - values.length + 1);\n        return super.setValue(index, value);\n    }\n}\n\n/** @ignore */\nexport abstract class VariableWidthBuilder<T extends Binary | Utf8 | List | Map_, TNull = any> extends Builder<T, TNull> {\n    protected _pendingLength: number = 0;\n    protected _offsets: OffsetsBufferBuilder;\n    protected _pending: Map<number, any> | undefined;\n    constructor(opts: BuilderOptions<T, TNull>) {\n        super(opts);\n        this._offsets = new OffsetsBufferBuilder();\n    }\n    public setValue(index: number, value: T['TValue']) {\n        const pending = this._pending || (this._pending = new Map());\n        const current = pending.get(index);\n        current && (this._pendingLength -= current.length);\n        this._pendingLength += value.length;\n        pending.set(index, value);\n    }\n    public setValid(index: number, isValid: boolean) {\n        if (!super.setValid(index, isValid)) {\n            (this._pending || (this._pending = new Map())).set(index, undefined);\n            return false;\n        }\n        return true;\n    }\n    public clear() {\n        this._pendingLength = 0;\n        this._pending = undefined;\n        return super.clear();\n    }\n    public flush() {\n        this._flush();\n        return super.flush();\n    }\n    public finish() {\n        this._flush();\n        return super.finish();\n    }\n    protected _flush() {\n        const pending = this._pending;\n        const pendingLength = this._pendingLength;\n        this._pendingLength = 0;\n        this._pending = undefined;\n        if (pending && pending.size > 0) {\n            this._flushPending(pending, pendingLength);\n        }\n        return this;\n    }\n    protected abstract _flushPending(pending: Map<number, any>, pendingLength: number): void;\n}\n\n/** @ignore */\ntype ThroughIterable<T extends DataType = any, TNull = any> = (source: Iterable<T['TValue'] | TNull>) => IterableIterator<V<T>>;\n\n/** @ignore */\nfunction throughIterable<T extends DataType = any, TNull = any>(options: IterableBuilderOptions<T, TNull>): ThroughIterable<T, TNull> {\n    const { ['queueingStrategy']: queueingStrategy = 'count' } = options;\n    const { ['highWaterMark']: highWaterMark = queueingStrategy !== 'bytes' ? 1000 : 2 ** 14 } = options;\n    const sizeProperty: 'length' | 'byteLength' = queueingStrategy !== 'bytes' ? 'length' : 'byteLength';\n    return function*(source: Iterable<T['TValue'] | TNull>) {\n        let numChunks = 0;\n        let builder = Builder.new(options);\n        for (const value of source) {\n            if (builder.append(value)[sizeProperty] >= highWaterMark) {\n                ++numChunks && (yield builder.toVector());\n            }\n        }\n        if (builder.finish().length > 0 || numChunks === 0) {\n            yield builder.toVector();\n        }\n    };\n}\n\n/** @ignore */\ntype ThroughAsyncIterable<T extends DataType = any, TNull = any> = (source: Iterable<T['TValue'] | TNull> | AsyncIterable<T['TValue'] | TNull>) => AsyncIterableIterator<V<T>>;\n\n/** @ignore */\nfunction throughAsyncIterable<T extends DataType = any, TNull = any>(options: IterableBuilderOptions<T, TNull>): ThroughAsyncIterable<T, TNull> {\n    const { ['queueingStrategy']: queueingStrategy = 'count' } = options;\n    const { ['highWaterMark']: highWaterMark = queueingStrategy !== 'bytes' ? 1000 : 2 ** 14 } = options;\n    const sizeProperty: 'length' | 'byteLength' = queueingStrategy !== 'bytes' ? 'length' : 'byteLength';\n    return async function* (source: Iterable<T['TValue'] | TNull> | AsyncIterable<T['TValue'] | TNull>) {\n        let numChunks = 0;\n        let builder = Builder.new(options);\n        for await (const value of source) {\n            if (builder.append(value)[sizeProperty] >= highWaterMark) {\n                ++numChunks && (yield builder.toVector());\n            }\n        }\n        if (builder.finish().length > 0 || numChunks === 0) {\n            yield builder.toVector();\n        }\n    };\n}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { Bool } from '../type';\nimport { BitmapBufferBuilder } from './buffer';\nimport { Builder, BuilderOptions } from '../builder';\n\n/** @ignore */\nexport class BoolBuilder<TNull = any> extends Builder<Bool, TNull> {\n    constructor(options: BuilderOptions<Bool, TNull>) {\n        super(options);\n        this._values = new BitmapBufferBuilder();\n    }\n    public setValue(index: number, value: boolean) {\n        this._values.set(index, +value);\n    }\n}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { Null } from '../type';\nimport { Builder } from '../builder';\n\n/** @ignore */\nexport class NullBuilder<TNull = any> extends Builder<Null, TNull> {\n    // @ts-ignore\n    public setValue(index: number, value: null) {}\n    public setValid(index: number, valid: boolean) {\n        this.length = Math.max(index + 1, this.length);\n        return valid;\n    }\n}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { FixedWidthBuilder } from '../builder';\nimport { Date_, DateDay, DateMillisecond } from '../type';\n\n/** @ignore */\nexport class DateBuilder<T extends Date_ = Date_, TNull = any> extends FixedWidthBuilder<T, TNull> {}\n/** @ignore */\nexport class DateDayBuilder<TNull = any> extends DateBuilder<DateDay, TNull> {}\n/** @ignore */\nexport class DateMillisecondBuilder<TNull = any> extends DateBuilder<DateMillisecond, TNull> {}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { Decimal } from '../type';\nimport { FixedWidthBuilder } from '../builder';\n\n/** @ignore */\nexport class DecimalBuilder<TNull = any> extends FixedWidthBuilder<Decimal, TNull> {}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { Vector } from '../vector';\nimport { IntBuilder } from './int';\nimport { Dictionary, DataType } from '../type';\nimport { Builder, BuilderOptions } from '../builder';\n\ntype DictionaryHashFunction = (x: any) => string | number;\n\nexport interface DictionaryBuilderOptions<T extends DataType = any, TNull = any> extends BuilderOptions<T, TNull> {\n    dictionaryHashFunction?: DictionaryHashFunction;\n}\n\n/** @ignore */\nexport class DictionaryBuilder<T extends Dictionary, TNull = any> extends Builder<T, TNull> {\n\n    protected _dictionaryOffset: number;\n    protected _dictionary?: Vector<T['dictionary']>;\n    protected _keysToIndices: { [key: string]: number };\n    public readonly indices: IntBuilder<T['indices']>;\n    public readonly dictionary: Builder<T['dictionary']>;\n\n    constructor({ 'type': type, 'nullValues': nulls, 'dictionaryHashFunction': hashFn }: DictionaryBuilderOptions<T, TNull>) {\n        super({ type: new Dictionary(type.dictionary, type.indices, type.id, type.isOrdered) as T });\n        this._nulls = <any> null;\n        this._dictionaryOffset = 0;\n        this._keysToIndices = Object.create(null);\n        this.indices = Builder.new({ 'type': this.type.indices, 'nullValues': nulls }) as IntBuilder<T['indices']>;\n        this.dictionary = Builder.new({ 'type': this.type.dictionary, 'nullValues': null }) as Builder<T['dictionary']>;\n        if (typeof hashFn === 'function') {\n            this.valueToKey = hashFn;\n        }\n    }\n\n    public get values() { return this.indices.values; }\n    public get nullCount() { return this.indices.nullCount; }\n    public get nullBitmap() { return this.indices.nullBitmap; }\n    public get byteLength() { return this.indices.byteLength + this.dictionary.byteLength; }\n    public get reservedLength() { return this.indices.reservedLength + this.dictionary.reservedLength; }\n    public get reservedByteLength() { return this.indices.reservedByteLength + this.dictionary.reservedByteLength; }\n    public isValid(value: T['TValue'] | TNull) { return this.indices.isValid(value); }\n    public setValid(index: number, valid: boolean) {\n        const indices = this.indices;\n        valid = indices.setValid(index, valid);\n        this.length = indices.length;\n        return valid;\n    }\n    public setValue(index: number, value: T['TValue']) {\n        let keysToIndices = this._keysToIndices;\n        let key = this.valueToKey(value);\n        let idx = keysToIndices[key];\n        if (idx === undefined) {\n            keysToIndices[key] = idx = this._dictionaryOffset + this.dictionary.append(value).length - 1;\n        }\n        return this.indices.setValue(index, idx);\n    }\n    public flush() {\n        const type = this.type;\n        const prev = this._dictionary;\n        const curr = this.dictionary.toVector();\n        const data = this.indices.flush().clone(type);\n        data.dictionary = prev ? prev.concat(curr) : curr;\n        this.finished || (this._dictionaryOffset += curr.length);\n        this._dictionary = data.dictionary as Vector<T['dictionary']>;\n        this.clear();\n        return data;\n    }\n    public finish() {\n        this.indices.finish();\n        this.dictionary.finish();\n        this._dictionaryOffset = 0;\n        this._keysToIndices = Object.create(null);\n        return super.finish();\n    }\n    public clear() {\n        this.indices.clear();\n        this.dictionary.clear();\n        return super.clear();\n    }\n    public valueToKey(val: any): string | number {\n        return typeof val === 'string' ? val : `${val}`;\n    }\n}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { FixedSizeBinary } from '../type';\nimport { FixedWidthBuilder } from '../builder';\n\n/** @ignore */\nexport class FixedSizeBinaryBuilder<TNull = any> extends FixedWidthBuilder<FixedSizeBinary, TNull> {}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nconst f64 = new Float64Array(1);\nconst u32 = new Uint32Array(f64.buffer);\n\n/**\n * Convert uint16 (logically a float16) to a JS float64. Inspired by numpy's `npy_half_to_double`:\n * https://github.com/numpy/numpy/blob/5a5987291dc95376bb098be8d8e5391e89e77a2c/numpy/core/src/npymath/halffloat.c#L29\n * @param h {number} the uint16 to convert\n * @private\n * @ignore\n */\nexport function uint16ToFloat64(h: number) {\n    let expo = (h & 0x7C00) >> 10;\n    let sigf = (h & 0x03FF) / 1024;\n    let sign = (-1) ** ((h & 0x8000) >> 15);\n    switch (expo) {\n        case 0x1F: return sign * (sigf ? NaN : 1 / 0);\n        case 0x00: return sign * (sigf ? 6.103515625e-5 * sigf : 0);\n    }\n    return sign * (2 ** (expo - 15)) * (1 + sigf);\n}\n\n/**\n * Convert a float64 to uint16 (assuming the float64 is logically a float16). Inspired by numpy's `npy_double_to_half`:\n * https://github.com/numpy/numpy/blob/5a5987291dc95376bb098be8d8e5391e89e77a2c/numpy/core/src/npymath/halffloat.c#L43\n * @param d {number} The float64 to convert\n * @private\n * @ignore\n */\nexport function float64ToUint16(d: number) {\n\n    if (d !== d) { return 0x7E00; } // NaN\n\n    f64[0] = d;\n\n    // Magic numbers:\n    // 0x80000000 = 10000000 00000000 00000000 00000000 -- masks the 32nd bit\n    // 0x7ff00000 = 01111111 11110000 00000000 00000000 -- masks the 21st-31st bits\n    // 0x000fffff = 00000000 00001111 11111111 11111111 -- masks the 1st-20th bit\n\n    let sign = (u32[1] & 0x80000000) >> 16 & 0xFFFF;\n    let expo = (u32[1] & 0x7ff00000), sigf = 0x0000;\n\n    if (expo >= 0x40f00000) {\n        //\n        // If exponent overflowed, the float16 is either NaN or Infinity.\n        // Rules to propagate the sign bit: mantissa > 0 ? NaN : +/-Infinity\n        //\n        // Magic numbers:\n        // 0x40F00000 = 01000000 11110000 00000000 00000000 -- 6-bit exponent overflow\n        // 0x7C000000 = 01111100 00000000 00000000 00000000 -- masks the 27th-31st bits\n        //\n        // returns:\n        // qNaN, aka 32256 decimal, 0x7E00 hex, or 01111110 00000000 binary\n        // sNaN, aka 32000 decimal, 0x7D00 hex, or 01111101 00000000 binary\n        // +inf, aka 31744 decimal, 0x7C00 hex, or 01111100 00000000 binary\n        // -inf, aka 64512 decimal, 0xFC00 hex, or 11111100 00000000 binary\n        //\n        // If mantissa is greater than 23 bits, set to +Infinity like numpy\n        if (u32[0] > 0) {\n            expo = 0x7C00;\n        } else {\n            expo = (expo & 0x7C000000) >> 16;\n            sigf = (u32[1] & 0x000fffff) >> 10;\n        }\n    } else if (expo <= 0x3f000000) {\n        //\n        // If exponent underflowed, the float is either signed zero or subnormal.\n        //\n        // Magic numbers:\n        // 0x3F000000 = 00111111 00000000 00000000 00000000 -- 6-bit exponent underflow\n        //\n        sigf = 0x100000 + (u32[1] & 0x000fffff);\n        sigf = 0x100000 + (sigf << ((expo >> 20) - 998)) >> 21;\n        expo = 0;\n    } else {\n        //\n        // No overflow or underflow, rebase the exponent and round the mantissa\n        // Magic numbers:\n        // 0x200 = 00000010 00000000 -- masks off the 10th bit\n        //\n\n        // Ensure the first mantissa bit (the 10th one) is 1 and round\n        expo = (expo - 0x3f000000) >> 10;\n        sigf = ((u32[1] & 0x000fffff) + 0x200) >> 10;\n    }\n\n    return sign | expo | sigf & 0xFFFF;\n}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { float64ToUint16 } from '../util/math';\nimport { FixedWidthBuilder } from '../builder';\nimport { Float, Float16, Float32, Float64 } from '../type';\n\n/** @ignore */\nexport class FloatBuilder<T extends Float = Float, TNull = any> extends FixedWidthBuilder<T, TNull> {}\n\n/** @ignore */\nexport class Float16Builder<TNull = any> extends FloatBuilder<Float16, TNull> {\n    public setValue(index: number, value: number) {\n        // convert JS float64 to a uint16\n        this._values.set(index, float64ToUint16(value));\n    }\n}\n\n/** @ignore */\nexport class Float32Builder<TNull = any> extends FloatBuilder<Float32, TNull> {\n    public setValue(index: number, value: number) {\n        this._values.set(index, value);\n    }\n}\n\n/** @ignore */\nexport class Float64Builder<TNull = any> extends FloatBuilder<Float64, TNull> {\n    public setValue(index: number, value: number) {\n        this._values.set(index, value);\n    }\n}\n","import setPrototypeOf from \"./setPrototypeOf.js\";\nimport isNativeReflectConstruct from \"./isNativeReflectConstruct.js\";\nexport default function _construct(Parent, args, Class) {\n  if (isNativeReflectConstruct()) {\n    _construct = Reflect.construct.bind();\n  } else {\n    _construct = function _construct(Parent, args, Class) {\n      var a = [null];\n      a.push.apply(a, args);\n      var Constructor = Function.bind.apply(Parent, a);\n      var instance = new Constructor();\n      if (Class) setPrototypeOf(instance, Class.prototype);\n      return instance;\n    };\n  }\n\n  return _construct.apply(null, arguments);\n}","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { ArrayBufferViewInput, toArrayBufferView } from './buffer';\nimport { TypedArray, TypedArrayConstructor } from '../interfaces';\nimport { BigIntArray, BigIntArrayConstructor } from '../interfaces';\nimport { BigIntAvailable, BigInt64Array, BigUint64Array } from './compat';\n\n/** @ignore */\nexport const isArrowBigNumSymbol = Symbol.for('isArrowBigNum');\n\n/** @ignore */ type BigNumArray = IntArray | UintArray;\n/** @ignore */ type IntArray = Int8Array | Int16Array | Int32Array;\n/** @ignore */ type UintArray = Uint8Array | Uint16Array | Uint32Array | Uint8ClampedArray;\n\n/** @ignore */\nfunction BigNum(this: any, x: any, ...xs: any) {\n    if (xs.length === 0) {\n        return Object.setPrototypeOf(toArrayBufferView(this['TypedArray'], x), this.constructor.prototype);\n    }\n    return Object.setPrototypeOf(new this['TypedArray'](x, ...xs), this.constructor.prototype);\n}\n\nBigNum.prototype[isArrowBigNumSymbol] = true;\nBigNum.prototype.toJSON = function<T extends BN<BigNumArray>>(this: T) { return `\"${bignumToString(this)}\"`; };\nBigNum.prototype.valueOf = function<T extends BN<BigNumArray>>(this: T) { return bignumToNumber(this); };\nBigNum.prototype.toString = function<T extends BN<BigNumArray>>(this: T) { return bignumToString(this); };\nBigNum.prototype[Symbol.toPrimitive] = function<T extends BN<BigNumArray>>(this: T, hint: 'string' | 'number' | 'default' = 'default') {\n    switch (hint) {\n        case 'number': return bignumToNumber(this);\n        case 'string': return bignumToString(this);\n        case 'default': return bignumToBigInt(this);\n    }\n    return bignumToString(this);\n};\n\n/** @ignore */\ntype TypedArrayConstructorArgs =\n    [number | void] |\n    [Iterable<number> | Iterable<bigint>] |\n    [ArrayBufferLike, number | void, number | void] ;\n\n/** @ignore */\nfunction SignedBigNum(this: any, ...args: TypedArrayConstructorArgs) { return BigNum.apply(this, args); }\n/** @ignore */\nfunction UnsignedBigNum(this: any, ...args: TypedArrayConstructorArgs) { return BigNum.apply(this, args); }\n/** @ignore */\nfunction DecimalBigNum(this: any, ...args: TypedArrayConstructorArgs) { return BigNum.apply(this, args); }\n\nObject.setPrototypeOf(SignedBigNum.prototype,   Object.create(Int32Array.prototype));\nObject.setPrototypeOf(UnsignedBigNum.prototype, Object.create(Uint32Array.prototype));\nObject.setPrototypeOf(DecimalBigNum.prototype,  Object.create(Uint32Array.prototype));\nObject.assign(SignedBigNum.prototype,   BigNum.prototype, { 'constructor': SignedBigNum,   'signed': true,  'TypedArray': Int32Array,  'BigIntArray': BigInt64Array  });\nObject.assign(UnsignedBigNum.prototype, BigNum.prototype, { 'constructor': UnsignedBigNum, 'signed': false, 'TypedArray': Uint32Array, 'BigIntArray': BigUint64Array });\nObject.assign(DecimalBigNum.prototype,  BigNum.prototype, { 'constructor': DecimalBigNum,  'signed': true,  'TypedArray': Uint32Array, 'BigIntArray': BigUint64Array });\n\n/** @ignore */\nfunction bignumToNumber<T extends BN<BigNumArray>>(bn: T) {\n    let { buffer, byteOffset, length, 'signed': signed } = bn;\n    let words = new Int32Array(buffer, byteOffset, length);\n    let number = 0, i = 0, n = words.length, hi, lo;\n    while (i < n) {\n        lo = words[i++];\n        hi = words[i++];\n        signed || (hi = hi >>> 0);\n        number += (lo >>> 0) + (hi * (i ** 32));\n    }\n    return number;\n}\n\n/** @ignore */\nexport let bignumToString: { <T extends BN<BigNumArray>>(a: T): string; };\n/** @ignore */\nexport let bignumToBigInt: { <T extends BN<BigNumArray>>(a: T): bigint; };\n\nif (!BigIntAvailable) {\n    bignumToString = decimalToString;\n    bignumToBigInt = <any> bignumToString;\n} else {\n    bignumToBigInt = (<T extends BN<BigNumArray>>(a: T) => a.byteLength === 8 ? new a['BigIntArray'](a.buffer, a.byteOffset, 1)[0] : <any>decimalToString(a));\n    bignumToString = (<T extends BN<BigNumArray>>(a: T) => a.byteLength === 8 ? `${new a['BigIntArray'](a.buffer, a.byteOffset, 1)[0]}` : decimalToString(a));\n}\n\n/** @ignore */\nfunction decimalToString<T extends BN<BigNumArray>>(a: T) {\n    let digits = '';\n    let base64 = new Uint32Array(2);\n    let base32 = new Uint16Array(a.buffer, a.byteOffset, a.byteLength / 2);\n    let checks = new Uint32Array((base32 = new Uint16Array(base32).reverse()).buffer);\n    let i = -1, n = base32.length - 1;\n    do {\n        for (base64[0] = base32[i = 0]; i < n;) {\n            base32[i++] = base64[1] = base64[0] / 10;\n            base64[0] = ((base64[0] - base64[1] * 10) << 16) + base32[i];\n        }\n        base32[i] = base64[1] = base64[0] / 10;\n        base64[0] = base64[0] - base64[1] * 10;\n        digits = `${base64[0]}${digits}`;\n    } while (checks[0] || checks[1] || checks[2] || checks[3]);\n    return digits ? digits : `0`;\n}\n\n/** @ignore */\nexport class BN<T extends BigNumArray> {\n    /** @nocollapse */\n    public static new<T extends BigNumArray>(num: T, isSigned?: boolean): (T & BN<T>) {\n        switch (isSigned) {\n            case true: return new (<any> SignedBigNum)(num) as (T & BN<T>);\n            case false: return new (<any> UnsignedBigNum)(num) as (T & BN<T>);\n        }\n        switch (num.constructor) {\n            case Int8Array:\n            case Int16Array:\n            case Int32Array:\n            case BigInt64Array:\n                return new (<any> SignedBigNum)(num) as (T & BN<T>);\n        }\n        if (num.byteLength === 16) {\n            return new (<any> DecimalBigNum)(num) as (T & BN<T>);\n        }\n        return new (<any> UnsignedBigNum)(num) as (T & BN<T>);\n    }\n    /** @nocollapse */\n    public static signed<T extends IntArray>(num: T): (T & BN<T>) {\n        return new (<any> SignedBigNum)(num) as (T & BN<T>);\n    }\n    /** @nocollapse */\n    public static unsigned<T extends UintArray>(num: T): (T & BN<T>) {\n        return new (<any> UnsignedBigNum)(num) as (T & BN<T>);\n    }\n    /** @nocollapse */\n    public static decimal<T extends UintArray>(num: T): (T & BN<T>) {\n        return new (<any> DecimalBigNum)(num) as (T & BN<T>);\n    }\n    constructor(num: T, isSigned?: boolean) {\n        return BN.new(num, isSigned) as any;\n    }\n}\n\n/** @ignore */\nexport interface BN<T extends BigNumArray> extends TypedArrayLike<T> {\n\n    new<T extends ArrayBufferViewInput>(buffer: T, signed?: boolean): T;\n\n    readonly signed: boolean;\n    readonly TypedArray: TypedArrayConstructor<TypedArray>;\n    readonly BigIntArray: BigIntArrayConstructor<BigIntArray>;\n\n    [Symbol.toStringTag]:\n        'Int8Array'         |\n        'Int16Array'        |\n        'Int32Array'        |\n        'Uint8Array'        |\n        'Uint16Array'       |\n        'Uint32Array'       |\n        'Uint8ClampedArray';\n\n    /**\n     * Convert the bytes to their (positive) decimal representation for printing\n     */\n    toString(): string;\n    /**\n     * Down-convert the bytes to a 53-bit precision integer. Invoked by JS for\n     * arithmetic operators, like `+`. Easy (and unsafe) way to convert BN to\n     * number via `+bn_inst`\n     */\n    valueOf(): number;\n    /**\n     * Return the JSON representation of the bytes. Must be wrapped in double-quotes,\n     * so it's compatible with JSON.stringify().\n     */\n    toJSON(): string;\n    [Symbol.toPrimitive](hint?: any): number | string | bigint;\n}\n\n/** @ignore */\ninterface TypedArrayLike<T extends BigNumArray> {\n\n    readonly length: number;\n    readonly buffer: ArrayBuffer;\n    readonly byteLength: number;\n    readonly byteOffset: number;\n    readonly BYTES_PER_ELEMENT: number;\n\n    includes(searchElement: number, fromIndex?: number | undefined): boolean;\n    copyWithin(target: number, start: number, end?: number | undefined): this;\n    every(callbackfn: (value: number, index: number, array: T) => boolean, thisArg?: any): boolean;\n    fill(value: number, start?: number | undefined, end?: number | undefined): this;\n    filter(callbackfn: (value: number, index: number, array: T) => boolean, thisArg?: any): T;\n    find(predicate: (value: number, index: number, obj: T) => boolean, thisArg?: any): number | undefined;\n    findIndex(predicate: (value: number, index: number, obj: T) => boolean, thisArg?: any): number;\n    forEach(callbackfn: (value: number, index: number, array: T) => void, thisArg?: any): void;\n    indexOf(searchElement: number, fromIndex?: number | undefined): number;\n    join(separator?: string | undefined): string;\n    lastIndexOf(searchElement: number, fromIndex?: number | undefined): number;\n    map(callbackfn: (value: number, index: number, array: T) => number, thisArg?: any): T;\n    reduce(callbackfn: (previousValue: number, currentValue: number, currentIndex: number, array: T) => number): number;\n    reduce(callbackfn: (previousValue: number, currentValue: number, currentIndex: number, array: T) => number, initialValue: number): number;\n    reduce<U>(callbackfn: (previousValue: U, currentValue: number, currentIndex: number, array: T) => U, initialValue: U): U;\n    reduceRight(callbackfn: (previousValue: number, currentValue: number, currentIndex: number, array: T) => number): number;\n    reduceRight(callbackfn: (previousValue: number, currentValue: number, currentIndex: number, array: T) => number, initialValue: number): number;\n    reduceRight<U>(callbackfn: (previousValue: U, currentValue: number, currentIndex: number, array: T) => U, initialValue: U): U;\n    reverse(): T;\n    set(array: ArrayLike<number>, offset?: number | undefined): void;\n    slice(start?: number | undefined, end?: number | undefined): T;\n    some(callbackfn: (value: number, index: number, array: T) => boolean, thisArg?: any): boolean;\n    sort(compareFn?: ((a: number, b: number) => number) | undefined): this;\n    subarray(begin: number, end?: number | undefined): T;\n    toLocaleString(): string;\n    entries(): IterableIterator<[number, number]>;\n    keys(): IterableIterator<number>;\n    values(): IterableIterator<number>;\n}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { bignumToBigInt } from '../util/bn';\nimport { WideBufferBuilder } from './buffer';\nimport { BigInt64Array } from '../util/compat';\nimport { FixedWidthBuilder, BuilderOptions } from '../builder';\nimport { Int, Int8, Int16, Int32, Int64, Uint8, Uint16, Uint32, Uint64 } from '../type';\n\n/** @ignore */\nexport class IntBuilder<T extends Int = Int, TNull = any> extends FixedWidthBuilder<T, TNull> {\n    public setValue(index: number, value: T['TValue']) {\n        this._values.set(index, value);\n    }\n}\n\n/** @ignore */\nexport class Int8Builder<TNull = any> extends IntBuilder<Int8, TNull> {}\n/** @ignore */\nexport class Int16Builder<TNull = any> extends IntBuilder<Int16, TNull> {}\n/** @ignore */\nexport class Int32Builder<TNull = any> extends IntBuilder<Int32, TNull> {}\n/** @ignore */\nexport class Int64Builder<TNull = any> extends IntBuilder<Int64, TNull> {\n    protected _values: WideBufferBuilder<Int32Array, BigInt64Array>;\n    constructor(options: BuilderOptions<Int64, TNull>) {\n        if (options['nullValues']) {\n            options['nullValues'] = (options['nullValues'] as TNull[]).map(toBigInt);\n        }\n        super(options);\n        this._values = new WideBufferBuilder(new Int32Array(0), 2);\n    }\n    public get values64() { return this._values.buffer64; }\n    public isValid(value: Int32Array | bigint | TNull) { return super.isValid(toBigInt(value)); }\n}\n\n/** @ignore */\nexport class Uint8Builder<TNull = any> extends IntBuilder<Uint8, TNull> {}\n/** @ignore */\nexport class Uint16Builder<TNull = any> extends IntBuilder<Uint16, TNull> {}\n/** @ignore */\nexport class Uint32Builder<TNull = any> extends IntBuilder<Uint32, TNull> {}\n/** @ignore */\nexport class Uint64Builder<TNull = any> extends IntBuilder<Uint64, TNull> {\n    protected _values: WideBufferBuilder<Uint32Array, BigUint64Array>;\n    constructor(options: BuilderOptions<Uint64, TNull>) {\n        if (options['nullValues']) {\n            options['nullValues'] = (options['nullValues'] as TNull[]).map(toBigInt);\n        }\n        super(options);\n        this._values = new WideBufferBuilder(new Uint32Array(0), 2);\n    }\n    public get values64() { return this._values.buffer64; }\n    public isValid(value: Uint32Array | bigint | TNull) { return super.isValid(toBigInt(value)); }\n}\n\nconst toBigInt = ((memo: any) => (value: any) => {\n    if (ArrayBuffer.isView(value)) {\n        memo.buffer = value.buffer;\n        memo.byteOffset = value.byteOffset;\n        memo.byteLength = value.byteLength;\n        value = bignumToBigInt(memo);\n        memo.buffer = null;\n    }\n    return value;\n})({ 'BigIntArray': BigInt64Array });\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { FixedWidthBuilder } from '../builder';\nimport { Time, TimeSecond, TimeMillisecond, TimeMicrosecond, TimeNanosecond } from '../type';\n\n/** @ignore */\nexport class TimeBuilder<T extends Time = Time, TNull = any> extends FixedWidthBuilder<T, TNull> {}\n/** @ignore */\nexport class TimeSecondBuilder<TNull = any> extends TimeBuilder<TimeSecond, TNull> {}\n/** @ignore */\nexport class TimeMillisecondBuilder<TNull = any> extends TimeBuilder<TimeMillisecond, TNull> {}\n/** @ignore */\nexport class TimeMicrosecondBuilder<TNull = any> extends TimeBuilder<TimeMicrosecond, TNull> {}\n/** @ignore */\nexport class TimeNanosecondBuilder<TNull = any> extends TimeBuilder<TimeNanosecond, TNull> {}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { FixedWidthBuilder } from '../builder';\nimport { Timestamp, TimestampSecond, TimestampMillisecond, TimestampMicrosecond, TimestampNanosecond } from '../type';\n\n/** @ignore */\nexport class TimestampBuilder<T extends Timestamp = Timestamp, TNull = any> extends FixedWidthBuilder<T, TNull> {}\n/** @ignore */\nexport class TimestampSecondBuilder<TNull = any> extends TimestampBuilder<TimestampSecond, TNull> {}\n/** @ignore */\nexport class TimestampMillisecondBuilder<TNull = any> extends TimestampBuilder<TimestampMillisecond, TNull> {}\n/** @ignore */\nexport class TimestampMicrosecondBuilder<TNull = any> extends TimestampBuilder<TimestampMicrosecond, TNull> {}\n/** @ignore */\nexport class TimestampNanosecondBuilder<TNull = any> extends TimestampBuilder<TimestampNanosecond, TNull> {}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { FixedWidthBuilder } from '../builder';\nimport { Interval, IntervalDayTime, IntervalYearMonth } from '../type';\n\n/** @ignore */\nexport class IntervalBuilder<T extends Interval = Interval, TNull = any> extends FixedWidthBuilder<T, TNull> {}\n/** @ignore */\nexport class IntervalDayTimeBuilder<TNull = any> extends IntervalBuilder<IntervalDayTime, TNull> {}\n/** @ignore */\nexport class IntervalYearMonthBuilder<TNull = any> extends IntervalBuilder<IntervalYearMonth, TNull> {}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { Binary } from '../type';\nimport { toUint8Array } from '../util/buffer';\nimport { BufferBuilder } from './buffer';\nimport { VariableWidthBuilder, BuilderOptions } from '../builder';\n\n/** @ignore */\nexport class BinaryBuilder<TNull = any> extends VariableWidthBuilder<Binary, TNull> {\n    constructor(opts: BuilderOptions<Binary, TNull>) {\n        super(opts);\n        this._values = new BufferBuilder(new Uint8Array(0));\n    }\n    public get byteLength(): number {\n        let size = this._pendingLength + (this.length * 4);\n        this._offsets && (size += this._offsets.byteLength);\n        this._values && (size += this._values.byteLength);\n        this._nulls && (size += this._nulls.byteLength);\n        return size;\n    }\n    public setValue(index: number, value: Uint8Array) {\n        return super.setValue(index, toUint8Array(value));\n    }\n    protected _flushPending(pending: Map<number, Uint8Array | undefined>, pendingLength: number) {\n        const offsets = this._offsets;\n        const data = this._values.reserve(pendingLength).buffer;\n        let index = 0, length = 0, offset = 0, value: Uint8Array | undefined;\n        for ([index, value] of pending) {\n            if (value === undefined) {\n                offsets.set(index, 0);\n            } else {\n                length = value.length;\n                data.set(value, offset);\n                offsets.set(index, length);\n                offset += length;\n            }\n        }\n    }\n}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { Utf8 } from '../type';\nimport { encodeUtf8 } from '../util/utf8';\nimport { BinaryBuilder } from './binary';\nimport { BufferBuilder } from './buffer';\nimport { VariableWidthBuilder, BuilderOptions } from '../builder';\n\n/** @ignore */\nexport class Utf8Builder<TNull = any> extends VariableWidthBuilder<Utf8, TNull> {\n    constructor(opts: BuilderOptions<Utf8, TNull>) {\n        super(opts);\n        this._values = new BufferBuilder(new Uint8Array(0));\n    }\n    public get byteLength(): number {\n        let size = this._pendingLength + (this.length * 4);\n        this._offsets && (size += this._offsets.byteLength);\n        this._values && (size += this._values.byteLength);\n        this._nulls && (size += this._nulls.byteLength);\n        return size;\n    }\n    public setValue(index: number, value: string) {\n        return super.setValue(index, encodeUtf8(value) as any);\n    }\n    // @ts-ignore\n    protected _flushPending(pending: Map<number, Uint8Array | undefined>, pendingLength: number): void {}\n}\n\n(Utf8Builder.prototype as any)._flushPending = (BinaryBuilder.prototype as any)._flushPending;\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { Vector } from '../vector';\nimport { DataType } from '../type';\n\n/** @ignore */\nexport class Run<T extends DataType = any, TNull = any> {\n    // @ts-ignore\n    protected _values: ArrayLike<T['TValue'] | TNull>;\n    public get length() { return this._values.length; }\n    public get(index: number) { return this._values[index]; }\n    public clear() { this._values = <any> null; return this; }\n    public bind(values: Vector<T> | ArrayLike<T['TValue'] | TNull>) {\n        if (values instanceof Vector) {\n            return values;\n        }\n        this._values = values;\n        return this as any;\n    }\n}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { Vector } from '../vector';\nimport { StructVector } from './struct';\nimport { valueToString } from '../util/pretty';\nimport { DataType, Struct, RowLike } from '../type';\n\n/** @ignore */ const kParent = Symbol.for('parent');\n/** @ignore */ const kRowIndex = Symbol.for('rowIndex');\n/** @ignore */ const kKeyToIdx = Symbol.for('keyToIdx');\n/** @ignore */ const kIdxToVal = Symbol.for('idxToVal');\n/** @ignore */ const kCustomInspect = Symbol.for('nodejs.util.inspect.custom');\n\nabstract class Row<K extends PropertyKey = any, V = any> implements Map<K, V> {\n\n    public readonly size: number;\n    public readonly [Symbol.toStringTag]: string;\n\n    protected [kRowIndex]: number;\n    protected [kParent]: Vector<Struct>;\n    protected [kKeyToIdx]: Map<K, number>;\n    protected [kIdxToVal]: V[];\n\n    constructor(parent: Vector<Struct>, numKeys: number) {\n        this[kParent] = parent;\n        this.size = numKeys;\n    }\n\n    public abstract keys(): IterableIterator<K>;\n    public abstract values(): IterableIterator<V>;\n    public abstract getKey(idx: number): K;\n    public abstract getIndex(key: K): number;\n    public abstract getValue(idx: number): V;\n    public abstract setValue(idx: number, val: V): void;\n\n    public entries() { return this[Symbol.iterator](); }\n\n    public has(key: K) { return this.get(key) !== undefined; }\n\n    public get(key: K) {\n        let val = undefined;\n        if (key !== null && key !== undefined) {\n            const ktoi = this[kKeyToIdx] || (this[kKeyToIdx] = new Map());\n            let idx = ktoi.get(key);\n            if (idx !== undefined) {\n                const itov = this[kIdxToVal] || (this[kIdxToVal] = new Array(this.size));\n                ((val = itov[idx]) !== undefined) || (itov[idx] = val = this.getValue(idx));\n            } else if ((idx = this.getIndex(key)) > -1) {\n                ktoi.set(key, idx);\n                const itov = this[kIdxToVal] || (this[kIdxToVal] = new Array(this.size));\n                ((val = itov[idx]) !== undefined) || (itov[idx] = val = this.getValue(idx));\n            }\n        }\n        return val;\n    }\n\n    public set(key: K, val: V) {\n        if (key !== null && key !== undefined) {\n            const ktoi = this[kKeyToIdx] || (this[kKeyToIdx] = new Map());\n            let idx = ktoi.get(key);\n            if (idx === undefined) {\n                ktoi.set(key, idx = this.getIndex(key));\n            }\n            if (idx > -1) {\n                const itov = this[kIdxToVal] || (this[kIdxToVal] = new Array(this.size));\n                itov[idx] = <any> this.setValue(idx, val);\n            }\n        }\n        return this;\n    }\n\n    public clear(): void { throw new Error(`Clearing ${this[Symbol.toStringTag]} not supported.`); }\n\n    public delete(_: K): boolean { throw new Error(`Deleting ${this[Symbol.toStringTag]} values not supported.`); }\n\n    public *[Symbol.iterator](): IterableIterator<[K, V]> {\n\n        const ki = this.keys();\n        const vi = this.values();\n        const ktoi = this[kKeyToIdx] || (this[kKeyToIdx] = new Map());\n        const itov = this[kIdxToVal] || (this[kIdxToVal] = new Array(this.size));\n\n        for (let k: K, v: V, i = 0, kr: IteratorResult<K>, vr: IteratorResult<V>;\n            !((kr = ki.next()).done || (vr = vi.next()).done);\n            ++i\n        ) {\n            k = kr.value;\n            v = vr.value;\n            itov[i] = v;\n            ktoi.has(k) || ktoi.set(k, i);\n            yield [k, v];\n        }\n    }\n\n    public forEach(callbackfn: (value: V, key: K, map: Map<K, V>) => void, thisArg?: any): void {\n\n        const ki = this.keys();\n        const vi = this.values();\n        const callback = thisArg === undefined ? callbackfn :\n            (v: V, k: K, m: Map<K, V>) => callbackfn.call(thisArg, v, k, m);\n        const ktoi = this[kKeyToIdx] || (this[kKeyToIdx] = new Map());\n        const itov = this[kIdxToVal] || (this[kIdxToVal] = new Array(this.size));\n\n        for (let k: K, v: V, i = 0, kr: IteratorResult<K>, vr: IteratorResult<V>;\n            !((kr = ki.next()).done || (vr = vi.next()).done);\n            ++i\n        ) {\n            k = kr.value;\n            v = vr.value;\n            itov[i] = v;\n            ktoi.has(k) || ktoi.set(k, i);\n            callback(v, k, this);\n        }\n    }\n\n    public toArray() { return [...this.values()]; }\n    public toJSON() {\n        const obj = {} as any;\n        this.forEach((val, key) => obj[key] = val);\n        return obj;\n    }\n\n    public inspect() { return this.toString(); }\n    public [kCustomInspect]() { return this.toString(); }\n    public toString() {\n        const str: string[] = [];\n        this.forEach((val, key) => {\n            key = valueToString(key);\n            val = valueToString(val);\n            str.push(`${key}: ${val}`);\n        });\n        return `{ ${str.join(', ')} }`;\n    }\n\n    protected static [Symbol.toStringTag] = ((proto: Row) => {\n        Object.defineProperties(proto, {\n            'size': { writable: true, enumerable: false, configurable: false, value: 0 },\n            [kParent]: { writable: true, enumerable: false, configurable: false, value: null },\n            [kRowIndex]: { writable: true, enumerable: false, configurable: false, value: -1 },\n        });\n        return (proto as any)[Symbol.toStringTag] = 'Row';\n    })(Row.prototype);\n}\n\nexport class MapRow<K extends DataType = any, V extends DataType = any> extends Row<K['TValue'], V['TValue'] | null> {\n    constructor(slice: Vector<Struct<{ key: K, value: V }>>) {\n        super(slice, slice.length);\n        return createRowProxy(this);\n    }\n    public keys() {\n        return this[kParent].getChildAt(0)![Symbol.iterator]();\n    }\n    public values() {\n        return this[kParent].getChildAt(1)![Symbol.iterator]();\n    }\n    public getKey(idx: number): K['TValue'] {\n        return this[kParent].getChildAt(0)!.get(idx);\n    }\n    public getIndex(key: K['TValue']): number {\n        return this[kParent].getChildAt(0)!.indexOf(key);\n    }\n    public getValue(index: number): V['TValue'] | null {\n        return this[kParent].getChildAt(1)!.get(index);\n    }\n    public setValue(index: number, value: V['TValue'] | null): void {\n        this[kParent].getChildAt(1)!.set(index, value);\n    }\n}\n\nexport class StructRow<T extends { [key: string]: DataType } = any> extends Row<keyof T, T[keyof T]['TValue'] | null> {\n    constructor(parent: StructVector<T>) {\n        super(parent, parent.type.children.length);\n        return defineRowProxyProperties(this);\n    }\n    public *keys() {\n        for (const field of this[kParent].type.children) {\n            yield field.name as keyof T;\n        }\n    }\n    public *values() {\n        for (const field of this[kParent].type.children) {\n            yield (this as RowLike<T>)[field.name];\n        }\n    }\n    public getKey(idx: number): keyof T {\n        return this[kParent].type.children[idx].name as keyof T;\n    }\n    public getIndex(key: keyof T): number {\n        return this[kParent].type.children.findIndex((f) => f.name === key);\n    }\n    public getValue(index: number): T[keyof T]['TValue'] | null {\n        return this[kParent].getChildAt(index)!.get(this[kRowIndex]);\n    }\n    public setValue(index: number, value: T[keyof T]['TValue'] | null): void {\n        return this[kParent].getChildAt(index)!.set(this[kRowIndex], value);\n    }\n}\n\nObject.setPrototypeOf(Row.prototype, Map.prototype);\n\n/** @ignore */\nconst defineRowProxyProperties = (() => {\n    const desc = { enumerable: true, configurable: false, get: null as any, set: null as any };\n    return <T extends Row>(row: T) => {\n        let idx = -1, ktoi = row[kKeyToIdx] || (row[kKeyToIdx] = new Map());\n        const getter = (key: any) => function(this: T) { return this.get(key); };\n        const setter = (key: any) => function(this: T, val: any) { return this.set(key, val); };\n        for (const key of row.keys()) {\n            ktoi.set(key, ++idx);\n            desc.get = getter(key);\n            desc.set = setter(key);\n            row.hasOwnProperty(key) || (desc.enumerable = true, Object.defineProperty(row, key, desc));\n            row.hasOwnProperty(idx) || (desc.enumerable = false, Object.defineProperty(row, idx, desc));\n        }\n        desc.get = desc.set = null;\n        return row;\n    };\n})();\n\n/** @ignore */\nconst createRowProxy = (() => {\n    if (typeof Proxy === 'undefined') {\n        return defineRowProxyProperties;\n    }\n    const has = Row.prototype.has;\n    const get = Row.prototype.get;\n    const set = Row.prototype.set;\n    const getKey = Row.prototype.getKey;\n    const RowProxyHandler: ProxyHandler<Row> = {\n        isExtensible() { return false; },\n        deleteProperty() { return false; },\n        preventExtensions() { return true; },\n        ownKeys(row: Row) { return [...row.keys()].map((x) => `${x}`); },\n        has(row: Row, key: PropertyKey) {\n            switch (key) {\n                case 'getKey': case 'getIndex': case 'getValue': case 'setValue': case 'toArray': case 'toJSON': case 'inspect':\n                case 'constructor': case 'isPrototypeOf': case 'propertyIsEnumerable': case 'toString': case 'toLocaleString': case 'valueOf':\n                case 'size': case 'has': case 'get': case 'set': case 'clear': case 'delete': case 'keys': case 'values': case 'entries': case 'forEach':\n                case '__proto__': case '__defineGetter__': case '__defineSetter__': case 'hasOwnProperty': case '__lookupGetter__': case '__lookupSetter__':\n                case Symbol.iterator: case Symbol.toStringTag: case kParent: case kRowIndex: case kIdxToVal: case kKeyToIdx: case kCustomInspect:\n                    return true;\n            }\n            if (typeof key === 'number' && !row.has(key)) {\n                key = row.getKey(key);\n            }\n            return row.has(key);\n        },\n        get(row: Row, key: PropertyKey, receiver: any) {\n            switch (key) {\n                case 'getKey': case 'getIndex': case 'getValue': case 'setValue': case 'toArray': case 'toJSON': case 'inspect':\n                case 'constructor': case 'isPrototypeOf': case 'propertyIsEnumerable': case 'toString': case 'toLocaleString': case 'valueOf':\n                case 'size': case 'has': case 'get': case 'set': case 'clear': case 'delete': case 'keys': case 'values': case 'entries': case 'forEach':\n                case '__proto__': case '__defineGetter__': case '__defineSetter__': case 'hasOwnProperty': case '__lookupGetter__': case '__lookupSetter__':\n                case Symbol.iterator: case Symbol.toStringTag: case kParent: case kRowIndex: case kIdxToVal: case kKeyToIdx: case kCustomInspect:\n                    return Reflect.get(row, key, receiver);\n            }\n            if (typeof key === 'number' && !has.call(receiver, key)) {\n                key = getKey.call(receiver, key);\n            }\n            return get.call(receiver, key);\n        },\n        set(row: Row, key: PropertyKey, val: any, receiver: any) {\n            switch (key) {\n                case kParent: case kRowIndex: case kIdxToVal: case kKeyToIdx:\n                    return Reflect.set(row, key, val, receiver);\n                case 'getKey': case 'getIndex': case 'getValue': case 'setValue': case 'toArray': case 'toJSON': case 'inspect':\n                case 'constructor': case 'isPrototypeOf': case 'propertyIsEnumerable': case 'toString': case 'toLocaleString': case 'valueOf':\n                case 'size': case 'has': case 'get': case 'set': case 'clear': case 'delete': case 'keys': case 'values': case 'entries': case 'forEach':\n                case '__proto__': case '__defineGetter__': case '__defineSetter__': case 'hasOwnProperty': case '__lookupGetter__': case '__lookupSetter__':\n                case Symbol.iterator: case Symbol.toStringTag:\n                    return false;\n            }\n            if (typeof key === 'number' && !has.call(receiver, key)) {\n                key = getKey.call(receiver, key);\n            }\n            return has.call(receiver, key) ? !!set.call(receiver, key, val) : false;\n        },\n    };\n    return <T extends Row>(row: T) => new Proxy(row, RowProxyHandler) as T;\n})();\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { Vector } from '../vector';\nimport { MapRow, StructRow } from '../vector/row';\nimport { compareArrayLike } from '../util/buffer';\nimport { BigInt, BigIntAvailable } from './compat';\n\n/** @ignore */\ntype RangeLike = { length: number; stride?: number };\n/** @ignore */\ntype ClampThen<T extends RangeLike> = (source: T, index: number) => any;\n/** @ignore */\ntype ClampRangeThen<T extends RangeLike> = (source: T, offset: number, length: number) => any;\n\nexport function clampIndex<T extends RangeLike>(source: T, index: number): number;\nexport function clampIndex<T extends RangeLike, N extends ClampThen<T> = ClampThen<T>>(source: T, index: number, then: N): ReturnType<N>;\n/** @ignore */\nexport function clampIndex<T extends RangeLike, N extends ClampThen<T> = ClampThen<T>>(source: T, index: number, then?: N) {\n    const length = source.length;\n    const adjust = index > -1 ? index : (length + (index % length));\n    return then ? then(source, adjust) : adjust;\n}\n\n/** @ignore */\nlet tmp: number;\nexport function clampRange<T extends RangeLike>(source: T, begin: number | undefined, end: number | undefined): [number, number];\nexport function clampRange<T extends RangeLike, N extends ClampRangeThen<T> = ClampRangeThen<T>>(source: T, begin: number | undefined, end: number | undefined, then: N): ReturnType<N>;\n/** @ignore */\nexport function clampRange<T extends RangeLike, N extends ClampRangeThen<T> = ClampRangeThen<T>>(source: T, begin: number | undefined, end: number | undefined, then?: N) {\n\n    // Adjust args similar to Array.prototype.slice. Normalize begin/end to\n    // clamp between 0 and length, and wrap around on negative indices, e.g.\n    // slice(-1, 5) or slice(5, -1)\n    let { length: len = 0 } = source;\n    let lhs = typeof begin !== 'number' ? 0 : begin;\n    let rhs = typeof end !== 'number' ? len : end;\n    // wrap around on negative start/end positions\n    (lhs < 0) && (lhs = ((lhs % len) + len) % len);\n    (rhs < 0) && (rhs = ((rhs % len) + len) % len);\n    // ensure lhs <= rhs\n    (rhs < lhs) && (tmp = lhs, lhs = rhs, rhs = tmp);\n     // ensure rhs <= length\n    (rhs > len) && (rhs = len);\n\n    return then ? then(source, lhs, rhs) : [lhs, rhs];\n}\n\nconst big0 = BigIntAvailable ? BigInt(0) : 0;\nconst isNaNFast = (value: any) => value !== value;\n\n/** @ignore */\nexport function createElementComparator(search: any) {\n    let typeofSearch = typeof search;\n    // Compare primitives\n    if (typeofSearch !== 'object' || search === null) {\n        // Compare NaN\n        if (isNaNFast(search)) {\n            return isNaNFast;\n        }\n        return typeofSearch !== 'bigint'\n            ? (value: any) => value === search\n            : (value: any) => (big0 + value) === search;\n    }\n    // Compare Dates\n    if (search instanceof Date) {\n        const valueOfSearch = search.valueOf();\n        return (value: any) => value instanceof Date ? (value.valueOf() === valueOfSearch) : false;\n    }\n    // Compare TypedArrays\n    if (ArrayBuffer.isView(search)) {\n        return (value: any) => value ? compareArrayLike(search, value) : false;\n    }\n    // Compare Maps and Rows\n    if (search instanceof Map) { return creatMapComparator(search); }\n    // Compare Array-likes\n    if (Array.isArray(search)) { return createArrayLikeComparator(search); }\n    // Compare Vectors\n    if (search instanceof Vector) { return createVectorComparator(search); }\n    // Compare non-empty Objects\n    return createObjectComparator(search);\n}\n\n/** @ignore */\nfunction createArrayLikeComparator(lhs: ArrayLike<any>) {\n    const comparators = [] as ((x: any) => boolean)[];\n    for (let i = -1, n = lhs.length; ++i < n;) {\n        comparators[i] = createElementComparator(lhs[i]);\n    }\n    return createSubElementsComparator(comparators);\n}\n\n/** @ignore */\nfunction creatMapComparator(lhs: Map<any, any>) {\n    let i = -1;\n    const comparators = [] as ((x: any) => boolean)[];\n    lhs.forEach((v) => comparators[++i] = createElementComparator(v));\n    return createSubElementsComparator(comparators);\n}\n\n/** @ignore */\nfunction createVectorComparator(lhs: Vector<any>) {\n    const comparators = [] as ((x: any) => boolean)[];\n    for (let i = -1, n = lhs.length; ++i < n;) {\n        comparators[i] = createElementComparator(lhs.get(i));\n    }\n    return createSubElementsComparator(comparators);\n}\n\n/** @ignore */\nfunction createObjectComparator(lhs: any) {\n    const keys = Object.keys(lhs);\n    // Only compare non-empty Objects\n    if (keys.length === 0) { return () => false; }\n    const comparators = [] as ((x: any) => boolean)[];\n    for (let i = -1, n = keys.length; ++i < n;) {\n        comparators[i] = createElementComparator(lhs[keys[i]]);\n    }\n    return createSubElementsComparator(comparators, keys);\n}\n\nfunction createSubElementsComparator(comparators: ((x: any) => boolean)[], keys?: Iterable<string>) {\n    return (rhs: any) => {\n        if (!rhs || typeof rhs !== 'object') {\n            return false;\n        }\n        switch (rhs.constructor) {\n            case Array: return compareArray(comparators, rhs);\n            case Map:\n            case MapRow:\n            case StructRow:\n                return compareObject(comparators, rhs, rhs.keys());\n            case Object:\n            case undefined: // support `Object.create(null)` objects\n                return compareObject(comparators, rhs, keys || Object.keys(rhs));\n        }\n        return rhs instanceof Vector ? compareVector(comparators, rhs) : false;\n    };\n}\n\nfunction compareArray(comparators: ((x: any) => boolean)[], arr: any[]) {\n    const n = comparators.length;\n    if (arr.length !== n) { return false; }\n    for (let i = -1; ++i < n;) {\n        if (!(comparators[i](arr[i]))) { return false; }\n    }\n    return true;\n}\n\nfunction compareVector(comparators: ((x: any) => boolean)[], vec: Vector) {\n    const n = comparators.length;\n    if (vec.length !== n) { return false; }\n    for (let i = -1; ++i < n;) {\n        if (!(comparators[i](vec.get(i)))) { return false; }\n    }\n    return true;\n}\n\nfunction compareObject(comparators: ((x: any) => boolean)[], obj: Map<any, any>, keys: Iterable<string>) {\n\n    const lKeyItr = keys[Symbol.iterator]();\n    const rKeyItr = obj instanceof Map ? obj.keys() : Object.keys(obj)[Symbol.iterator]();\n    const rValItr = obj instanceof Map ? obj.values() : Object.values(obj)[Symbol.iterator]();\n\n    let i = 0;\n    let n = comparators.length;\n    let rVal = rValItr.next();\n    let lKey = lKeyItr.next();\n    let rKey = rKeyItr.next();\n\n    for (; i < n && !lKey.done && !rKey.done && !rVal.done;\n         ++i, lKey = lKeyItr.next(), rKey = rKeyItr.next(), rVal = rValItr.next()) {\n        if (lKey.value !== rKey.value || !comparators[i](rVal.value)) {\n            break;\n        }\n    }\n    if (i === n && lKey.done && rKey.done && rVal.done) {\n        return true;\n    }\n    lKeyItr.return && lKeyItr.return();\n    rKeyItr.return && rKeyItr.return();\n    rValItr.return && rValItr.return();\n    return false;\n}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { Data } from '../data';\nimport { Field } from '../schema';\nimport { clampRange } from '../util/vector';\nimport { DataType, Dictionary } from '../type';\nimport { selectChunkArgs } from '../util/args';\nimport { DictionaryVector } from './dictionary';\nimport { AbstractVector, Vector } from '../vector';\nimport { Clonable, Sliceable, Applicative } from '../vector';\n\n/** @ignore */\ntype ChunkedDict<T extends DataType> = T extends Dictionary ? Vector<T['dictionary']> : null | never;\n/** @ignore */\ntype ChunkedKeys<T extends DataType> = T extends Dictionary ? Vector<T['indices']> | Chunked<T['indices']> : null | never;\n\n/** @ignore */\nexport type SearchContinuation<T extends Chunked> = (column: T, chunkIndex: number, valueIndex: number) => any;\n\n/** @ignore */\nexport class Chunked<T extends DataType = any>\n    extends AbstractVector<T>\n    implements Clonable<Chunked<T>>,\n               Sliceable<Chunked<T>>,\n               Applicative<T, Chunked<T>> {\n\n    /** @nocollapse */\n    public static flatten<T extends DataType>(...vectors: (Vector<T> | Vector<T>[])[]) {\n        return selectChunkArgs<Vector<T>>(Vector, vectors);\n    }\n\n    /** @nocollapse */\n    public static concat<T extends DataType>(...vectors: (Vector<T> | Vector<T>[])[]) {\n        const chunks = Chunked.flatten<T>(...vectors);\n        return new Chunked<T>(chunks[0].type, chunks);\n    }\n\n    protected _type: T;\n    protected _length: number;\n    protected _chunks: Vector<T>[];\n    protected _numChildren: number;\n    protected _children?: Chunked[];\n    protected _nullCount: number = -1;\n    protected _chunkOffsets: Uint32Array;\n\n    constructor(type: T, chunks: Vector<T>[] = [], offsets = calculateOffsets(chunks)) {\n        super();\n        this._type = type;\n        this._chunks = chunks;\n        this._chunkOffsets = offsets;\n        this._length = offsets[offsets.length - 1];\n        this._numChildren = (this._type.children || []).length;\n    }\n\n    public get type() { return this._type; }\n    public get length() { return this._length; }\n    public get chunks() { return this._chunks; }\n    public get typeId(): T['TType'] { return this._type.typeId; }\n    public get VectorName() { return `Chunked<${this._type}>`; }\n    public get data(): Data<T> {\n        return this._chunks[0] ? this._chunks[0].data : <any> null;\n    }\n\n    public get ArrayType() { return this._type.ArrayType; }\n    public get numChildren() { return this._numChildren; }\n    public get stride() { return this._chunks[0] ? this._chunks[0].stride : 1; }\n    public get byteLength(): number {\n        return this._chunks.reduce((byteLength, chunk) => byteLength + chunk.byteLength, 0);\n    }\n    public get nullCount() {\n        let nullCount = this._nullCount;\n        if (nullCount < 0) {\n            this._nullCount = nullCount = this._chunks.reduce((x, { nullCount }) => x + nullCount, 0);\n        }\n        return nullCount;\n    }\n\n    protected _indices?: ChunkedKeys<T>;\n    public get indices(): ChunkedKeys<T> | null {\n        if (DataType.isDictionary(this._type)) {\n            if (!this._indices) {\n                const chunks = (<any> this._chunks) as DictionaryVector<T, any>[];\n                this._indices = (chunks.length === 1\n                    ? chunks[0].indices\n                    : Chunked.concat(...chunks.map((x) => x.indices))) as ChunkedKeys<T>;\n            }\n            return this._indices;\n        }\n        return null;\n    }\n    public get dictionary(): ChunkedDict<T> | null {\n        if (DataType.isDictionary(this._type)) {\n            return this._chunks[this._chunks.length - 1].data.dictionary as ChunkedDict<T>;\n        }\n        return null;\n    }\n\n    public *[Symbol.iterator](): IterableIterator<T['TValue'] | null> {\n        for (const chunk of this._chunks) {\n            yield* chunk;\n        }\n    }\n\n    public clone(chunks = this._chunks): Chunked<T> {\n        return new Chunked(this._type, chunks);\n    }\n\n    public concat(...others: Vector<T>[]): Chunked<T> {\n        return this.clone(Chunked.flatten(this, ...others));\n    }\n\n    public slice(begin?: number, end?: number): Chunked<T> {\n        return clampRange(this, begin, end, this._sliceInternal);\n    }\n\n    public getChildAt<R extends DataType = any>(index: number): Chunked<R> | null {\n\n        if (index < 0 || index >= this._numChildren) { return null; }\n\n        let columns = this._children || (this._children = []);\n        let child: Chunked<R>, field: Field<R>, chunks: Vector<R>[];\n\n        if (child = columns[index]) { return child; }\n        if (field = ((this._type.children || [])[index] as Field<R>)) {\n            chunks = this._chunks\n                .map((vector) => vector.getChildAt<R>(index))\n                .filter((vec): vec is Vector<R> => vec != null);\n            if (chunks.length > 0) {\n                return (columns[index] = new Chunked<R>(field.type, chunks));\n            }\n        }\n\n        return null;\n    }\n\n    public search(index: number): [number, number] | null;\n    public search<N extends SearchContinuation<Chunked<T>>>(index: number, then?: N): ReturnType<N>;\n    public search<N extends SearchContinuation<Chunked<T>>>(index: number, then?: N) {\n        let idx = index;\n        // binary search to find the child vector and value indices\n        let offsets = this._chunkOffsets, rhs = offsets.length - 1;\n        // return early if out of bounds, or if there's just one child\n        if (idx < 0            ) { return null; }\n        if (idx >= offsets[rhs]) { return null; }\n        if (rhs <= 1           ) { return then ? then(this, 0, idx) : [0, idx]; }\n        let lhs = 0, pos = 0, mid = 0;\n        do {\n            if (lhs + 1 === rhs) {\n                return then ? then(this, lhs, idx - pos) : [lhs, idx - pos];\n            }\n            mid = lhs + ((rhs - lhs) / 2) | 0;\n            idx >= offsets[mid] ? (lhs = mid) : (rhs = mid);\n        } while (idx < offsets[rhs] && idx >= (pos = offsets[lhs]));\n        return null;\n    }\n\n    public isValid(index: number): boolean {\n        return !!this.search(index, this.isValidInternal);\n    }\n\n    public get(index: number): T['TValue'] | null {\n        return this.search(index, this.getInternal);\n    }\n\n    public set(index: number, value: T['TValue'] | null): void {\n        this.search(index, ({ chunks }, i, j) => chunks[i].set(j, value));\n    }\n\n    public indexOf(element: T['TValue'], offset?: number): number {\n        if (offset && typeof offset === 'number') {\n            return this.search(offset, (self, i, j) => this.indexOfInternal(self, i, j, element))!;\n        }\n        return this.indexOfInternal(this, 0, Math.max(0, offset || 0), element);\n    }\n\n    public toArray(): T['TArray'] {\n        const { chunks } = this;\n        const n = chunks.length;\n        let ArrayType: any = this._type.ArrayType;\n        if (n <= 0) { return new ArrayType(0); }\n        if (n <= 1) { return chunks[0].toArray(); }\n        let len = 0, src = new Array(n);\n        for (let i = -1; ++i < n;) {\n            len += (src[i] = chunks[i].toArray()).length;\n        }\n        if (ArrayType !== src[0].constructor) {\n            ArrayType = src[0].constructor;\n        }\n        let dst = new ArrayType(len);\n        let set: any = ArrayType === Array ? arraySet : typedSet;\n        for (let i = -1, idx = 0; ++i < n;) {\n            idx = set(src[i], dst, idx);\n        }\n        return dst;\n    }\n\n    protected getInternal({ _chunks }: Chunked<T>, i: number, j: number) { return _chunks[i].get(j); }\n    protected isValidInternal({ _chunks }: Chunked<T>, i: number, j: number) { return _chunks[i].isValid(j); }\n    protected indexOfInternal({ _chunks }: Chunked<T>, chunkIndex: number, fromIndex: number, element: T['TValue']) {\n        let i = chunkIndex - 1, n = _chunks.length;\n        let start = fromIndex, offset = 0, found = -1;\n        while (++i < n) {\n            if (~(found = _chunks[i].indexOf(element, start))) {\n                return offset + found;\n            }\n            start = 0;\n            offset += _chunks[i].length;\n        }\n        return -1;\n    }\n\n    protected _sliceInternal(self: Chunked<T>, begin: number, end: number) {\n        const slices: Vector<T>[] = [];\n        const { chunks, _chunkOffsets: chunkOffsets } = self;\n        for (let i = -1, n = chunks.length; ++i < n;) {\n            const chunk = chunks[i];\n            const chunkLength = chunk.length;\n            const chunkOffset = chunkOffsets[i];\n            // If the child is to the right of the slice boundary, we can stop\n            if (chunkOffset >= end) { break; }\n            // If the child is to the left of of the slice boundary, exclude\n            if (begin >= chunkOffset + chunkLength) { continue; }\n            // If the child is between both left and right boundaries, include w/o slicing\n            if (chunkOffset >= begin && (chunkOffset + chunkLength) <= end) {\n                slices.push(chunk);\n                continue;\n            }\n            // If the child overlaps one of the slice boundaries, include that slice\n            const from = Math.max(0, begin - chunkOffset);\n            const to = Math.min(end - chunkOffset, chunkLength);\n            slices.push(chunk.slice(from, to) as Vector<T>);\n        }\n        return self.clone(slices);\n    }\n}\n\n/** @ignore */\nfunction calculateOffsets<T extends DataType>(vectors: Vector<T>[]) {\n    let offsets = new Uint32Array((vectors || []).length + 1);\n    let offset = offsets[0] = 0, length = offsets.length;\n    for (let index = 0; ++index < length;) {\n        offsets[index] = (offset += vectors[index - 1].length);\n    }\n    return offsets;\n}\n\n/** @ignore */\nconst typedSet = (src: TypedArray, dst: TypedArray, offset: number) => {\n    dst.set(src, offset);\n    return (offset + src.length);\n};\n\n/** @ignore */\nconst arraySet = (src: any[], dst: any[], offset: number) => {\n    let idx = offset;\n    for (let i = -1, n = src.length; ++i < n;) {\n        dst[idx++] = src[i];\n    }\n    return idx;\n};\n\n/** @ignore */\ninterface TypedArray extends ArrayBufferView {\n    readonly length: number;\n    readonly [n: number]: number;\n    set(array: ArrayLike<number>, offset?: number): void;\n}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { Data } from './data';\nimport { Field } from './schema';\nimport { DataType } from './type';\nimport { Vector } from './vector';\nimport { Clonable, Sliceable, Applicative } from './vector';\nimport { VectorCtorArgs, VectorType as V } from './interfaces';\nimport { Chunked, SearchContinuation } from './vector/chunked';\n\nexport interface Column<T extends DataType = any> {\n    typeId: T['TType'];\n    concat(...others: Vector<T>[]): Column<T>;\n    slice(begin?: number, end?: number): Column<T>;\n    clone(chunks?: Vector<T>[], offsets?: Uint32Array): Column<T>;\n}\n\nexport class Column<T extends DataType = any>\n    extends Chunked<T>\n    implements Clonable<Column<T>>,\n               Sliceable<Column<T>>,\n               Applicative<T, Column<T>> {\n\n    public static new<T extends DataType>(field: string | Field<T>, ...chunks: (Vector<T> | Vector<T>[])[]): Column<T>;\n    public static new<T extends DataType>(field: string | Field<T>, data: Data<T>, ...args: VectorCtorArgs<V<T>>): Column<T>;\n    /** @nocollapse */\n    public static new<T extends DataType = any>(field: string | Field<T>, data: Data<T> | Vector<T> | (Data<T> | Vector<T>)[], ...rest: any[]) {\n\n        const chunks = Chunked.flatten<T>(\n            Array.isArray(data) ? [...data, ...rest] :\n            data instanceof Vector ? [data, ...rest] :\n            [Vector.new(data, ...rest)]\n        );\n\n        if (typeof field === 'string') {\n            const type = chunks[0].data.type;\n            field = new Field(field, type, true);\n        } else if (!field.nullable && chunks.some(({ nullCount }) => nullCount > 0)) {\n            field = field.clone({ nullable: true });\n        }\n        return new Column(field, chunks);\n    }\n\n    constructor(field: Field<T>, vectors: Vector<T>[] = [], offsets?: Uint32Array) {\n        vectors = Chunked.flatten<T>(...vectors);\n        super(field.type, vectors, offsets);\n        this._field = field;\n        if (vectors.length === 1 && !(this instanceof SingleChunkColumn)) {\n            return new SingleChunkColumn(field, vectors[0], this._chunkOffsets);\n        }\n    }\n\n    protected _field: Field<T>;\n    protected _children?: Column[];\n\n    public get field() { return this._field; }\n    public get name() { return this._field.name; }\n    public get nullable() { return this._field.nullable; }\n    public get metadata() { return this._field.metadata; }\n\n    public clone(chunks = this._chunks) {\n        return new Column(this._field, chunks);\n    }\n\n    public getChildAt<R extends DataType = any>(index: number): Column<R> | null {\n\n        if (index < 0 || index >= this.numChildren) { return null; }\n\n        let columns = this._children || (this._children = []);\n        let column: Column<R>, field: Field<R>, chunks: Vector<R>[];\n\n        if (column = columns[index]) { return column; }\n        if (field = ((this.type.children || [])[index] as Field<R>)) {\n            chunks = this._chunks\n                .map((vector) => vector.getChildAt<R>(index))\n                .filter((vec): vec is Vector<R> => vec != null);\n            if (chunks.length > 0) {\n                return (columns[index] = new Column<R>(field, chunks));\n            }\n        }\n\n        return null;\n    }\n}\n\n/** @ignore */\nclass SingleChunkColumn<T extends DataType = any> extends Column<T> {\n    protected _chunk: Vector<T>;\n    constructor(field: Field<T>, vector: Vector<T>, offsets?: Uint32Array) {\n        super(field, [vector], offsets);\n        this._chunk = vector;\n    }\n    public search(index: number): [number, number] | null;\n    public search<N extends SearchContinuation<Chunked<T>>>(index: number, then?: N): ReturnType<N>;\n    public search<N extends SearchContinuation<Chunked<T>>>(index: number, then?: N) {\n        return then ? then(this, 0, index) : [0, index];\n    }\n    public isValid(index: number): boolean {\n        return this._chunk.isValid(index);\n    }\n    public get(index: number): T['TValue'] | null {\n        return this._chunk.get(index);\n    }\n    public set(index: number, value: T['TValue'] | null): void {\n        this._chunk.set(index, value);\n    }\n    public indexOf(element: T['TValue'], offset?: number): number {\n        return this._chunk.indexOf(element, offset);\n    }\n}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { Data } from '../data';\nimport { Field } from '../schema';\nimport { Column } from '../column';\nimport { Vector } from '../vector';\nimport { DataType } from '../type';\nimport { Chunked } from '../vector/chunked';\n\ntype RecordBatchCtor = typeof import('../recordbatch').RecordBatch;\n\nconst isArray = Array.isArray;\n\n/** @ignore */\nexport const selectArgs = <T>(Ctor: any, vals: any[]) => _selectArgs(Ctor, vals, [], 0) as T[];\n/** @ignore */\nexport const selectColumnArgs = <T extends { [key: string]: DataType }>(args: any[]) => {\n    const [fields, values] = _selectFieldArgs<T>(args, [[], []]);\n    return values.map((x, i) =>\n        x instanceof Column ? Column.new(x.field.clone(fields[i]), x) :\n        x instanceof Vector ? Column.new(fields[i], x) as Column<T[keyof T]> :\n                              Column.new(fields[i], [] as Vector<T[keyof T]>[]));\n};\n\n/** @ignore */\nexport const selectFieldArgs = <T extends { [key: string]: DataType }>(args: any[]) => _selectFieldArgs<T>(args, [[], []]);\n/** @ignore */\nexport const selectChunkArgs = <T>(Ctor: any, vals: any[]) => _selectChunkArgs(Ctor, vals, [], 0) as T[];\n/** @ignore */\nexport const selectVectorChildrenArgs = <T extends Vector>(Ctor: RecordBatchCtor, vals: any[]) => _selectVectorChildrenArgs(Ctor, vals, [], 0) as T[];\n/** @ignore */\nexport const selectColumnChildrenArgs = <T extends Column>(Ctor: RecordBatchCtor, vals: any[]) => _selectColumnChildrenArgs(Ctor, vals, [], 0) as T[];\n\n/** @ignore */\nfunction _selectArgs<T>(Ctor: any, vals: any[], res: T[], idx: number) {\n    let value: any, j = idx;\n    let i = -1, n = vals.length;\n    while (++i < n) {\n        if (isArray(value = vals[i])) {\n            j = _selectArgs(Ctor, value, res, j).length;\n        } else if (value instanceof Ctor) { res[j++] = value; }\n    }\n    return res;\n}\n\n/** @ignore */\nfunction _selectChunkArgs<T>(Ctor: any, vals: any[], res: T[], idx: number) {\n    let value: any, j = idx;\n    let i = -1, n = vals.length;\n    while (++i < n) {\n        if (isArray(value = vals[i])) {\n            j = _selectChunkArgs(Ctor, value, res, j).length;\n        } else if (value instanceof Chunked) {\n            j = _selectChunkArgs(Ctor, value.chunks, res, j).length;\n        } else if (value instanceof Ctor) { res[j++] = value; }\n    }\n    return res;\n}\n\n/** @ignore */\nfunction _selectVectorChildrenArgs<T extends Vector>(Ctor: RecordBatchCtor, vals: any[], res: T[], idx: number) {\n    let value: any, j = idx;\n    let i = -1, n = vals.length;\n    while (++i < n) {\n        if (isArray(value = vals[i])) {\n            j = _selectVectorChildrenArgs(Ctor, value, res, j).length;\n        } else if (value instanceof Ctor) {\n            j = _selectArgs(Vector, value.schema.fields.map((_, i) => value.getChildAt(i)!), res, j).length;\n        } else if (value instanceof Vector) { res[j++] = value as T; }\n    }\n    return res;\n}\n\n/** @ignore */\nfunction _selectColumnChildrenArgs<T extends Column>(Ctor: RecordBatchCtor, vals: any[], res: T[], idx: number) {\n    let value: any, j = idx;\n    let i = -1, n = vals.length;\n    while (++i < n) {\n        if (isArray(value = vals[i])) {\n            j = _selectColumnChildrenArgs(Ctor, value, res, j).length;\n        } else if (value instanceof Ctor) {\n            j = _selectArgs(Column, value.schema.fields.map((f, i) => Column.new(f, value.getChildAt(i)!)), res, j).length;\n        } else if (value instanceof Column) { res[j++] = value as T; }\n    }\n    return res;\n}\n\n/** @ignore */\nconst toKeysAndValues = (xs: [any[], any[]], [k, v]: [any, any], i: number) => (xs[0][i] = k, xs[1][i] = v, xs);\n\n/** @ignore */\nfunction _selectFieldArgs<T extends { [key: string]: DataType }>(vals: any[], ret: [Field<T[keyof T]>[], Vector<T[keyof T]>[]]): [Field<T[keyof T]>[], (T[keyof T] | Vector<T[keyof T]>)[]] {\n    let keys: any[], n: number;\n    switch (n = vals.length) {\n        case 0: return ret;\n        case 1:\n            keys = ret[0];\n            if (!(vals[0])) { return ret; }\n            if (isArray(vals[0])) { return _selectFieldArgs(vals[0], ret); }\n            if (!(vals[0] instanceof Data || vals[0] instanceof Vector || vals[0] instanceof DataType)) {\n                [keys, vals] = Object.entries(vals[0]).reduce(toKeysAndValues, ret);\n            }\n            break;\n        default:\n            !isArray(keys = vals[n - 1])\n                ? (vals = isArray(vals[0]) ? vals[0] : vals, keys = [])\n                : (vals = isArray(vals[0]) ? vals[0] : vals.slice(0, n - 1));\n    }\n\n    let fieldIndex = -1;\n    let valueIndex = -1;\n    let idx = -1, len = vals.length;\n    let field: number | string | Field<T[keyof T]>;\n    let val: Vector<T[keyof T]> | Data<T[keyof T]>;\n    let [fields, values] = ret as [Field<T[keyof T]>[], any[]];\n\n    while (++idx < len) {\n        val = vals[idx];\n        if (val instanceof Column && (values[++valueIndex] = val)) {\n            fields[++fieldIndex] = val.field.clone(keys[idx], val.type, true);\n        } else {\n            ({ [idx]: field = idx } = keys);\n            if (val instanceof DataType && (values[++valueIndex] = val)) {\n                fields[++fieldIndex] = Field.new(field, val as DataType, true) as Field<T[keyof T]>;\n            } else if (val && val.type && (values[++valueIndex] = val)) {\n                val instanceof Data && (values[valueIndex] = val = Vector.new(val) as Vector);\n                fields[++fieldIndex] = Field.new(field, val.type, true) as Field<T[keyof T]>;\n            }\n        }\n    }\n    return ret;\n}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { Data } from './data';\nimport { Vector } from './vector';\nimport { DataType } from './type';\nimport { selectArgs } from './util/args';\nimport { selectFieldArgs } from './util/args';\nimport { instance as comparer } from './visitor/typecomparator';\n\ntype VectorMap = { [key: string]: Vector };\ntype Fields<T extends { [key: string]: DataType }> = (keyof T)[] | Field<T[keyof T]>[];\ntype ChildData<T extends { [key: string]: DataType }> = T[keyof T][] | Data<T[keyof T]>[] | Vector<T[keyof T]>[];\n\nexport class Schema<T extends { [key: string]: DataType } = any> {\n\n    public static from<T extends { [key: string]: DataType } = any>(children: T): Schema<T>;\n    public static from<T extends VectorMap = any>(children: T): Schema<{ [P in keyof T]: T[P]['type'] }>;\n    public static from<T extends { [key: string]: DataType } = any>(children: ChildData<T>, fields?: Fields<T>): Schema<T>;\n    /** @nocollapse */\n    public static from(...args: any[]) {\n        return Schema.new(args[0], args[1]);\n    }\n\n    public static new<T extends { [key: string]: DataType } = any>(children: T): Schema<T>;\n    public static new<T extends VectorMap = any>(children: T): Schema<{ [P in keyof T]: T[P]['type'] }>;\n    public static new<T extends { [key: string]: DataType } = any>(children: ChildData<T>, fields?: Fields<T>): Schema<T>;\n    /** @nocollapse */\n    public static new(...args: any[]) {\n        return new Schema(selectFieldArgs(args)[0]);\n    }\n\n    public readonly fields: Field<T[keyof T]>[];\n    public readonly metadata: Map<string, string>;\n    public readonly dictionaries: Map<number, DataType>;\n\n    constructor(fields: Field[] = [],\n                metadata?: Map<string, string> | null,\n                dictionaries?: Map<number, DataType> | null) {\n        this.fields = (fields || []) as Field<T[keyof T]>[];\n        this.metadata = metadata || new Map();\n        if (!dictionaries) {\n            dictionaries = generateDictionaryMap(fields);\n        }\n        this.dictionaries = dictionaries;\n    }\n    public get [Symbol.toStringTag]() { return 'Schema'; }\n    public toString() {\n        return `Schema<{ ${this.fields.map((f, i) => `${i}: ${f}`).join(', ')} }>`;\n    }\n\n    public compareTo(other?: Schema | null): other is Schema<T> {\n        return comparer.compareSchemas(this, other);\n    }\n\n    public select<K extends keyof T = any>(...columnNames: K[]) {\n        const names = columnNames.reduce((xs, x) => (xs[x] = true) && xs, Object.create(null));\n        return new Schema<{ [P in K]: T[P] }>(this.fields.filter((f) => names[f.name]), this.metadata);\n    }\n    public selectAt<K extends T[keyof T] = any>(...columnIndices: number[]) {\n        return new Schema<{ [key: string]: K }>(columnIndices.map((i) => this.fields[i]).filter(Boolean), this.metadata);\n    }\n\n    public assign<R extends { [key: string]: DataType } = any>(schema: Schema<R>): Schema<T & R>;\n    public assign<R extends { [key: string]: DataType } = any>(...fields: (Field<R[keyof R]> | Field<R[keyof R]>[])[]): Schema<T & R>;\n    public assign<R extends { [key: string]: DataType } = any>(...args: (Schema<R> | Field<R[keyof R]> | Field<R[keyof R]>[])[]) {\n\n        const other = args[0] instanceof Schema ? args[0] as Schema<R>\n            : new Schema<R>(selectArgs<Field<R[keyof R]>>(Field, args));\n\n        const curFields = [...this.fields] as Field[];\n        const metadata = mergeMaps(mergeMaps(new Map(), this.metadata), other.metadata);\n        const newFields = other.fields.filter((f2) => {\n            const i = curFields.findIndex((f) => f.name === f2.name);\n            return ~i ? (curFields[i] = f2.clone({\n                metadata: mergeMaps(mergeMaps(new Map(), curFields[i].metadata), f2.metadata)\n            })) && false : true;\n        }) as Field[];\n\n        const newDictionaries = generateDictionaryMap(newFields, new Map());\n\n        return new Schema<T & R>(\n            [...curFields, ...newFields], metadata,\n            new Map([...this.dictionaries, ...newDictionaries])\n        );\n    }\n}\n\nexport class Field<T extends DataType = any> {\n\n    public static new<T extends DataType = any>(props: { name: string | number, type: T, nullable?: boolean, metadata?: Map<string, string> | null }): Field<T>;\n    public static new<T extends DataType = any>(name: string | number | Field<T>, type: T, nullable?: boolean, metadata?: Map<string, string> | null): Field<T>;\n    /** @nocollapse */\n    public static new<T extends DataType = any>(...args: any[]) {\n        let [name, type, nullable, metadata] = args;\n        if (args[0] && typeof args[0] === 'object') {\n            ({ name } = args[0]);\n            (type === undefined) && (type = args[0].type);\n            (nullable === undefined) && (nullable = args[0].nullable);\n            (metadata === undefined) && (metadata = args[0].metadata);\n        }\n        return new Field<T>(`${name}`, type, nullable, metadata);\n    }\n\n    public readonly type: T;\n    public readonly name: string;\n    public readonly nullable: boolean;\n    public readonly metadata: Map<string, string>;\n\n    constructor(name: string, type: T, nullable = false, metadata?: Map<string, string> | null) {\n        this.name = name;\n        this.type = type;\n        this.nullable = nullable;\n        this.metadata = metadata || new Map();\n    }\n\n    public get typeId() { return this.type.typeId; }\n    public get [Symbol.toStringTag]() { return 'Field'; }\n    public toString() { return `${this.name}: ${this.type}`; }\n    public compareTo(other?: Field | null): other is Field<T> {\n        return comparer.compareField(this, other);\n    }\n    public clone<R extends DataType = T>(props: { name?: string | number, type?: R, nullable?: boolean, metadata?: Map<string, string> | null }): Field<R>;\n    public clone<R extends DataType = T>(name?: string | number | Field<T>, type?: R, nullable?: boolean, metadata?: Map<string, string> | null): Field<R>;\n    public clone<R extends DataType = T>(...args: any[]) {\n        let [name, type, nullable, metadata] = args;\n        (!args[0] || typeof args[0] !== 'object')\n            ? ([name = this.name, type = this.type, nullable = this.nullable, metadata = this.metadata] = args)\n            : ({name = this.name, type = this.type, nullable = this.nullable, metadata = this.metadata} = args[0]);\n        return Field.new<R>(name, type, nullable, metadata);\n    }\n}\n\n/** @ignore */\nfunction mergeMaps<TKey, TVal>(m1?: Map<TKey, TVal> | null, m2?: Map<TKey, TVal> | null): Map<TKey, TVal> {\n    return new Map([...(m1 || new Map()), ...(m2 || new Map())]);\n}\n\n/** @ignore */\nfunction generateDictionaryMap(fields: Field[], dictionaries = new Map<number, DataType>()): Map<number, DataType> {\n\n    for (let i = -1, n = fields.length; ++i < n;) {\n        const field = fields[i];\n        const type = field.type;\n        if (DataType.isDictionary(type)) {\n            if (!dictionaries.has(type.id)) {\n                dictionaries.set(type.id, type.dictionary);\n            } else if (dictionaries.get(type.id) !== type.dictionary) {\n                throw new Error(`Cannot create Schema containing two different dictionaries with the same Id`);\n            }\n        }\n        if (type.children && type.children.length > 0) {\n            generateDictionaryMap(type.children, dictionaries);\n        }\n    }\n\n    return dictionaries;\n}\n\n// Add these here so they're picked up by the externs creator\n// in the build, and closure-compiler doesn't minify them away\n(Schema.prototype as any).fields = null;\n(Schema.prototype as any).metadata = null;\n(Schema.prototype as any).dictionaries = null;\n\n(Field.prototype as any).type = null;\n(Field.prototype as any).name = null;\n(Field.prototype as any).nullable = null;\n(Field.prototype as any).metadata = null;\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { Run } from './run';\nimport { Field } from '../schema';\nimport { DataType, List } from '../type';\nimport { OffsetsBufferBuilder } from './buffer';\nimport { Builder, BuilderOptions, VariableWidthBuilder } from '../builder';\n\n/** @ignore */\nexport class ListBuilder<T extends DataType = any, TNull = any> extends VariableWidthBuilder<List<T>, TNull> {\n    protected _run = new Run<T, TNull>();\n    protected _offsets: OffsetsBufferBuilder;\n    constructor(opts: BuilderOptions<List<T>, TNull>) {\n        super(opts);\n        this._offsets = new OffsetsBufferBuilder();\n    }\n    public addChild(child: Builder<T>, name = '0') {\n        if (this.numChildren > 0) {\n            throw new Error('ListBuilder can only have one child.');\n        }\n        this.children[this.numChildren] = child;\n        this.type = new List(new Field(name, child.type, true));\n        return this.numChildren - 1;\n    }\n    public clear() {\n        this._run.clear();\n        return super.clear();\n    }\n    protected _flushPending(pending: Map<number, T['TValue'] | undefined>) {\n        const run = this._run;\n        const offsets = this._offsets;\n        const setValue = this._setValue;\n        let index = 0, value: Uint8Array | undefined;\n        for ([index, value] of pending) {\n            if (value === undefined) {\n                offsets.set(index, 0);\n            } else {\n                offsets.set(index, value.length);\n                setValue(this, index, run.bind(value));\n            }\n        }\n    }\n}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { Run } from './run';\nimport { Field } from '../schema';\nimport { Builder } from '../builder';\nimport { DataType, FixedSizeList } from '../type';\n\n/** @ignore */\nexport class FixedSizeListBuilder<T extends DataType = any, TNull = any> extends Builder<FixedSizeList<T>, TNull> {\n    protected _run = new Run<T, TNull>();\n    public setValue(index: number, value: T['TValue']) {\n        super.setValue(index, this._run.bind(value));\n    }\n    public addChild(child: Builder<T>, name = '0') {\n        if (this.numChildren > 0) {\n            throw new Error('FixedSizeListBuilder can only have one child.');\n        }\n        const childIndex = this.children.push(child);\n        this.type = new FixedSizeList(this.type.listSize, new Field(name, child.type, true));\n        return childIndex;\n    }\n    public clear() {\n        this._run.clear();\n        return super.clear();\n    }\n}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { Field } from '../schema';\nimport { DataType, Map_, Struct } from '../type';\nimport { Builder, VariableWidthBuilder } from '../builder';\n\n/** @ignore */ type MapValue<K extends DataType = any, V extends DataType = any> = Map_<K, V>['TValue'];\n/** @ignore */ type MapValues<K extends DataType = any, V extends DataType = any> = Map<number, MapValue<K, V> | undefined>;\n/** @ignore */ type MapValueExt<K extends DataType = any, V extends DataType = any> = MapValue<K, V> | { [key: string]: V } | { [key: number]: V } ;\n\n/** @ignore */\nexport class MapBuilder<K extends DataType = any, V extends DataType = any, TNull = any> extends VariableWidthBuilder<Map_<K, V>, TNull> {\n\n    protected _pending: MapValues<K, V> | undefined;\n    public set(index: number, value: MapValueExt<K, V> | TNull) {\n        return super.set(index, value as MapValue<K, V> | TNull);\n    }\n\n    public setValue(index: number, value: MapValueExt<K, V>) {\n        value = value instanceof Map ? value : new Map(Object.entries(value));\n        const pending = this._pending || (this._pending = new Map() as MapValues<K, V>);\n        const current = pending.get(index);\n        current && (this._pendingLength -= current.size);\n        this._pendingLength += value.size;\n        pending.set(index, value);\n    }\n\n    public addChild(child: Builder<Struct<{ key: K, value: V }>>, name = `${this.numChildren}`) {\n        if (this.numChildren > 0) {\n            throw new Error('ListBuilder can only have one child.');\n        }\n        this.children[this.numChildren] = child;\n        this.type = new Map_<K, V>(new Field(name, child.type, true), this.type.keysSorted);\n        return this.numChildren - 1;\n    }\n\n    protected _flushPending(pending: MapValues<K, V>) {\n        const offsets = this._offsets;\n        const setValue = this._setValue;\n        pending.forEach((value, index) => {\n            if (value === undefined) {\n                offsets.set(index, 0);\n            } else {\n                offsets.set(index, value.size);\n                setValue(this, index, value);\n            }\n        });\n    }\n}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { Field } from '../schema';\nimport { Builder } from '../builder';\nimport { DataType, Struct } from '../type';\n\n/** @ignore */\nexport class StructBuilder<T extends { [key: string]: DataType } = any, TNull = any> extends Builder<Struct<T>, TNull> {\n    public addChild(child: Builder, name = `${this.numChildren}`) {\n        const childIndex = this.children.push(child);\n        this.type = new Struct([...this.type.children, new Field(name, child.type, true)]);\n        return childIndex;\n    }\n}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { Field } from '../schema';\nimport { DataBufferBuilder } from './buffer';\nimport { Builder, BuilderOptions } from '../builder';\nimport { Union, SparseUnion, DenseUnion } from '../type';\n\nexport interface UnionBuilderOptions<T extends Union = any, TNull = any> extends BuilderOptions<T, TNull> {\n    valueToChildTypeId?: (builder: UnionBuilder<T, TNull>, value: any, offset: number) => number;\n}\n\n/** @ignore */\nexport abstract class UnionBuilder<T extends Union, TNull = any> extends Builder<T, TNull> {\n\n    protected _typeIds: DataBufferBuilder<Int8Array>;\n\n    constructor(options: UnionBuilderOptions<T, TNull>) {\n        super(options);\n        this._typeIds = new DataBufferBuilder(new Int8Array(0), 1);\n        if (typeof options['valueToChildTypeId'] === 'function') {\n            this._valueToChildTypeId = options['valueToChildTypeId'];\n        }\n    }\n\n    public get typeIdToChildIndex() { return this.type.typeIdToChildIndex; }\n\n    public append(value: T['TValue'] | TNull, childTypeId?: number) {\n        return this.set(this.length, value, childTypeId);\n    }\n\n    public set(index: number, value: T['TValue'] | TNull, childTypeId?: number) {\n        if (childTypeId === undefined) {\n            childTypeId = this._valueToChildTypeId(this, value, index);\n        }\n        if (this.setValid(index, this.isValid(value))) {\n            this.setValue(index, value, childTypeId);\n        }\n        return this;\n    }\n\n    // @ts-ignore\n    public setValue(index: number, value: T['TValue'], childTypeId?: number) {\n        this._typeIds.set(index, childTypeId!);\n        super.setValue(index, value);\n    }\n\n    // @ts-ignore\n    public addChild(child: Builder, name = `${this.children.length}`) {\n        const childTypeId = this.children.push(child);\n        const { type: { children, mode, typeIds } } = this;\n        const fields = [...children, new Field(name, child.type)];\n        this.type = <T> new Union(mode, [...typeIds, childTypeId], fields);\n        return childTypeId;\n    }\n\n    /** @ignore */\n    // @ts-ignore\n    protected _valueToChildTypeId(builder: UnionBuilder<T, TNull>, value: any, offset: number): number {\n        throw new Error(`Cannot map UnionBuilder value to child typeId. \\\nPass the \\`childTypeId\\` as the second argument to unionBuilder.append(), \\\nor supply a \\`valueToChildTypeId\\` function as part of the UnionBuilder constructor options.`);\n    }\n}\n\n/** @ignore */\nexport class SparseUnionBuilder<T extends SparseUnion, TNull = any> extends UnionBuilder<T, TNull> {}\n/** @ignore */\nexport class DenseUnionBuilder<T extends DenseUnion, TNull = any> extends UnionBuilder<T, TNull> {\n\n    protected _offsets: DataBufferBuilder<Int32Array>;\n\n    constructor(options: UnionBuilderOptions<T, TNull>) {\n        super(options);\n        this._offsets = new DataBufferBuilder(new Int32Array(0));\n    }\n\n    /** @ignore */\n    public setValue(index: number, value: T['TValue'], childTypeId?: number) {\n        const childIndex = this.type.typeIdToChildIndex[childTypeId!];\n        this._offsets.set(index, this.getChildAt(childIndex)!.length);\n        return super.setValue(index, value, childTypeId);\n    }\n}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { Data } from '../data';\nimport { Field } from '../schema';\nimport { Vector } from '../vector';\nimport { Visitor } from '../visitor';\nimport { encodeUtf8 } from '../util/utf8';\nimport { VectorType } from '../interfaces';\nimport { float64ToUint16 } from '../util/math';\nimport { toArrayBufferView } from '../util/buffer';\nimport { Type, UnionMode, Precision, DateUnit, TimeUnit, IntervalUnit } from '../enum';\nimport {\n    DataType, Dictionary,\n    Bool, Null, Utf8, Binary, Decimal, FixedSizeBinary, List, FixedSizeList, Map_, Struct,\n    Float, Float16, Float32, Float64,\n    Int, Uint8, Uint16, Uint32, Uint64, Int8, Int16, Int32, Int64,\n    Date_, DateDay, DateMillisecond,\n    Interval, IntervalDayTime, IntervalYearMonth,\n    Time, TimeSecond, TimeMillisecond, TimeMicrosecond, TimeNanosecond,\n    Timestamp, TimestampSecond, TimestampMillisecond, TimestampMicrosecond, TimestampNanosecond,\n    Union, DenseUnion, SparseUnion,\n} from '../type';\n\n/** @ignore */\nexport interface SetVisitor extends Visitor {\n    visit<T extends VectorType>(node: T, index: number, value: T['TValue']): void;\n    visitMany<T extends VectorType>(nodes: T[], indices: number[], values: T['TValue'][]): void[];\n    getVisitFn<T extends Type>(node: T): (vector: VectorType<T>, index: number, value: VectorType<T>['TValue']) => void;\n    getVisitFn<T extends DataType>(node: VectorType<T> | Data<T> | T): (vector: VectorType<T>, index: number, value: VectorType<T>['TValue']) => void;\n    visitNull                 <T extends Null>                (vector: VectorType<T>, index: number, value: T['TValue']): void;\n    visitBool                 <T extends Bool>                (vector: VectorType<T>, index: number, value: T['TValue']): void;\n    visitInt                  <T extends Int>                 (vector: VectorType<T>, index: number, value: T['TValue']): void;\n    visitInt8                 <T extends Int8>                (vector: VectorType<T>, index: number, value: T['TValue']): void;\n    visitInt16                <T extends Int16>               (vector: VectorType<T>, index: number, value: T['TValue']): void;\n    visitInt32                <T extends Int32>               (vector: VectorType<T>, index: number, value: T['TValue']): void;\n    visitInt64                <T extends Int64>               (vector: VectorType<T>, index: number, value: T['TValue']): void;\n    visitUint8                <T extends Uint8>               (vector: VectorType<T>, index: number, value: T['TValue']): void;\n    visitUint16               <T extends Uint16>              (vector: VectorType<T>, index: number, value: T['TValue']): void;\n    visitUint32               <T extends Uint32>              (vector: VectorType<T>, index: number, value: T['TValue']): void;\n    visitUint64               <T extends Uint64>              (vector: VectorType<T>, index: number, value: T['TValue']): void;\n    visitFloat                <T extends Float>               (vector: VectorType<T>, index: number, value: T['TValue']): void;\n    visitFloat16              <T extends Float16>             (vector: VectorType<T>, index: number, value: T['TValue']): void;\n    visitFloat32              <T extends Float32>             (vector: VectorType<T>, index: number, value: T['TValue']): void;\n    visitFloat64              <T extends Float64>             (vector: VectorType<T>, index: number, value: T['TValue']): void;\n    visitUtf8                 <T extends Utf8>                (vector: VectorType<T>, index: number, value: T['TValue']): void;\n    visitBinary               <T extends Binary>              (vector: VectorType<T>, index: number, value: T['TValue']): void;\n    visitFixedSizeBinary      <T extends FixedSizeBinary>     (vector: VectorType<T>, index: number, value: T['TValue']): void;\n    visitDate                 <T extends Date_>               (vector: VectorType<T>, index: number, value: T['TValue']): void;\n    visitDateDay              <T extends DateDay>             (vector: VectorType<T>, index: number, value: T['TValue']): void;\n    visitDateMillisecond      <T extends DateMillisecond>     (vector: VectorType<T>, index: number, value: T['TValue']): void;\n    visitTimestamp            <T extends Timestamp>           (vector: VectorType<T>, index: number, value: T['TValue']): void;\n    visitTimestampSecond      <T extends TimestampSecond>     (vector: VectorType<T>, index: number, value: T['TValue']): void;\n    visitTimestampMillisecond <T extends TimestampMillisecond>(vector: VectorType<T>, index: number, value: T['TValue']): void;\n    visitTimestampMicrosecond <T extends TimestampMicrosecond>(vector: VectorType<T>, index: number, value: T['TValue']): void;\n    visitTimestampNanosecond  <T extends TimestampNanosecond> (vector: VectorType<T>, index: number, value: T['TValue']): void;\n    visitTime                 <T extends Time>                (vector: VectorType<T>, index: number, value: T['TValue']): void;\n    visitTimeSecond           <T extends TimeSecond>          (vector: VectorType<T>, index: number, value: T['TValue']): void;\n    visitTimeMillisecond      <T extends TimeMillisecond>     (vector: VectorType<T>, index: number, value: T['TValue']): void;\n    visitTimeMicrosecond      <T extends TimeMicrosecond>     (vector: VectorType<T>, index: number, value: T['TValue']): void;\n    visitTimeNanosecond       <T extends TimeNanosecond>      (vector: VectorType<T>, index: number, value: T['TValue']): void;\n    visitDecimal              <T extends Decimal>             (vector: VectorType<T>, index: number, value: T['TValue']): void;\n    visitList                 <T extends List>                (vector: VectorType<T>, index: number, value: T['TValue']): void;\n    visitStruct               <T extends Struct>              (vector: VectorType<T>, index: number, value: T['TValue']): void;\n    visitUnion                <T extends Union>               (vector: VectorType<T>, index: number, value: T['TValue']): void;\n    visitDenseUnion           <T extends DenseUnion>          (vector: VectorType<T>, index: number, value: T['TValue']): void;\n    visitSparseUnion          <T extends SparseUnion>         (vector: VectorType<T>, index: number, value: T['TValue']): void;\n    visitDictionary           <T extends Dictionary>          (vector: VectorType<T>, index: number, value: T['TValue']): void;\n    visitInterval             <T extends Interval>            (vector: VectorType<T>, index: number, value: T['TValue']): void;\n    visitIntervalDayTime      <T extends IntervalDayTime>     (vector: VectorType<T>, index: number, value: T['TValue']): void;\n    visitIntervalYearMonth    <T extends IntervalYearMonth>   (vector: VectorType<T>, index: number, value: T['TValue']): void;\n    visitFixedSizeList        <T extends FixedSizeList>       (vector: VectorType<T>, index: number, value: T['TValue']): void;\n    visitMap                  <T extends Map_>                (vector: VectorType<T>, index: number, value: T['TValue']): void;\n}\n\n/** @ignore */\nexport class SetVisitor extends Visitor {}\n\n/** @ignore */\nconst setEpochMsToDays = (data: Int32Array, index: number, epochMs: number) => { data[index] = (epochMs / 86400000) | 0; };\n/** @ignore */\nconst setEpochMsToMillisecondsLong = (data: Int32Array, index: number, epochMs: number) => {\n    data[index] = (epochMs % 4294967296) | 0;\n    data[index + 1] = (epochMs / 4294967296) | 0;\n};\n/** @ignore */\nconst setEpochMsToMicrosecondsLong = (data: Int32Array, index: number, epochMs: number) => {\n    data[index] = ((epochMs * 1000) % 4294967296) | 0;\n    data[index + 1] = ((epochMs * 1000) / 4294967296) | 0;\n};\n/** @ignore */\nconst setEpochMsToNanosecondsLong = (data: Int32Array, index: number, epochMs: number) => {\n    data[index] = ((epochMs * 1000000) % 4294967296) | 0;\n    data[index + 1] = ((epochMs * 1000000) / 4294967296) | 0;\n};\n\n/** @ignore */\nconst setVariableWidthBytes = (values: Uint8Array, valueOffsets: Int32Array, index: number, value: Uint8Array) => {\n    const { [index]: x, [index + 1]: y } = valueOffsets;\n    if (x != null && y != null) {\n        values.set(value.subarray(0, y - x), x);\n    }\n};\n\n/** @ignore */\nconst setBool = <T extends Bool>({ offset, values }: VectorType<T>, index: number, val: boolean) => {\n    const idx = offset + index;\n    val ? (values[idx >> 3] |=  (1 << (idx % 8)))  // true\n        : (values[idx >> 3] &= ~(1 << (idx % 8))); // false\n\n};\n\n/** @ignore */ type Numeric1X = Int8 | Int16 | Int32 | Uint8 | Uint16 | Uint32 | Float32 | Float64;\n/** @ignore */ type Numeric2X = Int64 | Uint64;\n\n/** @ignore */\nconst setDateDay         = <T extends DateDay>        ({ values         }: VectorType<T>, index: number, value: T['TValue']): void => { setEpochMsToDays(values, index, value.valueOf()); };\n/** @ignore */\nconst setDateMillisecond = <T extends DateMillisecond>({ values         }: VectorType<T>, index: number, value: T['TValue']): void => { setEpochMsToMillisecondsLong(values, index * 2, value.valueOf()); };\n/** @ignore */\nconst setNumeric         = <T extends Numeric1X>      ({ stride, values }: VectorType<T>, index: number, value: T['TValue']): void => { values[stride * index] = value; };\n/** @ignore */\nconst setFloat16         = <T extends Float16>        ({ stride, values }: VectorType<T>, index: number, value: T['TValue']): void => { values[stride * index] = float64ToUint16(value); };\n/** @ignore */\nconst setNumericX2       = <T extends Numeric2X>      (vector: VectorType<T>, index: number, value: T['TValue']): void => {\n    switch (typeof value) {\n        case 'bigint': vector.values64[index] = value; break;\n        case 'number': vector.values[index * vector.stride] = value; break;\n        default:\n            const val = value as T['TArray'];\n            const { stride, ArrayType } = vector;\n            const long = toArrayBufferView<T['TArray']>(ArrayType, val);\n            vector.values.set(long.subarray(0, stride), stride * index);\n    }\n};\n/** @ignore */\nconst setFixedSizeBinary = <T extends FixedSizeBinary>({ stride, values }: VectorType<T>, index: number, value: T['TValue']): void => { values.set(value.subarray(0, stride), stride * index); };\n\n/** @ignore */\nconst setBinary = <T extends Binary>({ values, valueOffsets }: VectorType<T>, index: number, value: T['TValue']) => setVariableWidthBytes(values, valueOffsets, index, value);\n/** @ignore */\nconst setUtf8 = <T extends Utf8>({ values, valueOffsets }: VectorType<T>, index: number, value: T['TValue']) => {\n    setVariableWidthBytes(values, valueOffsets, index, encodeUtf8(value));\n};\n\n/* istanbul ignore next */\n/** @ignore */\nconst setInt = <T extends Int>(vector: VectorType<T>, index: number, value: T['TValue']): void => {\n    vector.type.bitWidth < 64\n        ? setNumeric(vector as VectorType<Numeric1X>, index, value as Numeric1X['TValue'])\n        : setNumericX2(vector as VectorType<Numeric2X>, index, value as Numeric2X['TValue']);\n};\n\n/* istanbul ignore next */\n/** @ignore */\nconst setFloat = <T extends Float>(vector: VectorType<T>, index: number, value: T['TValue']): void => {\n    vector.type.precision !== Precision.HALF\n        ? setNumeric(vector as VectorType<Numeric1X>, index, value)\n        : setFloat16(vector as VectorType<Float16>, index, value);\n};\n\n/* istanbul ignore next */\nconst setDate = <T extends Date_> (vector: VectorType<T>, index: number, value: T['TValue']): void => {\n    vector.type.unit === DateUnit.DAY\n        ? setDateDay(vector as VectorType<DateDay>, index, value)\n        : setDateMillisecond(vector as VectorType<DateMillisecond>, index, value);\n};\n\n/** @ignore */\nconst setTimestampSecond      = <T extends TimestampSecond>     ({ values }: VectorType<T>, index: number, value: T['TValue']): void => setEpochMsToMillisecondsLong(values, index * 2, value / 1000);\n/** @ignore */\nconst setTimestampMillisecond = <T extends TimestampMillisecond>({ values }: VectorType<T>, index: number, value: T['TValue']): void => setEpochMsToMillisecondsLong(values, index * 2, value);\n/** @ignore */\nconst setTimestampMicrosecond = <T extends TimestampMicrosecond>({ values }: VectorType<T>, index: number, value: T['TValue']): void => setEpochMsToMicrosecondsLong(values, index * 2, value);\n/** @ignore */\nconst setTimestampNanosecond  = <T extends TimestampNanosecond> ({ values }: VectorType<T>, index: number, value: T['TValue']): void => setEpochMsToNanosecondsLong(values, index * 2, value);\n/* istanbul ignore next */\n/** @ignore */\nconst setTimestamp            = <T extends Timestamp>(vector: VectorType<T>, index: number, value: T['TValue']): void => {\n    switch (vector.type.unit) {\n        case TimeUnit.SECOND:      return      setTimestampSecond(vector as VectorType<TimestampSecond>, index, value);\n        case TimeUnit.MILLISECOND: return setTimestampMillisecond(vector as VectorType<TimestampMillisecond>, index, value);\n        case TimeUnit.MICROSECOND: return setTimestampMicrosecond(vector as VectorType<TimestampMicrosecond>, index, value);\n        case TimeUnit.NANOSECOND:  return  setTimestampNanosecond(vector as VectorType<TimestampNanosecond>, index, value);\n    }\n};\n\n/** @ignore */\nconst setTimeSecond      = <T extends TimeSecond>     ({ values, stride }: VectorType<T>, index: number, value: T['TValue']): void => { values[stride * index] = value; };\n/** @ignore */\nconst setTimeMillisecond = <T extends TimeMillisecond>({ values, stride }: VectorType<T>, index: number, value: T['TValue']): void => { values[stride * index] = value; };\n/** @ignore */\nconst setTimeMicrosecond = <T extends TimeMicrosecond>({ values         }: VectorType<T>, index: number, value: T['TValue']): void => { values.set(value.subarray(0, 2), 2 * index); };\n/** @ignore */\nconst setTimeNanosecond  = <T extends TimeNanosecond> ({ values         }: VectorType<T>, index: number, value: T['TValue']): void => { values.set(value.subarray(0, 2), 2 * index); };\n/* istanbul ignore next */\n/** @ignore */\nconst setTime            = <T extends Time>(vector: VectorType<T>, index: number, value: T['TValue']): void => {\n    switch (vector.type.unit) {\n        case TimeUnit.SECOND:      return      setTimeSecond(vector as VectorType<TimeSecond>, index, value as TimeSecond['TValue']);\n        case TimeUnit.MILLISECOND: return setTimeMillisecond(vector as VectorType<TimeMillisecond>, index, value as TimeMillisecond['TValue']);\n        case TimeUnit.MICROSECOND: return setTimeMicrosecond(vector as VectorType<TimeMicrosecond>, index, value as TimeMicrosecond['TValue']);\n        case TimeUnit.NANOSECOND:  return  setTimeNanosecond(vector as VectorType<TimeNanosecond>, index, value as TimeNanosecond['TValue']);\n    }\n};\n\n/** @ignore */\nconst setDecimal = <T extends Decimal>({ values }: VectorType<T>, index: number, value: T['TValue']): void => { values.set(value.subarray(0, 4), 4 * index); };\n\n/** @ignore */\nconst setList = <T extends List>(vector: VectorType<T>, index: number, value: T['TValue']): void => {\n    const values = vector.getChildAt(0)!, valueOffsets = vector.valueOffsets;\n    for (let idx = -1, itr = valueOffsets[index], end = valueOffsets[index + 1]; itr < end;) {\n        values.set(itr++, value.get(++idx));\n    }\n};\n\n/** @ignore */\nconst setMap = <T extends Map_>(vector: VectorType<T>, index: number, value: T['TValue']) => {\n    const values = vector.getChildAt(0)!, valueOffsets = vector.valueOffsets;\n    const entries = value instanceof Map ? [...value] : Object.entries(value);\n    for (let idx = -1, itr = valueOffsets[index], end = valueOffsets[index + 1]; itr < end;) {\n        values.set(itr++, entries[++idx]);\n    }\n};\n\n/** @ignore */ const _setStructArrayValue = (o: number, v: any[]) => (c: Vector | null, _: Field, i: number) => c && c.set(o, v[i]);\n/** @ignore */ const _setStructVectorValue = (o: number, v: Vector) => (c: Vector | null, _: Field, i: number) => c && c.set(o, v.get(i));\n/** @ignore */ const _setStructMapValue = (o: number, v: Map<string, any>) => (c: Vector | null, f: Field, _: number) => c && c.set(o, v.get(f.name));\n/** @ignore */ const _setStructObjectValue = (o: number, v: { [key: string]: any }) => (c: Vector | null, f: Field, _: number) => c && c.set(o, v[f.name]);\n/** @ignore */\nconst setStruct = <T extends Struct>(vector: VectorType<T>, index: number, value: T['TValue']) => {\n\n    const setValue = value instanceof Map    ? _setStructMapValue(index, value)    :\n                     value instanceof Vector ? _setStructVectorValue(index, value) :\n                     Array.isArray(value)    ? _setStructArrayValue(index, value)  :\n                                               _setStructObjectValue(index, value) ;\n\n    vector.type.children.forEach((f: Field, i: number) => setValue(vector.getChildAt(i), f, i));\n};\n\n/* istanbul ignore next */\n/** @ignore */\nconst setUnion = <\n    V extends VectorType<Union> | VectorType<DenseUnion> | VectorType<SparseUnion>\n>(vector: V, index: number, value: V['TValue']) => {\n    vector.type.mode === UnionMode.Dense ?\n        setDenseUnion(vector as VectorType<DenseUnion>, index, value) :\n        setSparseUnion(vector as VectorType<SparseUnion>, index, value);\n};\n\n/** @ignore */\nconst setDenseUnion = <T extends DenseUnion>(vector: VectorType<T>, index: number, value: T['TValue']): void => {\n    const childIndex = vector.typeIdToChildIndex[vector.typeIds[index]];\n    const child = vector.getChildAt(childIndex);\n    child && child.set(vector.valueOffsets[index], value);\n};\n\n/** @ignore */\nconst setSparseUnion = <T extends SparseUnion>(vector: VectorType<T>, index: number, value: T['TValue']): void => {\n    const childIndex = vector.typeIdToChildIndex[vector.typeIds[index]];\n    const child = vector.getChildAt(childIndex);\n    child && child.set(index, value);\n};\n\n/** @ignore */\nconst setDictionary = <T extends Dictionary>(vector: VectorType<T>, index: number, value: T['TValue']): void => {\n    const key = vector.getKey(index);\n    if (key !== null) {\n        vector.setValue(key, value);\n    }\n};\n\n/* istanbul ignore next */\n/** @ignore */\nconst setIntervalValue = <T extends Interval>(vector: VectorType<T>, index: number, value: T['TValue']): void => {\n    (vector.type.unit === IntervalUnit.DAY_TIME)\n        ? setIntervalDayTime(vector as VectorType<IntervalDayTime>, index, value)\n        : setIntervalYearMonth(vector as VectorType<IntervalYearMonth>, index, value);\n};\n\n/** @ignore */\nconst setIntervalDayTime = <T extends IntervalDayTime>({ values }: VectorType<T>, index: number, value: T['TValue']): void => { values.set(value.subarray(0, 2), 2 * index); };\n/** @ignore */\nconst setIntervalYearMonth = <T extends IntervalYearMonth>({ values }: VectorType<T>, index: number, value: T['TValue']): void => { values[index] = (value[0] * 12) + (value[1] % 12); };\n\n/** @ignore */\nconst setFixedSizeList = <T extends FixedSizeList>(vector: VectorType<T>, index: number, value: T['TValue']): void => {\n    const child = vector.getChildAt(0)!, { stride } = vector;\n    for (let idx = -1, offset = index * stride; ++idx < stride;) {\n        child.set(offset + idx, value.get(idx));\n    }\n};\n\nSetVisitor.prototype.visitBool                 =                 setBool;\nSetVisitor.prototype.visitInt                  =                  setInt;\nSetVisitor.prototype.visitInt8                 =              setNumeric;\nSetVisitor.prototype.visitInt16                =              setNumeric;\nSetVisitor.prototype.visitInt32                =              setNumeric;\nSetVisitor.prototype.visitInt64                =            setNumericX2;\nSetVisitor.prototype.visitUint8                =              setNumeric;\nSetVisitor.prototype.visitUint16               =              setNumeric;\nSetVisitor.prototype.visitUint32               =              setNumeric;\nSetVisitor.prototype.visitUint64               =            setNumericX2;\nSetVisitor.prototype.visitFloat                =                setFloat;\nSetVisitor.prototype.visitFloat16              =              setFloat16;\nSetVisitor.prototype.visitFloat32              =              setNumeric;\nSetVisitor.prototype.visitFloat64              =              setNumeric;\nSetVisitor.prototype.visitUtf8                 =                 setUtf8;\nSetVisitor.prototype.visitBinary               =               setBinary;\nSetVisitor.prototype.visitFixedSizeBinary      =      setFixedSizeBinary;\nSetVisitor.prototype.visitDate                 =                 setDate;\nSetVisitor.prototype.visitDateDay              =              setDateDay;\nSetVisitor.prototype.visitDateMillisecond      =      setDateMillisecond;\nSetVisitor.prototype.visitTimestamp            =            setTimestamp;\nSetVisitor.prototype.visitTimestampSecond      =      setTimestampSecond;\nSetVisitor.prototype.visitTimestampMillisecond = setTimestampMillisecond;\nSetVisitor.prototype.visitTimestampMicrosecond = setTimestampMicrosecond;\nSetVisitor.prototype.visitTimestampNanosecond  =  setTimestampNanosecond;\nSetVisitor.prototype.visitTime                 =                 setTime;\nSetVisitor.prototype.visitTimeSecond           =           setTimeSecond;\nSetVisitor.prototype.visitTimeMillisecond      =      setTimeMillisecond;\nSetVisitor.prototype.visitTimeMicrosecond      =      setTimeMicrosecond;\nSetVisitor.prototype.visitTimeNanosecond       =       setTimeNanosecond;\nSetVisitor.prototype.visitDecimal              =              setDecimal;\nSetVisitor.prototype.visitList                 =                 setList;\nSetVisitor.prototype.visitStruct               =               setStruct;\nSetVisitor.prototype.visitUnion                =                setUnion;\nSetVisitor.prototype.visitDenseUnion           =           setDenseUnion;\nSetVisitor.prototype.visitSparseUnion          =          setSparseUnion;\nSetVisitor.prototype.visitDictionary           =           setDictionary;\nSetVisitor.prototype.visitInterval             =        setIntervalValue;\nSetVisitor.prototype.visitIntervalDayTime      =      setIntervalDayTime;\nSetVisitor.prototype.visitIntervalYearMonth    =    setIntervalYearMonth;\nSetVisitor.prototype.visitFixedSizeList        =        setFixedSizeList;\nSetVisitor.prototype.visitMap                  =                  setMap;\n\n/** @ignore */\nexport const instance = new SetVisitor();\n","// automatically generated by the FlatBuffers compiler, do not modify\n\nimport { flatbuffers } from 'flatbuffers';\nimport * as NS7624605610262437867 from './Schema';\n/**\n * ----------------------------------------------------------------------\n * Arrow File metadata\n *\n *\n * @constructor\n */\nexport namespace org.apache.arrow.flatbuf {\n    export class Footer {\n        bb: flatbuffers.ByteBuffer | null = null;\n\n        bb_pos: number = 0;\n        /**\n         * @param number i\n         * @param flatbuffers.ByteBuffer bb\n         * @returns Footer\n         */\n        __init(i: number, bb: flatbuffers.ByteBuffer): Footer {\n            this.bb_pos = i;\n            this.bb = bb;\n            return this;\n        }\n\n        /**\n         * @param flatbuffers.ByteBuffer bb\n         * @param Footer= obj\n         * @returns Footer\n         */\n        static getRootAsFooter(bb: flatbuffers.ByteBuffer, obj?: Footer): Footer {\n            return (obj || new Footer).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n        }\n\n        /**\n         * @returns org.apache.arrow.flatbuf.MetadataVersion\n         */\n        version(): NS7624605610262437867.org.apache.arrow.flatbuf.MetadataVersion {\n            let offset = this.bb!.__offset(this.bb_pos, 4);\n            return offset ? /**  */ (this.bb!.readInt16(this.bb_pos + offset)) : NS7624605610262437867.org.apache.arrow.flatbuf.MetadataVersion.V1;\n        }\n\n        /**\n         * @param org.apache.arrow.flatbuf.Schema= obj\n         * @returns org.apache.arrow.flatbuf.Schema|null\n         */\n        schema(obj?: NS7624605610262437867.org.apache.arrow.flatbuf.Schema): NS7624605610262437867.org.apache.arrow.flatbuf.Schema | null {\n            let offset = this.bb!.__offset(this.bb_pos, 6);\n            return offset ? (obj || new NS7624605610262437867.org.apache.arrow.flatbuf.Schema).__init(this.bb!.__indirect(this.bb_pos + offset), this.bb!) : null;\n        }\n\n        /**\n         * @param number index\n         * @param org.apache.arrow.flatbuf.Block= obj\n         * @returns org.apache.arrow.flatbuf.Block\n         */\n        dictionaries(index: number, obj?: org.apache.arrow.flatbuf.Block): org.apache.arrow.flatbuf.Block | null {\n            let offset = this.bb!.__offset(this.bb_pos, 8);\n            return offset ? (obj || new org.apache.arrow.flatbuf.Block).__init(this.bb!.__vector(this.bb_pos + offset) + index * 24, this.bb!) : null;\n        }\n\n        /**\n         * @returns number\n         */\n        dictionariesLength(): number {\n            let offset = this.bb!.__offset(this.bb_pos, 8);\n            return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\n        }\n\n        /**\n         * @param number index\n         * @param org.apache.arrow.flatbuf.Block= obj\n         * @returns org.apache.arrow.flatbuf.Block\n         */\n        recordBatches(index: number, obj?: org.apache.arrow.flatbuf.Block): org.apache.arrow.flatbuf.Block | null {\n            let offset = this.bb!.__offset(this.bb_pos, 10);\n            return offset ? (obj || new org.apache.arrow.flatbuf.Block).__init(this.bb!.__vector(this.bb_pos + offset) + index * 24, this.bb!) : null;\n        }\n\n        /**\n         * @returns number\n         */\n        recordBatchesLength(): number {\n            let offset = this.bb!.__offset(this.bb_pos, 10);\n            return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         */\n        static startFooter(builder: flatbuffers.Builder) {\n            builder.startObject(4);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param org.apache.arrow.flatbuf.MetadataVersion version\n         */\n        static addVersion(builder: flatbuffers.Builder, version: NS7624605610262437867.org.apache.arrow.flatbuf.MetadataVersion) {\n            builder.addFieldInt16(0, version, NS7624605610262437867.org.apache.arrow.flatbuf.MetadataVersion.V1);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param flatbuffers.Offset schemaOffset\n         */\n        static addSchema(builder: flatbuffers.Builder, schemaOffset: flatbuffers.Offset) {\n            builder.addFieldOffset(1, schemaOffset, 0);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param flatbuffers.Offset dictionariesOffset\n         */\n        static addDictionaries(builder: flatbuffers.Builder, dictionariesOffset: flatbuffers.Offset) {\n            builder.addFieldOffset(2, dictionariesOffset, 0);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param number numElems\n         */\n        static startDictionariesVector(builder: flatbuffers.Builder, numElems: number) {\n            builder.startVector(24, numElems, 8);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param flatbuffers.Offset recordBatchesOffset\n         */\n        static addRecordBatches(builder: flatbuffers.Builder, recordBatchesOffset: flatbuffers.Offset) {\n            builder.addFieldOffset(3, recordBatchesOffset, 0);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param number numElems\n         */\n        static startRecordBatchesVector(builder: flatbuffers.Builder, numElems: number) {\n            builder.startVector(24, numElems, 8);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @returns flatbuffers.Offset\n         */\n        static endFooter(builder: flatbuffers.Builder): flatbuffers.Offset {\n            let offset = builder.endObject();\n            return offset;\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param flatbuffers.Offset offset\n         */\n        static finishFooterBuffer(builder: flatbuffers.Builder, offset: flatbuffers.Offset) {\n            builder.finish(offset);\n        }\n\n        static createFooter(builder: flatbuffers.Builder, version: NS7624605610262437867.org.apache.arrow.flatbuf.MetadataVersion, schemaOffset: flatbuffers.Offset, dictionariesOffset: flatbuffers.Offset, recordBatchesOffset: flatbuffers.Offset): flatbuffers.Offset {\n            Footer.startFooter(builder);\n            Footer.addVersion(builder, version);\n            Footer.addSchema(builder, schemaOffset);\n            Footer.addDictionaries(builder, dictionariesOffset);\n            Footer.addRecordBatches(builder, recordBatchesOffset);\n            return Footer.endFooter(builder);\n        }\n    }\n}\n/**\n * @constructor\n */\nexport namespace org.apache.arrow.flatbuf {\n    export class Block {\n        bb: flatbuffers.ByteBuffer | null = null;\n\n        bb_pos: number = 0;\n        /**\n         * @param number i\n         * @param flatbuffers.ByteBuffer bb\n         * @returns Block\n         */\n        __init(i: number, bb: flatbuffers.ByteBuffer): Block {\n            this.bb_pos = i;\n            this.bb = bb;\n            return this;\n        }\n\n        /**\n         * Index to the start of the RecordBlock (note this is past the Message header)\n         *\n         * @returns flatbuffers.Long\n         */\n        offset(): flatbuffers.Long {\n            return this.bb!.readInt64(this.bb_pos);\n        }\n\n        /**\n         * Length of the metadata\n         *\n         * @returns number\n         */\n        metaDataLength(): number {\n            return this.bb!.readInt32(this.bb_pos + 8);\n        }\n\n        /**\n         * Length of the data (this is aligned so there can be a gap between this and\n         * the metatdata).\n         *\n         * @returns flatbuffers.Long\n         */\n        bodyLength(): flatbuffers.Long {\n            return this.bb!.readInt64(this.bb_pos + 16);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param flatbuffers.Long offset\n         * @param number metaDataLength\n         * @param flatbuffers.Long bodyLength\n         * @returns flatbuffers.Offset\n         */\n        static createBlock(builder: flatbuffers.Builder, offset: flatbuffers.Long, metaDataLength: number, bodyLength: flatbuffers.Long): flatbuffers.Offset {\n            builder.prep(8, 24);\n            builder.writeInt64(bodyLength);\n            builder.pad(4);\n            builder.writeInt32(metaDataLength);\n            builder.writeInt64(offset);\n            return builder.offset();\n        }\n\n    }\n}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { Data } from '../data';\nimport { Type } from '../enum';\nimport { DataType } from '../type';\nimport { Visitor } from '../visitor';\nimport { VectorType, BuilderCtor } from '../interfaces';\nimport { BinaryBuilder } from '../builder/binary';\nimport { BoolBuilder } from '../builder/bool';\nimport { DateBuilder, DateDayBuilder, DateMillisecondBuilder } from '../builder/date';\nimport { DecimalBuilder } from '../builder/decimal';\nimport { DictionaryBuilder } from '../builder/dictionary';\nimport { FixedSizeBinaryBuilder } from '../builder/fixedsizebinary';\nimport { FixedSizeListBuilder } from '../builder/fixedsizelist';\nimport { FloatBuilder, Float16Builder, Float32Builder, Float64Builder } from '../builder/float';\nimport { IntervalBuilder, IntervalDayTimeBuilder, IntervalYearMonthBuilder } from '../builder/interval';\nimport { IntBuilder, Int8Builder, Int16Builder, Int32Builder, Int64Builder, Uint8Builder, Uint16Builder, Uint32Builder, Uint64Builder } from '../builder/int';\nimport { ListBuilder } from '../builder/list';\nimport { MapBuilder } from '../builder/map';\nimport { NullBuilder } from '../builder/null';\nimport { StructBuilder } from '../builder/struct';\nimport { TimestampBuilder, TimestampSecondBuilder, TimestampMillisecondBuilder, TimestampMicrosecondBuilder, TimestampNanosecondBuilder } from '../builder/timestamp';\nimport { TimeBuilder, TimeSecondBuilder, TimeMillisecondBuilder, TimeMicrosecondBuilder, TimeNanosecondBuilder } from '../builder/time';\nimport { UnionBuilder, DenseUnionBuilder, SparseUnionBuilder } from '../builder/union';\nimport { Utf8Builder } from '../builder/utf8';\n\n/** @ignore */\nexport interface GetBuilderCtor extends Visitor {\n    visit<T extends Type>(type: T): BuilderCtor<T>;\n    visitMany<T extends Type>(types: T[]): BuilderCtor<T>[];\n    getVisitFn<T extends Type>(type: T): () => BuilderCtor<T>;\n    getVisitFn<T extends DataType>(node: VectorType<T> | Data<T> | T): () => BuilderCtor<T>;\n}\n\n/** @ignore */\nexport class GetBuilderCtor extends Visitor {\n    public visitNull                 () { return NullBuilder;                 }\n    public visitBool                 () { return BoolBuilder;                 }\n    public visitInt                  () { return IntBuilder;                  }\n    public visitInt8                 () { return Int8Builder;                 }\n    public visitInt16                () { return Int16Builder;                }\n    public visitInt32                () { return Int32Builder;                }\n    public visitInt64                () { return Int64Builder;                }\n    public visitUint8                () { return Uint8Builder;                }\n    public visitUint16               () { return Uint16Builder;               }\n    public visitUint32               () { return Uint32Builder;               }\n    public visitUint64               () { return Uint64Builder;               }\n    public visitFloat                () { return FloatBuilder;                }\n    public visitFloat16              () { return Float16Builder;              }\n    public visitFloat32              () { return Float32Builder;              }\n    public visitFloat64              () { return Float64Builder;              }\n    public visitUtf8                 () { return Utf8Builder;                 }\n    public visitBinary               () { return BinaryBuilder;               }\n    public visitFixedSizeBinary      () { return FixedSizeBinaryBuilder;      }\n    public visitDate                 () { return DateBuilder;                 }\n    public visitDateDay              () { return DateDayBuilder;              }\n    public visitDateMillisecond      () { return DateMillisecondBuilder;      }\n    public visitTimestamp            () { return TimestampBuilder;            }\n    public visitTimestampSecond      () { return TimestampSecondBuilder;      }\n    public visitTimestampMillisecond () { return TimestampMillisecondBuilder; }\n    public visitTimestampMicrosecond () { return TimestampMicrosecondBuilder; }\n    public visitTimestampNanosecond  () { return TimestampNanosecondBuilder;  }\n    public visitTime                 () { return TimeBuilder;                 }\n    public visitTimeSecond           () { return TimeSecondBuilder;           }\n    public visitTimeMillisecond      () { return TimeMillisecondBuilder;      }\n    public visitTimeMicrosecond      () { return TimeMicrosecondBuilder;      }\n    public visitTimeNanosecond       () { return TimeNanosecondBuilder;       }\n    public visitDecimal              () { return DecimalBuilder;              }\n    public visitList                 () { return ListBuilder;                 }\n    public visitStruct               () { return StructBuilder;               }\n    public visitUnion                () { return UnionBuilder;                }\n    public visitDenseUnion           () { return DenseUnionBuilder;           }\n    public visitSparseUnion          () { return SparseUnionBuilder;          }\n    public visitDictionary           () { return DictionaryBuilder;           }\n    public visitInterval             () { return IntervalBuilder;             }\n    public visitIntervalDayTime      () { return IntervalDayTimeBuilder;      }\n    public visitIntervalYearMonth    () { return IntervalYearMonthBuilder;    }\n    public visitFixedSizeList        () { return FixedSizeListBuilder;        }\n    public visitMap                  () { return MapBuilder;                  }\n}\n\n/** @ignore */\nexport const instance = new GetBuilderCtor();\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\n/** @ignore */\nexport { Builder, BuilderOptions } from '../builder';\nexport { BoolBuilder } from './bool';\nexport { NullBuilder } from './null';\nexport { DateBuilder, DateDayBuilder, DateMillisecondBuilder } from './date';\nexport { DecimalBuilder } from './decimal';\nexport { DictionaryBuilder } from './dictionary';\nexport { FixedSizeBinaryBuilder } from './fixedsizebinary';\nexport { FloatBuilder, Float16Builder, Float32Builder, Float64Builder } from './float';\nexport { IntBuilder, Int8Builder, Int16Builder, Int32Builder, Int64Builder, Uint8Builder, Uint16Builder, Uint32Builder, Uint64Builder } from './int';\nexport { TimeBuilder, TimeSecondBuilder, TimeMillisecondBuilder, TimeMicrosecondBuilder, TimeNanosecondBuilder } from './time';\nexport { TimestampBuilder, TimestampSecondBuilder, TimestampMillisecondBuilder, TimestampMicrosecondBuilder, TimestampNanosecondBuilder } from './timestamp';\nexport { IntervalBuilder, IntervalDayTimeBuilder, IntervalYearMonthBuilder } from './interval';\nexport { Utf8Builder } from './utf8';\nexport { BinaryBuilder } from './binary';\nexport { ListBuilder } from './list';\nexport { FixedSizeListBuilder } from './fixedsizelist';\nexport { MapBuilder } from './map';\nexport { StructBuilder } from './struct';\nexport { UnionBuilder, SparseUnionBuilder, DenseUnionBuilder } from './union';\n\nimport { Type } from '../enum';\nimport { Field } from '../schema';\nimport { DataType } from '../type';\nimport { Utf8Builder } from './utf8';\nimport { BuilderType as B } from '../interfaces';\nimport { Builder, BuilderOptions } from '../builder';\nimport { instance as setVisitor } from '../visitor/set';\nimport { instance as getBuilderConstructor } from '../visitor/builderctor';\n\n/** @nocollapse */\nBuilder.new = newBuilder;\n\nfunction newBuilder<T extends DataType = any, TNull = any>(options: BuilderOptions<T, TNull>): B<T, TNull> {\n\n    const type = options.type;\n    const builder = new (getBuilderConstructor.getVisitFn<T>(type)())(options) as Builder<T, TNull>;\n\n    if (type.children && type.children.length > 0) {\n\n        const children = options['children'] || [] as BuilderOptions[];\n        const defaultOptions = { 'nullValues': options['nullValues'] };\n        const getChildOptions = Array.isArray(children)\n            ? ((_: Field, i: number) => children[i] || defaultOptions)\n            : (({ name }: Field) => children[name] || defaultOptions);\n\n        type.children.forEach((field, index) => {\n            const { type } = field;\n            const opts = getChildOptions(field, index);\n            builder.children.push(newBuilder({ ...opts, type }));\n        });\n    }\n\n    return builder as B<T, TNull>;\n}\n\n(Object.keys(Type) as any[])\n    .map((T: any) => Type[T] as any)\n    .filter((T: any): T is Type => typeof T === 'number' && T !== Type.NONE)\n    .forEach((typeId) => {\n        const BuilderCtor = getBuilderConstructor.visit(typeId);\n        BuilderCtor.prototype._setValue = setVisitor.getVisitFn(typeId);\n    });\n\n(Utf8Builder.prototype as any)._setValue = setVisitor.visitBinary;\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\n/* tslint:disable:class-name */\n\nimport * as File_ from '../../fb/File';\nimport { flatbuffers } from 'flatbuffers';\n\nimport Long = flatbuffers.Long;\nimport Builder = flatbuffers.Builder;\nimport ByteBuffer = flatbuffers.ByteBuffer;\nimport _Block = File_.org.apache.arrow.flatbuf.Block;\nimport _Footer = File_.org.apache.arrow.flatbuf.Footer;\n\nimport { Schema } from '../../schema';\nimport { MetadataVersion } from '../../enum';\nimport { toUint8Array } from '../../util/buffer';\nimport { ArrayBufferViewInput } from '../../util/buffer';\n\n/** @ignore */\nclass Footer_ {\n\n    /** @nocollapse */\n    public static decode(buf: ArrayBufferViewInput) {\n        buf = new ByteBuffer(toUint8Array(buf));\n        const footer = _Footer.getRootAsFooter(buf);\n        const schema = Schema.decode(footer.schema()!);\n        return new OffHeapFooter(schema, footer) as Footer_;\n    }\n\n    /** @nocollapse */\n    public static encode(footer: Footer_) {\n\n        const b: Builder = new Builder();\n        const schemaOffset = Schema.encode(b, footer.schema);\n\n        _Footer.startRecordBatchesVector(b, footer.numRecordBatches);\n        [...footer.recordBatches()].slice().reverse().forEach((rb) => FileBlock.encode(b, rb));\n        const recordBatchesOffset = b.endVector();\n\n        _Footer.startDictionariesVector(b, footer.numDictionaries);\n        [...footer.dictionaryBatches()].slice().reverse().forEach((db) => FileBlock.encode(b, db));\n\n        const dictionaryBatchesOffset = b.endVector();\n\n        _Footer.startFooter(b);\n        _Footer.addSchema(b, schemaOffset);\n        _Footer.addVersion(b, MetadataVersion.V4);\n        _Footer.addRecordBatches(b, recordBatchesOffset);\n        _Footer.addDictionaries(b, dictionaryBatchesOffset);\n        _Footer.finishFooterBuffer(b, _Footer.endFooter(b));\n\n        return b.asUint8Array();\n    }\n\n    // @ts-ignore\n    protected _recordBatches: FileBlock[];\n    // @ts-ignore\n    protected _dictionaryBatches: FileBlock[];\n    public get numRecordBatches() { return this._recordBatches.length; }\n    public get numDictionaries() { return this._dictionaryBatches.length; }\n\n    constructor(public schema: Schema,\n                public version: MetadataVersion = MetadataVersion.V4,\n                recordBatches?: FileBlock[], dictionaryBatches?: FileBlock[]) {\n        recordBatches && (this._recordBatches = recordBatches);\n        dictionaryBatches && (this._dictionaryBatches = dictionaryBatches);\n    }\n\n    public *recordBatches(): Iterable<FileBlock> {\n        for (let block, i = -1, n = this.numRecordBatches; ++i < n;) {\n            if (block = this.getRecordBatch(i)) { yield block; }\n        }\n    }\n\n    public *dictionaryBatches(): Iterable<FileBlock> {\n        for (let block, i = -1, n = this.numDictionaries; ++i < n;) {\n            if (block = this.getDictionaryBatch(i)) { yield block; }\n        }\n    }\n\n    public getRecordBatch(index: number) {\n        return index >= 0\n            && index < this.numRecordBatches\n            && this._recordBatches[index] || null;\n    }\n\n    public getDictionaryBatch(index: number) {\n        return index >= 0\n            && index < this.numDictionaries\n            && this._dictionaryBatches[index] || null;\n    }\n}\n\nexport { Footer_ as Footer };\n\n/** @ignore */\nclass OffHeapFooter extends Footer_ {\n\n    public get numRecordBatches() { return this._footer.recordBatchesLength(); }\n    public get numDictionaries() { return this._footer.dictionariesLength(); }\n\n    constructor(schema: Schema, protected _footer: _Footer) {\n        super(schema, _footer.version());\n    }\n\n    public getRecordBatch(index: number) {\n        if (index >= 0 && index < this.numRecordBatches) {\n            const fileBlock = this._footer.recordBatches(index);\n            if (fileBlock) { return FileBlock.decode(fileBlock); }\n        }\n        return null;\n    }\n\n    public getDictionaryBatch(index: number) {\n        if (index >= 0 && index < this.numDictionaries) {\n            const fileBlock = this._footer.dictionaries(index);\n            if (fileBlock) { return FileBlock.decode(fileBlock); }\n        }\n        return null;\n    }\n}\n\n/** @ignore */\nexport class FileBlock {\n\n    /** @nocollapse */\n    public static decode(block: _Block) {\n        return new FileBlock(block.metaDataLength(), block.bodyLength(), block.offset());\n    }\n\n    /** @nocollapse */\n    public static encode(b: Builder, fileBlock: FileBlock) {\n        const { metaDataLength } = fileBlock;\n        const offset = new Long(fileBlock.offset, 0);\n        const bodyLength = new Long(fileBlock.bodyLength, 0);\n        return _Block.createBlock(b, offset, metaDataLength, bodyLength);\n    }\n\n    public offset: number;\n    public bodyLength: number;\n    public metaDataLength: number;\n\n    constructor(metaDataLength: number, bodyLength: Long | number, offset: Long | number) {\n        this.metaDataLength = metaDataLength;\n        this.offset = typeof offset === 'number' ? offset : offset.low;\n        this.bodyLength = typeof bodyLength === 'number' ? bodyLength : bodyLength.low;\n    }\n}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport streamAdapters from './adapters';\nimport { decodeUtf8 } from '../util/utf8';\nimport { ITERATOR_DONE, Readable, Writable, AsyncQueue } from './interfaces';\nimport { toUint8Array, joinUint8Arrays, ArrayBufferViewInput } from '../util/buffer';\n\nimport {\n    isPromise, isFetchResponse,\n    isIterable, isAsyncIterable,\n    isReadableDOMStream, isReadableNodeStream\n} from '../util/compat';\n\n/** @ignore */\nexport type WritableSink<T> = Writable<T> | WritableStream<T> | NodeJS.WritableStream | null;\n/** @ignore */\nexport type ReadableSource<T> = Readable<T> | PromiseLike<T> | AsyncIterable<T> | ReadableStream<T> | NodeJS.ReadableStream | null;\n\n/** @ignore */\nexport class AsyncByteQueue<T extends ArrayBufferViewInput = Uint8Array> extends AsyncQueue<Uint8Array, T> {\n    public write(value: ArrayBufferViewInput | Uint8Array) {\n        if ((value = toUint8Array(value)).byteLength > 0) {\n            return super.write(value as T);\n        }\n    }\n    public toString(sync: true): string;\n    public toString(sync?: false): Promise<string>;\n    public toString(sync = false) {\n        return sync\n            ? decodeUtf8(this.toUint8Array(true))\n            : this.toUint8Array(false).then(decodeUtf8);\n    }\n    public toUint8Array(sync: true): Uint8Array;\n    public toUint8Array(sync?: false): Promise<Uint8Array>;\n    public toUint8Array(sync = false) {\n        return sync ? joinUint8Arrays(this._values as any[])[0] : (async () => {\n            let buffers = [], byteLength = 0;\n            for await (const chunk of this) {\n                buffers.push(chunk);\n                byteLength += chunk.byteLength;\n            }\n            return joinUint8Arrays(buffers, byteLength)[0];\n        })();\n    }\n}\n\n/** @ignore */\nexport class ByteStream implements IterableIterator<Uint8Array> {\n    // @ts-ignore\n    private source: ByteStreamSource<Uint8Array>;\n    constructor(source?: Iterable<ArrayBufferViewInput> | ArrayBufferViewInput) {\n        if (source) {\n            this.source = new ByteStreamSource(streamAdapters.fromIterable(source));\n        }\n    }\n    [Symbol.iterator]() { return this; }\n    public next(value?: any) { return this.source.next(value); }\n    public throw(value?: any) { return this.source.throw(value); }\n    public return(value?: any) { return this.source.return(value); }\n    public peek(size?: number | null) { return this.source.peek(size); }\n    public read(size?: number | null) { return this.source.read(size); }\n}\n\n/** @ignore */\nexport class AsyncByteStream implements Readable<Uint8Array>, AsyncIterableIterator<Uint8Array> {\n    // @ts-ignore\n    private source: AsyncByteStreamSource<Uint8Array>;\n    constructor(source?: PromiseLike<ArrayBufferViewInput> | Response | ReadableStream<ArrayBufferViewInput> | NodeJS.ReadableStream | AsyncIterable<ArrayBufferViewInput> | Iterable<ArrayBufferViewInput>) {\n        if (source instanceof AsyncByteStream) {\n            this.source = (source as AsyncByteStream).source;\n        } else if (source instanceof AsyncByteQueue) {\n            this.source = new AsyncByteStreamSource(streamAdapters.fromAsyncIterable(source));\n        } else if (isReadableNodeStream(source)) {\n            this.source = new AsyncByteStreamSource(streamAdapters.fromNodeStream(source));\n        } else if (isReadableDOMStream<ArrayBufferViewInput>(source)) {\n            this.source = new AsyncByteStreamSource(streamAdapters.fromDOMStream(source));\n        } else if (isFetchResponse(source)) {\n            this.source = new AsyncByteStreamSource(streamAdapters.fromDOMStream(source.body!));\n        } else if (isIterable<ArrayBufferViewInput>(source)) {\n            this.source = new AsyncByteStreamSource(streamAdapters.fromIterable(source));\n        } else if (isPromise<ArrayBufferViewInput>(source)) {\n            this.source = new AsyncByteStreamSource(streamAdapters.fromAsyncIterable(source));\n        } else if (isAsyncIterable<ArrayBufferViewInput>(source)) {\n            this.source = new AsyncByteStreamSource(streamAdapters.fromAsyncIterable(source));\n        }\n    }\n    [Symbol.asyncIterator]() { return this; }\n    public next(value?: any) { return this.source.next(value); }\n    public throw(value?: any) { return this.source.throw(value); }\n    public return(value?: any) { return this.source.return(value); }\n    public get closed(): Promise<void> { return this.source.closed; }\n    public cancel(reason?: any) { return this.source.cancel(reason); }\n    public peek(size?: number | null) { return this.source.peek(size); }\n    public read(size?: number | null) { return this.source.read(size); }\n}\n\n/** @ignore */\ninterface ByteStreamSourceIterator<T> extends IterableIterator<T> {\n    next(value?: { cmd: 'peek' | 'read', size?: number | null }): IteratorResult<T>;\n}\n\n/** @ignore */\ninterface AsyncByteStreamSourceIterator<T> extends AsyncIterableIterator<T> {\n    next(value?: { cmd: 'peek' | 'read', size?: number | null }): Promise<IteratorResult<T>>;\n}\n\n/** @ignore */\nclass ByteStreamSource<T> {\n    constructor(protected source: ByteStreamSourceIterator<T>) {}\n    public cancel(reason?: any) { this.return(reason); }\n    public peek(size?: number | null): T | null { return this.next(size, 'peek').value; }\n    public read(size?: number | null): T | null { return this.next(size, 'read').value; }\n    public next(size?: number | null, cmd: 'peek' | 'read' = 'read') { return this.source.next({ cmd, size }); }\n    public throw(value?: any) { return Object.create((this.source.throw && this.source.throw(value)) || ITERATOR_DONE); }\n    public return(value?: any) { return Object.create((this.source.return && this.source.return(value)) || ITERATOR_DONE); }\n}\n\n/** @ignore */\nclass AsyncByteStreamSource<T> implements Readable<T> {\n\n    private _closedPromise: Promise<void>;\n    private _closedPromiseResolve?: (value?: any) => void;\n    constructor (protected source: ByteStreamSourceIterator<T> | AsyncByteStreamSourceIterator<T>) {\n        this._closedPromise = new Promise((r) => this._closedPromiseResolve = r);\n    }\n    public async cancel(reason?: any) { await this.return(reason); }\n    public get closed(): Promise<void> { return this._closedPromise; }\n    public async read(size?: number | null): Promise<T | null> { return (await this.next(size, 'read')).value; }\n    public async peek(size?: number | null): Promise<T | null> { return (await this.next(size, 'peek')).value; }\n    public async next(size?: number | null, cmd: 'peek' | 'read' = 'read') { return (await this.source.next({ cmd, size })); }\n    public async throw(value?: any) {\n        const result = (this.source.throw && await this.source.throw(value)) || ITERATOR_DONE;\n        this._closedPromiseResolve && this._closedPromiseResolve();\n        this._closedPromiseResolve = undefined;\n        return Object.create(result);\n    }\n    public async return(value?: any) {\n        const result = (this.source.return && await this.source.return(value)) || ITERATOR_DONE;\n        this._closedPromiseResolve && this._closedPromiseResolve();\n        this._closedPromiseResolve = undefined;\n        return Object.create(result);\n    }\n}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { FileHandle } from './interfaces';\nimport { ByteStream, AsyncByteStream } from './stream';\nimport { ArrayBufferViewInput, toUint8Array } from '../util/buffer';\n\n/** @ignore */\nexport class RandomAccessFile extends ByteStream {\n    public size: number;\n    public position: number = 0;\n    protected buffer: Uint8Array | null;\n    constructor(buffer: ArrayBufferViewInput, byteLength?: number) {\n        super();\n        this.buffer = toUint8Array(buffer);\n        this.size = typeof byteLength === 'undefined' ? this.buffer.byteLength : byteLength;\n    }\n    public readInt32(position: number) {\n        const { buffer, byteOffset } = this.readAt(position, 4);\n        return new DataView(buffer, byteOffset).getInt32(0, true);\n    }\n    public seek(position: number) {\n        this.position = Math.min(position, this.size);\n        return position < this.size;\n    }\n    public read(nBytes?: number | null) {\n        const { buffer, size, position } = this;\n        if (buffer && position < size) {\n            if (typeof nBytes !== 'number') { nBytes = Infinity; }\n            this.position = Math.min(size,\n                 position + Math.min(size - position, nBytes));\n            return buffer.subarray(position, this.position);\n        }\n        return null;\n    }\n    public readAt(position: number, nBytes: number) {\n        const buf = this.buffer;\n        const end = Math.min(this.size, position + nBytes);\n        return buf ? buf.subarray(position, end) : new Uint8Array(nBytes);\n    }\n    public close() { this.buffer && (this.buffer = null); }\n    public throw(value?: any) { this.close(); return { done: true, value }; }\n    public return(value?: any) { this.close(); return { done: true, value }; }\n}\n\n/** @ignore */\nexport class AsyncRandomAccessFile extends AsyncByteStream {\n    // @ts-ignore\n    public size: number;\n    public position: number = 0;\n    public _pending?: Promise<void>;\n    protected _handle: FileHandle | null;\n    constructor(file: FileHandle, byteLength?: number) {\n        super();\n        this._handle = file;\n        if (typeof byteLength === 'number') {\n            this.size = byteLength;\n        } else {\n            this._pending = (async () => {\n                this.size = (await file.stat()).size;\n                delete this._pending;\n            })();\n        }\n    }\n    public async readInt32(position: number) {\n        const { buffer, byteOffset } = await this.readAt(position, 4);\n        return new DataView(buffer, byteOffset).getInt32(0, true);\n    }\n    public async seek(position: number) {\n        this._pending && await this._pending;\n        this.position = Math.min(position, this.size);\n        return position < this.size;\n    }\n    public async read(nBytes?: number | null) {\n        this._pending && await this._pending;\n        const { _handle: file, size, position } = this;\n        if (file && position < size) {\n            if (typeof nBytes !== 'number') { nBytes = Infinity; }\n            let pos = position, offset = 0, bytesRead = 0;\n            let end = Math.min(size, pos + Math.min(size - pos, nBytes));\n            let buffer = new Uint8Array(Math.max(0, (this.position = end) - pos));\n            while ((pos += bytesRead) < end && (offset += bytesRead) < buffer.byteLength) {\n                ({ bytesRead } = await file.read(buffer, offset, buffer.byteLength - offset, pos));\n            }\n            return buffer;\n        }\n        return null;\n    }\n    public async readAt(position: number, nBytes: number) {\n        this._pending && await this._pending;\n        const { _handle: file, size } = this;\n        if (file && (position + nBytes) < size) {\n            const end = Math.min(size, position + nBytes);\n            const buffer = new Uint8Array(end - position);\n            return (await file.read(buffer, 0, nBytes, position)).buffer;\n        }\n        return new Uint8Array(nBytes);\n    }\n    public async close() { const f = this._handle; this._handle = null; f && await f.close(); }\n    public async throw(value?: any) { await this.close(); return { done: true, value }; }\n    public async return(value?: any) { await this.close(); return { done: true, value }; }\n}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\n/** @ignore */\nconst carryBit16 = 1 << 16;\n\n/** @ignore */\nfunction intAsHex(value: number): string {\n    if (value < 0) {\n        value = 0xFFFFFFFF + value + 1;\n    }\n    return `0x${value.toString(16)}`;\n}\n\n/** @ignore */\nconst kInt32DecimalDigits = 8;\n/** @ignore */\nconst kPowersOfTen = [1,\n                      10,\n                      100,\n                      1000,\n                      10000,\n                      100000,\n                      1000000,\n                      10000000,\n                      100000000];\n\n/** @ignore */\nexport class BaseInt64 {\n    constructor (protected buffer: Uint32Array) {}\n\n    public high(): number { return this.buffer[1]; }\n    public low (): number { return this.buffer[0]; }\n\n    protected _times(other: BaseInt64) {\n        // Break the left and right numbers into 16 bit chunks\n        // so that we can multiply them without overflow.\n        const L = new Uint32Array([\n            this.buffer[1] >>> 16,\n            this.buffer[1] & 0xFFFF,\n            this.buffer[0] >>> 16,\n            this.buffer[0] & 0xFFFF\n        ]);\n\n        const R = new Uint32Array([\n            other.buffer[1] >>> 16,\n            other.buffer[1] & 0xFFFF,\n            other.buffer[0] >>> 16,\n            other.buffer[0] & 0xFFFF\n        ]);\n\n        let product = L[3] * R[3];\n        this.buffer[0] = product & 0xFFFF;\n\n        let sum = product >>> 16;\n\n        product = L[2] * R[3];\n        sum += product;\n\n        product = (L[3] * R[2]) >>> 0;\n        sum += product;\n\n        this.buffer[0] += sum << 16;\n\n        this.buffer[1] = (sum >>> 0 < product ? carryBit16 : 0);\n\n        this.buffer[1] += sum >>> 16;\n        this.buffer[1] += L[1] * R[3] + L[2] * R[2] + L[3] * R[1];\n        this.buffer[1] += (L[0] * R[3] + L[1] * R[2] + L[2] * R[1] + L[3] * R[0]) << 16;\n\n        return this;\n      }\n\n    protected _plus(other: BaseInt64) {\n        const sum = (this.buffer[0] + other.buffer[0]) >>> 0;\n        this.buffer[1] += other.buffer[1];\n        if (sum < (this.buffer[0] >>> 0)) {\n          ++this.buffer[1];\n        }\n        this.buffer[0] = sum;\n    }\n\n    public lessThan(other: BaseInt64): boolean {\n        return this.buffer[1] < other.buffer[1] ||\n            (this.buffer[1] === other.buffer[1] && this.buffer[0] < other.buffer[0]);\n    }\n\n    public equals(other: BaseInt64): boolean {\n        return this.buffer[1] === other.buffer[1] && this.buffer[0] == other.buffer[0];\n    }\n\n    public greaterThan(other: BaseInt64): boolean {\n        return other.lessThan(this);\n    }\n\n    public hex(): string {\n        return `${intAsHex(this.buffer[1])} ${intAsHex(this.buffer[0])}`;\n    }\n}\n\n/** @ignore */\nexport class Uint64 extends BaseInt64 {\n    public times(other: Uint64): Uint64 {\n        this._times(other);\n        return this;\n    }\n\n    public plus(other: Uint64): Uint64 {\n        this._plus(other);\n        return this;\n    }\n\n    /** @nocollapse */\n    public static from(val: any, out_buffer = new Uint32Array(2)): Uint64 {\n        return Uint64.fromString(\n            typeof(val) === 'string' ? val : val.toString(),\n            out_buffer\n        );\n    }\n\n    /** @nocollapse */\n    public static fromNumber(num: number, out_buffer = new Uint32Array(2)): Uint64 {\n        // Always parse numbers as strings - pulling out high and low bits\n        // directly seems to lose precision sometimes\n        // For example:\n        //     > -4613034156400212000 >>> 0\n        //     721782784\n        // The correct lower 32-bits are 721782752\n        return Uint64.fromString(num.toString(), out_buffer);\n    }\n\n    /** @nocollapse */\n    public static fromString(str: string, out_buffer = new Uint32Array(2)): Uint64 {\n        const length = str.length;\n\n        let out = new Uint64(out_buffer);\n        for (let posn = 0; posn < length;) {\n            const group = kInt32DecimalDigits < length - posn ?\n                          kInt32DecimalDigits : length - posn;\n            const chunk = new Uint64(new Uint32Array([parseInt(str.substr(posn, group), 10), 0]));\n            const multiple = new Uint64(new Uint32Array([kPowersOfTen[group], 0]));\n\n            out.times(multiple);\n            out.plus(chunk);\n\n            posn += group;\n        }\n\n        return out;\n    }\n\n    /** @nocollapse */\n    public static convertArray(values: (string|number)[]): Uint32Array {\n        const data = new Uint32Array(values.length * 2);\n        for (let i = -1, n = values.length; ++i < n;) {\n            Uint64.from(values[i], new Uint32Array(data.buffer, data.byteOffset + 2 * i * 4, 2));\n        }\n        return data;\n    }\n\n    /** @nocollapse */\n    public static multiply(left: Uint64, right: Uint64): Uint64 {\n        let rtrn = new Uint64(new Uint32Array(left.buffer));\n        return rtrn.times(right);\n    }\n\n    /** @nocollapse */\n    public static add(left: Uint64, right: Uint64): Uint64 {\n        let rtrn = new Uint64(new Uint32Array(left.buffer));\n        return rtrn.plus(right);\n    }\n}\n\n/** @ignore */\nexport class Int64 extends BaseInt64 {\n    public negate(): Int64 {\n        this.buffer[0] = ~this.buffer[0] + 1;\n        this.buffer[1] = ~this.buffer[1];\n\n        if (this.buffer[0] == 0) { ++this.buffer[1]; }\n        return this;\n    }\n\n    public times(other: Int64): Int64 {\n        this._times(other);\n        return this;\n    }\n\n    public plus(other: Int64): Int64 {\n        this._plus(other);\n        return this;\n    }\n\n    public lessThan(other: Int64): boolean {\n        // force high bytes to be signed\n        const this_high = this.buffer[1] << 0;\n        const other_high = other.buffer[1] << 0;\n        return this_high < other_high ||\n            (this_high === other_high && this.buffer[0] < other.buffer[0]);\n    }\n\n    /** @nocollapse */\n    public static from(val: any, out_buffer = new Uint32Array(2)): Int64 {\n        return Int64.fromString(\n            typeof(val) === 'string' ? val : val.toString(),\n            out_buffer\n        );\n    }\n\n    /** @nocollapse */\n    public static fromNumber(num: number, out_buffer = new Uint32Array(2)): Int64 {\n        // Always parse numbers as strings - pulling out high and low bits\n        // directly seems to lose precision sometimes\n        // For example:\n        //     > -4613034156400212000 >>> 0\n        //     721782784\n        // The correct lower 32-bits are 721782752\n        return Int64.fromString(num.toString(), out_buffer);\n    }\n\n    /** @nocollapse */\n    public static fromString(str: string, out_buffer = new Uint32Array(2)): Int64 {\n        // TODO: Assert that out_buffer is 0 and length = 2\n        const negate = str.startsWith('-');\n        const length = str.length;\n\n        let out = new Int64(out_buffer);\n        for (let posn = negate ? 1 : 0; posn < length;) {\n            const group = kInt32DecimalDigits < length - posn ?\n                          kInt32DecimalDigits : length - posn;\n            const chunk = new Int64(new Uint32Array([parseInt(str.substr(posn, group), 10), 0]));\n            const multiple = new Int64(new Uint32Array([kPowersOfTen[group], 0]));\n\n            out.times(multiple);\n            out.plus(chunk);\n\n            posn += group;\n        }\n        return negate ? out.negate() : out;\n    }\n\n    /** @nocollapse */\n    public static convertArray(values: (string|number)[]): Uint32Array {\n        const data = new Uint32Array(values.length * 2);\n        for (let i = -1, n = values.length; ++i < n;) {\n            Int64.from(values[i], new Uint32Array(data.buffer, data.byteOffset + 2 * i * 4, 2));\n        }\n        return data;\n    }\n\n    /** @nocollapse */\n    public static multiply(left: Int64, right: Int64): Int64 {\n        let rtrn = new Int64(new Uint32Array(left.buffer));\n        return rtrn.times(right);\n    }\n\n    /** @nocollapse */\n    public static add(left: Int64, right: Int64): Int64 {\n        let rtrn = new Int64(new Uint32Array(left.buffer));\n        return rtrn.plus(right);\n    }\n}\n\n/** @ignore */\nexport class Int128 {\n    constructor (private buffer: Uint32Array) {\n        // buffer[3] MSB (high)\n        // buffer[2]\n        // buffer[1]\n        // buffer[0] LSB (low)\n    }\n\n    public high(): Int64 {\n        return new Int64(new Uint32Array(this.buffer.buffer, this.buffer.byteOffset + 8, 2));\n    }\n\n    public low(): Int64 {\n        return new Int64(new Uint32Array(this.buffer.buffer, this.buffer.byteOffset, 2));\n    }\n\n    public negate(): Int128 {\n        this.buffer[0] = ~this.buffer[0] + 1;\n        this.buffer[1] = ~this.buffer[1];\n        this.buffer[2] = ~this.buffer[2];\n        this.buffer[3] = ~this.buffer[3];\n\n        if (this.buffer[0] == 0) { ++this.buffer[1]; }\n        if (this.buffer[1] == 0) { ++this.buffer[2]; }\n        if (this.buffer[2] == 0) { ++this.buffer[3]; }\n        return this;\n    }\n\n    public times(other: Int128): Int128 {\n        // Break the left and right numbers into 32 bit chunks\n        // so that we can multiply them without overflow.\n        const L0 = new Uint64(new Uint32Array([this.buffer[3],  0]));\n        const L1 = new Uint64(new Uint32Array([this.buffer[2],  0]));\n        const L2 = new Uint64(new Uint32Array([this.buffer[1],  0]));\n        const L3 = new Uint64(new Uint32Array([this.buffer[0],  0]));\n\n        const R0 = new Uint64(new Uint32Array([other.buffer[3], 0]));\n        const R1 = new Uint64(new Uint32Array([other.buffer[2], 0]));\n        const R2 = new Uint64(new Uint32Array([other.buffer[1], 0]));\n        const R3 = new Uint64(new Uint32Array([other.buffer[0], 0]));\n\n        let product = Uint64.multiply(L3, R3);\n        this.buffer[0] = product.low();\n\n        let sum = new Uint64(new Uint32Array([product.high(), 0]));\n\n        product = Uint64.multiply(L2, R3);\n        sum.plus(product);\n\n        product = Uint64.multiply(L3, R2);\n        sum.plus(product);\n\n        this.buffer[1] = sum.low();\n\n        this.buffer[3] = (sum.lessThan(product) ? 1 : 0);\n\n        this.buffer[2] = sum.high();\n        let high = new Uint64(new Uint32Array(this.buffer.buffer, this.buffer.byteOffset + 8, 2));\n\n        high.plus(Uint64.multiply(L1, R3))\n            .plus(Uint64.multiply(L2, R2))\n            .plus(Uint64.multiply(L3, R1));\n        this.buffer[3] += Uint64.multiply(L0, R3)\n                        .plus(Uint64.multiply(L1, R2))\n                        .plus(Uint64.multiply(L2, R1))\n                        .plus(Uint64.multiply(L3, R0)).low();\n\n        return this;\n    }\n\n    public plus(other: Int128): Int128 {\n        let sums = new Uint32Array(4);\n        sums[3] = (this.buffer[3] + other.buffer[3]) >>> 0;\n        sums[2] = (this.buffer[2] + other.buffer[2]) >>> 0;\n        sums[1] = (this.buffer[1] + other.buffer[1]) >>> 0;\n        sums[0] = (this.buffer[0] + other.buffer[0]) >>> 0;\n\n        if (sums[0] < (this.buffer[0] >>> 0)) {\n            ++sums[1];\n        }\n        if (sums[1] < (this.buffer[1] >>> 0)) {\n            ++sums[2];\n        }\n        if (sums[2] < (this.buffer[2] >>> 0)) {\n            ++sums[3];\n        }\n\n        this.buffer[3] = sums[3];\n        this.buffer[2] = sums[2];\n        this.buffer[1] = sums[1];\n        this.buffer[0] = sums[0];\n\n        return this;\n    }\n\n    public hex(): string {\n        return `${intAsHex(this.buffer[3])} ${intAsHex(this.buffer[2])} ${intAsHex(this.buffer[1])} ${intAsHex(this.buffer[0])}`;\n    }\n\n    /** @nocollapse */\n    public static multiply(left: Int128, right: Int128): Int128 {\n        let rtrn = new Int128(new Uint32Array(left.buffer));\n        return rtrn.times(right);\n    }\n\n    /** @nocollapse */\n    public static add(left: Int128, right: Int128): Int128 {\n        let rtrn = new Int128(new Uint32Array(left.buffer));\n        return rtrn.plus(right);\n    }\n\n    /** @nocollapse */\n    public static from(val: any, out_buffer = new Uint32Array(4)): Int128 {\n        return Int128.fromString(\n            typeof(val) === 'string' ? val : val.toString(),\n            out_buffer\n        );\n    }\n\n    /** @nocollapse */\n    public static fromNumber(num: number, out_buffer = new Uint32Array(4)): Int128 {\n        // Always parse numbers as strings - pulling out high and low bits\n        // directly seems to lose precision sometimes\n        // For example:\n        //     > -4613034156400212000 >>> 0\n        //     721782784\n        // The correct lower 32-bits are 721782752\n        return Int128.fromString(num.toString(), out_buffer);\n    }\n\n    /** @nocollapse */\n    public static fromString(str: string, out_buffer = new Uint32Array(4)): Int128 {\n        // TODO: Assert that out_buffer is 0 and length = 4\n        const negate = str.startsWith('-');\n        const length = str.length;\n\n        let out = new Int128(out_buffer);\n        for (let posn = negate ? 1 : 0; posn < length;) {\n            const group = kInt32DecimalDigits < length - posn ?\n                          kInt32DecimalDigits : length - posn;\n            const chunk = new Int128(new Uint32Array([parseInt(str.substr(posn, group), 10), 0, 0, 0]));\n            const multiple = new Int128(new Uint32Array([kPowersOfTen[group], 0, 0, 0]));\n\n            out.times(multiple);\n            out.plus(chunk);\n\n            posn += group;\n        }\n\n        return negate ? out.negate() : out;\n    }\n\n    /** @nocollapse */\n    public static convertArray(values: (string|number)[]): Uint32Array {\n        // TODO: Distinguish between string and number at compile-time\n        const data = new Uint32Array(values.length * 4);\n        for (let i = -1, n = values.length; ++i < n;) {\n            Int128.from(values[i], new Uint32Array(data.buffer, data.byteOffset + 4 * 4 * i, 4));\n        }\n        return data;\n    }\n}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { Data } from '../data';\nimport * as type from '../type';\nimport { Field } from '../schema';\nimport { Vector } from '../vector';\nimport { DataType } from '../type';\nimport { Visitor } from '../visitor';\nimport { packBools } from '../util/bit';\nimport { encodeUtf8 } from '../util/utf8';\nimport { Int64, Int128 } from '../util/int';\nimport { UnionMode, DateUnit } from '../enum';\nimport { toArrayBufferView } from '../util/buffer';\nimport { BufferRegion, FieldNode } from '../ipc/metadata/message';\n\n/** @ignore */\nexport interface VectorLoader extends Visitor {\n    visit<T extends DataType>(node: Field<T> | T): Data<T>;\n    visitMany<T extends DataType>(nodes: (Field<T> | T)[]): Data<T>[];\n}\n\n/** @ignore */\nexport class VectorLoader extends Visitor {\n    private bytes: Uint8Array;\n    private nodes: FieldNode[];\n    private nodesIndex: number = -1;\n    private buffers: BufferRegion[];\n    private buffersIndex: number = -1;\n    private dictionaries: Map<number, Vector<any>>;\n    constructor(bytes: Uint8Array, nodes: FieldNode[], buffers: BufferRegion[], dictionaries: Map<number, Vector<any>>) {\n        super();\n        this.bytes = bytes;\n        this.nodes = nodes;\n        this.buffers = buffers;\n        this.dictionaries = dictionaries;\n    }\n\n    public visit<T extends DataType>(node: Field<T> | T): Data<T> {\n        return super.visit(node instanceof Field ? node.type : node);\n    }\n\n    public visitNull            <T extends type.Null>            (type: T, { length,           } = this.nextFieldNode()) { return            Data.Null(type, 0, length);                                                                                                                                 }\n    public visitBool            <T extends type.Bool>            (type: T, { length, nullCount } = this.nextFieldNode()) { return            Data.Bool(type, 0, length, nullCount, this.readNullBitmap(type, nullCount), this.readData(type));                                                           }\n    public visitInt             <T extends type.Int>             (type: T, { length, nullCount } = this.nextFieldNode()) { return             Data.Int(type, 0, length, nullCount, this.readNullBitmap(type, nullCount), this.readData(type));                                                           }\n    public visitFloat           <T extends type.Float>           (type: T, { length, nullCount } = this.nextFieldNode()) { return           Data.Float(type, 0, length, nullCount, this.readNullBitmap(type, nullCount), this.readData(type));                                                           }\n    public visitUtf8            <T extends type.Utf8>            (type: T, { length, nullCount } = this.nextFieldNode()) { return            Data.Utf8(type, 0, length, nullCount, this.readNullBitmap(type, nullCount), this.readOffsets(type), this.readData(type));                                   }\n    public visitBinary          <T extends type.Binary>          (type: T, { length, nullCount } = this.nextFieldNode()) { return          Data.Binary(type, 0, length, nullCount, this.readNullBitmap(type, nullCount), this.readOffsets(type), this.readData(type));                                   }\n    public visitFixedSizeBinary <T extends type.FixedSizeBinary> (type: T, { length, nullCount } = this.nextFieldNode()) { return Data.FixedSizeBinary(type, 0, length, nullCount, this.readNullBitmap(type, nullCount), this.readData(type));                                                           }\n    public visitDate            <T extends type.Date_>           (type: T, { length, nullCount } = this.nextFieldNode()) { return            Data.Date(type, 0, length, nullCount, this.readNullBitmap(type, nullCount), this.readData(type));                                                           }\n    public visitTimestamp       <T extends type.Timestamp>       (type: T, { length, nullCount } = this.nextFieldNode()) { return       Data.Timestamp(type, 0, length, nullCount, this.readNullBitmap(type, nullCount), this.readData(type));                                                           }\n    public visitTime            <T extends type.Time>            (type: T, { length, nullCount } = this.nextFieldNode()) { return            Data.Time(type, 0, length, nullCount, this.readNullBitmap(type, nullCount), this.readData(type));                                                           }\n    public visitDecimal         <T extends type.Decimal>         (type: T, { length, nullCount } = this.nextFieldNode()) { return         Data.Decimal(type, 0, length, nullCount, this.readNullBitmap(type, nullCount), this.readData(type));                                                           }\n    public visitList            <T extends type.List>            (type: T, { length, nullCount } = this.nextFieldNode()) { return            Data.List(type, 0, length, nullCount, this.readNullBitmap(type, nullCount), this.readOffsets(type), this.visit(type.children[0]));                          }\n    public visitStruct          <T extends type.Struct>          (type: T, { length, nullCount } = this.nextFieldNode()) { return          Data.Struct(type, 0, length, nullCount, this.readNullBitmap(type, nullCount), this.visitMany(type.children));                                                 }\n    public visitUnion           <T extends type.Union>           (type: T                                              ) { return type.mode === UnionMode.Sparse ? this.visitSparseUnion(type as type.SparseUnion) : this.visitDenseUnion(type as type.DenseUnion);                                      }\n    public visitDenseUnion      <T extends type.DenseUnion>      (type: T, { length, nullCount } = this.nextFieldNode()) { return           Data.Union(type, 0, length, nullCount, this.readNullBitmap(type, nullCount), this.readTypeIds(type), this.readOffsets(type), this.visitMany(type.children)); }\n    public visitSparseUnion     <T extends type.SparseUnion>     (type: T, { length, nullCount } = this.nextFieldNode()) { return           Data.Union(type, 0, length, nullCount, this.readNullBitmap(type, nullCount), this.readTypeIds(type), this.visitMany(type.children));                         }\n    public visitDictionary      <T extends type.Dictionary>      (type: T, { length, nullCount } = this.nextFieldNode()) { return      Data.Dictionary(type, 0, length, nullCount, this.readNullBitmap(type, nullCount), this.readData(type.indices), this.readDictionary(type));                        }\n    public visitInterval        <T extends type.Interval>        (type: T, { length, nullCount } = this.nextFieldNode()) { return        Data.Interval(type, 0, length, nullCount, this.readNullBitmap(type, nullCount), this.readData(type));                                                           }\n    public visitFixedSizeList   <T extends type.FixedSizeList>   (type: T, { length, nullCount } = this.nextFieldNode()) { return   Data.FixedSizeList(type, 0, length, nullCount, this.readNullBitmap(type, nullCount), this.visit(type.children[0]));                                                  }\n    public visitMap             <T extends type.Map_>            (type: T, { length, nullCount } = this.nextFieldNode()) { return             Data.Map(type, 0, length, nullCount, this.readNullBitmap(type, nullCount), this.readOffsets(type), this.visit(type.children[0]));                          }\n\n    protected nextFieldNode() { return this.nodes[++this.nodesIndex]; }\n    protected nextBufferRange() { return this.buffers[++this.buffersIndex]; }\n    protected readNullBitmap<T extends DataType>(type: T, nullCount: number, buffer = this.nextBufferRange()) {\n        return nullCount > 0 && this.readData(type, buffer) || new Uint8Array(0);\n    }\n    protected readOffsets<T extends DataType>(type: T, buffer?: BufferRegion) { return this.readData(type, buffer); }\n    protected readTypeIds<T extends DataType>(type: T, buffer?: BufferRegion) { return this.readData(type, buffer); }\n    protected readData<T extends DataType>(_type: T, { length, offset } = this.nextBufferRange()) {\n        return this.bytes.subarray(offset, offset + length);\n    }\n    protected readDictionary<T extends type.Dictionary>(type: T): Vector<T['dictionary']> {\n        return this.dictionaries.get(type.id)!;\n    }\n}\n\n/** @ignore */\nexport class JSONVectorLoader extends VectorLoader {\n    private sources: any[][];\n    constructor(sources: any[][], nodes: FieldNode[], buffers: BufferRegion[], dictionaries: Map<number, Vector<any>>) {\n        super(new Uint8Array(0), nodes, buffers, dictionaries);\n        this.sources = sources;\n    }\n    protected readNullBitmap<T extends DataType>(_type: T, nullCount: number, { offset } = this.nextBufferRange()) {\n        return nullCount <= 0 ? new Uint8Array(0) : packBools(this.sources[offset]);\n    }\n    protected readOffsets<T extends DataType>(_type: T, { offset } = this.nextBufferRange()) {\n        return toArrayBufferView(Uint8Array, toArrayBufferView(Int32Array, this.sources[offset]));\n    }\n    protected readTypeIds<T extends DataType>(type: T, { offset } = this.nextBufferRange()) {\n        return toArrayBufferView(Uint8Array, toArrayBufferView(type.ArrayType, this.sources[offset]));\n    }\n    protected readData<T extends DataType>(type: T, { offset } = this.nextBufferRange()) {\n        const { sources } = this;\n        if (DataType.isTimestamp(type)) {\n            return toArrayBufferView(Uint8Array, Int64.convertArray(sources[offset] as string[]));\n        } else if ((DataType.isInt(type) || DataType.isTime(type)) && type.bitWidth === 64) {\n            return toArrayBufferView(Uint8Array, Int64.convertArray(sources[offset] as string[]));\n        } else if (DataType.isDate(type) && type.unit === DateUnit.MILLISECOND) {\n            return toArrayBufferView(Uint8Array, Int64.convertArray(sources[offset] as string[]));\n        } else if (DataType.isDecimal(type)) {\n            return toArrayBufferView(Uint8Array, Int128.convertArray(sources[offset] as string[]));\n        } else if (DataType.isBinary(type) || DataType.isFixedSizeBinary(type)) {\n            return binaryDataFromJSON(sources[offset] as string[]);\n        } else if (DataType.isBool(type)) {\n            return packBools(sources[offset] as number[]);\n        } else if (DataType.isUtf8(type)) {\n            return encodeUtf8((sources[offset] as string[]).join(''));\n        }\n        return toArrayBufferView(Uint8Array, toArrayBufferView(type.ArrayType, sources[offset].map((x) => +x)));\n    }\n}\n\n/** @ignore */\nfunction binaryDataFromJSON(values: string[]) {\n    // \"DATA\": [\"49BC7D5B6C47D2\",\"3F5FB6D9322026\"]\n    // There are definitely more efficient ways to do this... but it gets the\n    // job done.\n    const joined = values.join('');\n    const data = new Uint8Array(joined.length / 2);\n    for (let i = 0; i < joined.length; i += 2) {\n        data[i >> 1] = parseInt(joined.substr(i, 2), 16);\n    }\n    return data;\n}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { flatbuffers } from 'flatbuffers';\nimport Long = flatbuffers.Long;\nimport Builder = flatbuffers.Builder;\nimport * as Schema_ from '../fb/Schema';\n\nimport * as type from '../type';\nimport { Visitor } from '../visitor';\n\nimport Null = Schema_.org.apache.arrow.flatbuf.Null;\nimport Int = Schema_.org.apache.arrow.flatbuf.Int;\nimport FloatingPoint = Schema_.org.apache.arrow.flatbuf.FloatingPoint;\nimport Binary = Schema_.org.apache.arrow.flatbuf.Binary;\nimport Bool = Schema_.org.apache.arrow.flatbuf.Bool;\nimport Utf8 = Schema_.org.apache.arrow.flatbuf.Utf8;\nimport Decimal = Schema_.org.apache.arrow.flatbuf.Decimal;\nimport Date = Schema_.org.apache.arrow.flatbuf.Date;\nimport Time = Schema_.org.apache.arrow.flatbuf.Time;\nimport Timestamp = Schema_.org.apache.arrow.flatbuf.Timestamp;\nimport Interval = Schema_.org.apache.arrow.flatbuf.Interval;\nimport List = Schema_.org.apache.arrow.flatbuf.List;\nimport Struct = Schema_.org.apache.arrow.flatbuf.Struct_;\nimport Union = Schema_.org.apache.arrow.flatbuf.Union;\nimport DictionaryEncoding = Schema_.org.apache.arrow.flatbuf.DictionaryEncoding;\nimport FixedSizeBinary = Schema_.org.apache.arrow.flatbuf.FixedSizeBinary;\nimport FixedSizeList = Schema_.org.apache.arrow.flatbuf.FixedSizeList;\nimport Map_ = Schema_.org.apache.arrow.flatbuf.Map;\n\n/** @ignore */\nexport interface TypeAssembler extends Visitor {\n    visit<T extends type.DataType>(node: T, builder: Builder): number | undefined;\n}\n\n/** @ignore */\nexport class TypeAssembler extends Visitor {\n    public visit<T extends type.DataType>(node: T, builder: Builder): number | undefined {\n        return (node == null || builder == null) ? undefined : super.visit(node, builder);\n    }\n    public visitNull<T extends type.Null>(_node: T, b: Builder) {\n        Null.startNull(b);\n        return Null.endNull(b);\n    }\n    public visitInt<T extends type.Int>(node: T, b: Builder) {\n        Int.startInt(b);\n        Int.addBitWidth(b, node.bitWidth);\n        Int.addIsSigned(b, node.isSigned);\n        return Int.endInt(b);\n    }\n    public visitFloat<T extends type.Float>(node: T, b: Builder) {\n        FloatingPoint.startFloatingPoint(b);\n        FloatingPoint.addPrecision(b, node.precision);\n        return FloatingPoint.endFloatingPoint(b);\n    }\n    public visitBinary<T extends type.Binary>(_node: T, b: Builder) {\n        Binary.startBinary(b);\n        return Binary.endBinary(b);\n    }\n    public visitBool<T extends type.Bool>(_node: T, b: Builder) {\n        Bool.startBool(b);\n        return Bool.endBool(b);\n    }\n    public visitUtf8<T extends type.Utf8>(_node: T, b: Builder) {\n        Utf8.startUtf8(b);\n        return Utf8.endUtf8(b);\n    }\n    public visitDecimal<T extends type.Decimal>(node: T, b: Builder) {\n        Decimal.startDecimal(b);\n        Decimal.addScale(b, node.scale);\n        Decimal.addPrecision(b, node.precision);\n        return Decimal.endDecimal(b);\n    }\n    public visitDate<T extends type.Date_>(node: T, b: Builder) {\n        Date.startDate(b);\n        Date.addUnit(b, node.unit);\n        return Date.endDate(b);\n    }\n    public visitTime<T extends type.Time>(node: T, b: Builder) {\n        Time.startTime(b);\n        Time.addUnit(b, node.unit);\n        Time.addBitWidth(b, node.bitWidth);\n        return Time.endTime(b);\n    }\n    public visitTimestamp<T extends type.Timestamp>(node: T, b: Builder) {\n        const timezone = (node.timezone && b.createString(node.timezone)) || undefined;\n        Timestamp.startTimestamp(b);\n        Timestamp.addUnit(b, node.unit);\n        if (timezone !== undefined) {\n            Timestamp.addTimezone(b, timezone);\n        }\n        return Timestamp.endTimestamp(b);\n    }\n    public visitInterval<T extends type.Interval>(node: T, b: Builder) {\n        Interval.startInterval(b);\n        Interval.addUnit(b, node.unit);\n        return Interval.endInterval(b);\n    }\n    public visitList<T extends type.List>(_node: T, b: Builder) {\n        List.startList(b);\n        return List.endList(b);\n    }\n    public visitStruct<T extends type.Struct>(_node: T, b: Builder) {\n        Struct.startStruct_(b);\n        return Struct.endStruct_(b);\n    }\n    public visitUnion<T extends type.Union>(node: T, b: Builder) {\n        Union.startTypeIdsVector(b, node.typeIds.length);\n        const typeIds = Union.createTypeIdsVector(b, node.typeIds);\n        Union.startUnion(b);\n        Union.addMode(b, node.mode);\n        Union.addTypeIds(b, typeIds);\n        return Union.endUnion(b);\n    }\n    public visitDictionary<T extends type.Dictionary>(node: T, b: Builder) {\n        const indexType = this.visit(node.indices, b);\n        DictionaryEncoding.startDictionaryEncoding(b);\n        DictionaryEncoding.addId(b, new Long(node.id, 0));\n        DictionaryEncoding.addIsOrdered(b, node.isOrdered);\n        if (indexType !== undefined) {\n            DictionaryEncoding.addIndexType(b, indexType);\n        }\n        return DictionaryEncoding.endDictionaryEncoding(b);\n    }\n    public visitFixedSizeBinary<T extends type.FixedSizeBinary>(node: T, b: Builder) {\n        FixedSizeBinary.startFixedSizeBinary(b);\n        FixedSizeBinary.addByteWidth(b, node.byteWidth);\n        return FixedSizeBinary.endFixedSizeBinary(b);\n    }\n    public visitFixedSizeList<T extends type.FixedSizeList>(node: T, b: Builder) {\n        FixedSizeList.startFixedSizeList(b);\n        FixedSizeList.addListSize(b, node.listSize);\n        return FixedSizeList.endFixedSizeList(b);\n    }\n    public visitMap<T extends type.Map_>(node: T, b: Builder) {\n        Map_.startMap(b);\n        Map_.addKeysSorted(b, node.keysSorted);\n        return Map_.endMap(b);\n    }\n}\n\n/** @ignore */\nexport const instance = new TypeAssembler();\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { Schema, Field } from '../../schema';\nimport {\n    DataType, Dictionary, TimeBitWidth,\n    Utf8, Binary, Decimal, FixedSizeBinary,\n    List, FixedSizeList, Map_, Struct, Union,\n    Bool, Null, Int, Float, Date_, Time, Interval, Timestamp, IntBitWidth, Int32, TKeys,\n} from '../../type';\n\nimport { DictionaryBatch, RecordBatch, FieldNode, BufferRegion } from './message';\nimport { TimeUnit, Precision, IntervalUnit, UnionMode, DateUnit } from '../../enum';\n\n/** @ignore */\nexport function schemaFromJSON(_schema: any, dictionaries: Map<number, DataType> = new Map()) {\n    return new Schema(\n        schemaFieldsFromJSON(_schema, dictionaries),\n        customMetadataFromJSON(_schema['customMetadata']),\n        dictionaries\n    );\n}\n\n/** @ignore */\nexport function recordBatchFromJSON(b: any) {\n    return new RecordBatch(\n        b['count'],\n        fieldNodesFromJSON(b['columns']),\n        buffersFromJSON(b['columns'])\n    );\n}\n\n/** @ignore */\nexport function dictionaryBatchFromJSON(b: any) {\n    return new DictionaryBatch(\n        recordBatchFromJSON(b['data']),\n        b['id'], b['isDelta']\n    );\n}\n\n/** @ignore */\nfunction schemaFieldsFromJSON(_schema: any, dictionaries?: Map<number, DataType>) {\n    return (_schema['fields'] || []).filter(Boolean).map((f: any) => Field.fromJSON(f, dictionaries));\n}\n\n/** @ignore */\nfunction fieldChildrenFromJSON(_field: any, dictionaries?: Map<number, DataType>): Field[] {\n    return (_field['children'] || []).filter(Boolean).map((f: any) => Field.fromJSON(f, dictionaries));\n}\n\n/** @ignore */\nfunction fieldNodesFromJSON(xs: any[]): FieldNode[] {\n    return (xs || []).reduce<FieldNode[]>((fieldNodes, column: any) => [\n        ...fieldNodes,\n        new FieldNode(\n            column['count'],\n            nullCountFromJSON(column['VALIDITY'])\n        ),\n        ...fieldNodesFromJSON(column['children'])\n    ], [] as FieldNode[]);\n}\n\n/** @ignore */\nfunction buffersFromJSON(xs: any[], buffers: BufferRegion[] = []): BufferRegion[] {\n    for (let i = -1, n = (xs || []).length; ++i < n;) {\n        const column = xs[i];\n        column['VALIDITY'] && buffers.push(new BufferRegion(buffers.length, column['VALIDITY'].length));\n        column['TYPE'] && buffers.push(new BufferRegion(buffers.length, column['TYPE'].length));\n        column['OFFSET'] && buffers.push(new BufferRegion(buffers.length, column['OFFSET'].length));\n        column['DATA'] && buffers.push(new BufferRegion(buffers.length, column['DATA'].length));\n        buffers = buffersFromJSON(column['children'], buffers);\n    }\n    return buffers;\n}\n\n/** @ignore */\nfunction nullCountFromJSON(validity: number[]) {\n    return (validity || []).reduce((sum, val) => sum + +(val === 0), 0);\n}\n\n/** @ignore */\nexport function fieldFromJSON(_field: any, dictionaries?: Map<number, DataType>) {\n\n    let id: number;\n    let keys: TKeys | null;\n    let field: Field | void;\n    let dictMeta: any;\n    let type: DataType<any>;\n    let dictType: Dictionary;\n\n    // If no dictionary encoding\n    if (!dictionaries || !(dictMeta = _field['dictionary'])) {\n        type = typeFromJSON(_field, fieldChildrenFromJSON(_field, dictionaries));\n        field = new Field(_field['name'], type, _field['nullable'], customMetadataFromJSON(_field['customMetadata']));\n    }\n    // tslint:disable\n    // If dictionary encoded and the first time we've seen this dictionary id, decode\n    // the data type and child fields, then wrap in a Dictionary type and insert the\n    // data type into the dictionary types map.\n    else if (!dictionaries.has(id = dictMeta['id'])) {\n        // a dictionary index defaults to signed 32 bit int if unspecified\n        keys = (keys = dictMeta['indexType']) ? indexTypeFromJSON(keys) as TKeys : new Int32();\n        dictionaries.set(id, type = typeFromJSON(_field, fieldChildrenFromJSON(_field, dictionaries)));\n        dictType = new Dictionary(type, keys, id, dictMeta['isOrdered']);\n        field = new Field(_field['name'], dictType, _field['nullable'], customMetadataFromJSON(_field['customMetadata']));\n    }\n    // If dictionary encoded, and have already seen this dictionary Id in the schema, then reuse the\n    // data type and wrap in a new Dictionary type and field.\n    else {\n        // a dictionary index defaults to signed 32 bit int if unspecified\n        keys = (keys = dictMeta['indexType']) ? indexTypeFromJSON(keys) as TKeys : new Int32();\n        dictType = new Dictionary(dictionaries.get(id)!, keys, id, dictMeta['isOrdered']);\n        field = new Field(_field['name'], dictType, _field['nullable'], customMetadataFromJSON(_field['customMetadata']));\n    }\n    return field || null;\n}\n\n/** @ignore */\nfunction customMetadataFromJSON(_metadata?: object) {\n    return new Map<string, string>(Object.entries(_metadata || {}));\n}\n\n/** @ignore */\nfunction indexTypeFromJSON(_type: any) {\n    return new Int(_type['isSigned'], _type['bitWidth']);\n}\n\n/** @ignore */\nfunction typeFromJSON(f: any, children?: Field[]): DataType<any> {\n\n    const typeId = f['type']['name'];\n\n    switch (typeId) {\n        case 'NONE':   return new Null();\n        case 'null':   return new Null();\n        case 'binary': return new Binary();\n        case 'utf8':   return new Utf8();\n        case 'bool':   return new Bool();\n        case 'list':   return new List((children || [])[0]);\n        case 'struct': return new Struct(children || []);\n        case 'struct_': return new Struct(children || []);\n    }\n\n    switch (typeId) {\n        case 'int': {\n            const t = f['type'];\n            return new Int(t['isSigned'], t['bitWidth'] as IntBitWidth);\n        }\n        case 'floatingpoint': {\n            const t = f['type'];\n            return new Float(Precision[t['precision']] as any);\n        }\n        case 'decimal': {\n            const t = f['type'];\n            return new Decimal(t['scale'], t['precision']);\n        }\n        case 'date': {\n            const t = f['type'];\n            return new Date_(DateUnit[t['unit']] as any);\n        }\n        case 'time': {\n            const t = f['type'];\n            return new Time(TimeUnit[t['unit']] as any, t['bitWidth'] as TimeBitWidth);\n        }\n        case 'timestamp': {\n            const t = f['type'];\n            return new Timestamp(TimeUnit[t['unit']] as any, t['timezone']);\n        }\n        case 'interval': {\n            const t = f['type'];\n            return new Interval(IntervalUnit[t['unit']] as any);\n        }\n        case 'union': {\n            const t = f['type'];\n            return new Union(UnionMode[t['mode']] as any, (t['typeIds'] || []), children || []);\n        }\n        case 'fixedsizebinary': {\n            const t = f['type'];\n            return new FixedSizeBinary(t['byteWidth']);\n        }\n        case 'fixedsizelist': {\n            const t = f['type'];\n            return new FixedSizeList(t['listSize'], (children || [])[0]);\n        }\n        case 'map': {\n            const t = f['type'];\n            return new Map_((children || [])[0], t['keysSorted']);\n        }\n    }\n    throw new Error(`Unrecognized type: \"${typeId}\"`);\n}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { flatbuffers } from 'flatbuffers';\nimport * as Schema_ from '../../fb/Schema';\nimport * as Message_ from '../../fb/Message';\n\nimport { Schema, Field } from '../../schema';\nimport { toUint8Array } from '../../util/buffer';\nimport { ArrayBufferViewInput } from '../../util/buffer';\nimport { MessageHeader, MetadataVersion } from '../../enum';\nimport { instance as typeAssembler } from '../../visitor/typeassembler';\nimport { fieldFromJSON, schemaFromJSON, recordBatchFromJSON, dictionaryBatchFromJSON } from './json';\n\nimport Long = flatbuffers.Long;\nimport Builder = flatbuffers.Builder;\nimport ByteBuffer = flatbuffers.ByteBuffer;\nimport _Int = Schema_.org.apache.arrow.flatbuf.Int;\nimport Type = Schema_.org.apache.arrow.flatbuf.Type;\nimport _Field = Schema_.org.apache.arrow.flatbuf.Field;\nimport _Schema = Schema_.org.apache.arrow.flatbuf.Schema;\nimport _Buffer = Schema_.org.apache.arrow.flatbuf.Buffer;\nimport _Message = Message_.org.apache.arrow.flatbuf.Message;\nimport _KeyValue = Schema_.org.apache.arrow.flatbuf.KeyValue;\nimport _FieldNode = Message_.org.apache.arrow.flatbuf.FieldNode;\nimport _Endianness = Schema_.org.apache.arrow.flatbuf.Endianness;\nimport _RecordBatch = Message_.org.apache.arrow.flatbuf.RecordBatch;\nimport _DictionaryBatch = Message_.org.apache.arrow.flatbuf.DictionaryBatch;\nimport _DictionaryEncoding = Schema_.org.apache.arrow.flatbuf.DictionaryEncoding;\n\nimport {\n    DataType, Dictionary, TimeBitWidth,\n    Utf8, Binary, Decimal, FixedSizeBinary,\n    List, FixedSizeList, Map_, Struct, Union,\n    Bool, Null, Int, Float, Date_, Time, Interval, Timestamp, IntBitWidth, Int32, TKeys,\n} from '../../type';\n\n/**\n * @ignore\n * @private\n **/\nexport class Message<T extends MessageHeader = any> {\n\n    /** @nocollapse */\n    public static fromJSON<T extends MessageHeader>(msg: any, headerType: T): Message<T> {\n        const message = new Message(0, MetadataVersion.V4, headerType);\n        message._createHeader = messageHeaderFromJSON(msg, headerType);\n        return message;\n    }\n\n    /** @nocollapse */\n    public static decode(buf: ArrayBufferViewInput) {\n        buf = new ByteBuffer(toUint8Array(buf));\n        const _message = _Message.getRootAsMessage(buf);\n        const bodyLength: Long = _message.bodyLength()!;\n        const version: MetadataVersion = _message.version();\n        const headerType: MessageHeader = _message.headerType();\n        const message = new Message(bodyLength, version, headerType);\n        message._createHeader = decodeMessageHeader(_message, headerType);\n        return message;\n    }\n\n    /** @nocollapse */\n    public static encode<T extends MessageHeader>(message: Message<T>) {\n        let b = new Builder(), headerOffset = -1;\n        if (message.isSchema()) {\n            headerOffset = Schema.encode(b, message.header() as Schema);\n        } else if (message.isRecordBatch()) {\n            headerOffset = RecordBatch.encode(b, message.header() as RecordBatch);\n        } else if (message.isDictionaryBatch()) {\n            headerOffset = DictionaryBatch.encode(b, message.header() as DictionaryBatch);\n        }\n        _Message.startMessage(b);\n        _Message.addVersion(b, MetadataVersion.V4);\n        _Message.addHeader(b, headerOffset);\n        _Message.addHeaderType(b, message.headerType);\n        _Message.addBodyLength(b, new Long(message.bodyLength, 0));\n        _Message.finishMessageBuffer(b, _Message.endMessage(b));\n        return b.asUint8Array();\n    }\n\n    /** @nocollapse */\n    public static from(header: Schema | RecordBatch | DictionaryBatch, bodyLength = 0) {\n        if (header instanceof Schema) {\n            return new Message(0, MetadataVersion.V4, MessageHeader.Schema, header);\n        }\n        if (header instanceof RecordBatch) {\n            return new Message(bodyLength, MetadataVersion.V4, MessageHeader.RecordBatch, header);\n        }\n        if (header instanceof DictionaryBatch) {\n            return new Message(bodyLength, MetadataVersion.V4, MessageHeader.DictionaryBatch, header);\n        }\n        throw new Error(`Unrecognized Message header: ${header}`);\n    }\n\n    // @ts-ignore\n    public body: Uint8Array;\n    protected _headerType: T;\n    protected _bodyLength: number;\n    protected _version: MetadataVersion;\n    public get type() { return this.headerType; }\n    public get version() { return this._version; }\n    public get headerType() { return this._headerType; }\n    public get bodyLength() { return this._bodyLength; }\n    // @ts-ignore\n    protected _createHeader: MessageHeaderDecoder;\n    public header() { return this._createHeader<T>(); }\n    public isSchema(): this is Message<MessageHeader.Schema> { return this.headerType === MessageHeader.Schema; }\n    public isRecordBatch(): this is Message<MessageHeader.RecordBatch> { return this.headerType === MessageHeader.RecordBatch; }\n    public isDictionaryBatch(): this is Message<MessageHeader.DictionaryBatch> { return this.headerType === MessageHeader.DictionaryBatch; }\n\n    constructor(bodyLength: Long | number, version: MetadataVersion, headerType: T, header?: any) {\n        this._version = version;\n        this._headerType = headerType;\n        this.body = new Uint8Array(0);\n        header && (this._createHeader = () => header);\n        this._bodyLength = typeof bodyLength === 'number' ? bodyLength : bodyLength.low;\n    }\n}\n\n/**\n * @ignore\n * @private\n **/\nexport class RecordBatch {\n    protected _length: number;\n    protected _nodes: FieldNode[];\n    protected _buffers: BufferRegion[];\n    public get nodes() { return this._nodes; }\n    public get length() { return this._length; }\n    public get buffers() { return this._buffers; }\n    constructor(length: Long | number, nodes: FieldNode[], buffers: BufferRegion[]) {\n        this._nodes = nodes;\n        this._buffers = buffers;\n        this._length = typeof length === 'number' ? length : length.low;\n    }\n}\n\n/**\n * @ignore\n * @private\n **/\nexport class DictionaryBatch {\n\n    protected _id: number;\n    protected _isDelta: boolean;\n    protected _data: RecordBatch;\n    public get id() { return this._id; }\n    public get data() { return this._data; }\n    public get isDelta() { return this._isDelta; }\n    public get length(): number { return this.data.length; }\n    public get nodes(): FieldNode[] { return this.data.nodes; }\n    public get buffers(): BufferRegion[] { return this.data.buffers; }\n\n    constructor(data: RecordBatch, id: Long | number, isDelta: boolean = false) {\n        this._data = data;\n        this._isDelta = isDelta;\n        this._id = typeof id === 'number' ? id : id.low;\n    }\n}\n\n/**\n * @ignore\n * @private\n **/\nexport class BufferRegion {\n    public offset: number;\n    public length: number;\n    constructor(offset: Long | number, length: Long | number) {\n        this.offset = typeof offset === 'number' ? offset : offset.low;\n        this.length = typeof length === 'number' ? length : length.low;\n    }\n}\n\n/**\n * @ignore\n * @private\n **/\nexport class FieldNode {\n    public length: number;\n    public nullCount: number;\n    constructor(length: Long | number, nullCount: Long | number) {\n        this.length = typeof length === 'number' ? length : length.low;\n        this.nullCount = typeof nullCount === 'number' ? nullCount : nullCount.low;\n    }\n}\n\n/** @ignore */\nfunction messageHeaderFromJSON(message: any, type: MessageHeader) {\n    return (() => {\n        switch (type) {\n            case MessageHeader.Schema: return Schema.fromJSON(message);\n            case MessageHeader.RecordBatch: return RecordBatch.fromJSON(message);\n            case MessageHeader.DictionaryBatch: return DictionaryBatch.fromJSON(message);\n        }\n        throw new Error(`Unrecognized Message type: { name: ${MessageHeader[type]}, type: ${type} }`);\n    }) as MessageHeaderDecoder;\n}\n\n/** @ignore */\nfunction decodeMessageHeader(message: _Message, type: MessageHeader) {\n    return (() => {\n        switch (type) {\n            case MessageHeader.Schema: return Schema.decode(message.header(new _Schema())!);\n            case MessageHeader.RecordBatch: return RecordBatch.decode(message.header(new _RecordBatch())!, message.version());\n            case MessageHeader.DictionaryBatch: return DictionaryBatch.decode(message.header(new _DictionaryBatch())!, message.version());\n        }\n        throw new Error(`Unrecognized Message type: { name: ${MessageHeader[type]}, type: ${type} }`);\n    }) as MessageHeaderDecoder;\n}\n\nField['encode'] = encodeField;\nField['decode'] = decodeField;\nField['fromJSON'] = fieldFromJSON;\n\nSchema['encode'] = encodeSchema;\nSchema['decode'] = decodeSchema;\nSchema['fromJSON'] = schemaFromJSON;\n\nRecordBatch['encode'] = encodeRecordBatch;\nRecordBatch['decode'] = decodeRecordBatch;\nRecordBatch['fromJSON'] = recordBatchFromJSON;\n\nDictionaryBatch['encode'] = encodeDictionaryBatch;\nDictionaryBatch['decode'] = decodeDictionaryBatch;\nDictionaryBatch['fromJSON'] = dictionaryBatchFromJSON;\n\nFieldNode['encode'] = encodeFieldNode;\nFieldNode['decode'] = decodeFieldNode;\n\nBufferRegion['encode'] = encodeBufferRegion;\nBufferRegion['decode'] = decodeBufferRegion;\n\ndeclare module '../../schema' {\n    namespace Field {\n        export { encodeField as encode };\n        export { decodeField as decode };\n        export { fieldFromJSON as fromJSON };\n    }\n    namespace Schema {\n        export { encodeSchema as encode };\n        export { decodeSchema as decode };\n        export { schemaFromJSON as fromJSON };\n    }\n}\n\ndeclare module './message' {\n    namespace RecordBatch {\n        export { encodeRecordBatch as encode };\n        export { decodeRecordBatch as decode };\n        export { recordBatchFromJSON as fromJSON };\n    }\n    namespace DictionaryBatch {\n        export { encodeDictionaryBatch as encode };\n        export { decodeDictionaryBatch as decode };\n        export { dictionaryBatchFromJSON as fromJSON };\n    }\n    namespace FieldNode {\n        export { encodeFieldNode as encode };\n        export { decodeFieldNode as decode };\n    }\n    namespace BufferRegion {\n        export { encodeBufferRegion as encode };\n        export { decodeBufferRegion as decode };\n    }\n}\n\n/** @ignore */\nfunction decodeSchema(_schema: _Schema, dictionaries: Map<number, DataType> = new Map()) {\n    const fields = decodeSchemaFields(_schema, dictionaries);\n    return new Schema(fields, decodeCustomMetadata(_schema), dictionaries);\n}\n\n/** @ignore */\nfunction decodeRecordBatch(batch: _RecordBatch, version = MetadataVersion.V4) {\n    return new RecordBatch(batch.length(), decodeFieldNodes(batch), decodeBuffers(batch, version));\n}\n\n/** @ignore */\nfunction decodeDictionaryBatch(batch: _DictionaryBatch, version = MetadataVersion.V4) {\n    return new DictionaryBatch(RecordBatch.decode(batch.data()!, version), batch.id(), batch.isDelta());\n}\n\n/** @ignore */\nfunction decodeBufferRegion(b: _Buffer) {\n    return new BufferRegion(b.offset(), b.length());\n}\n\n/** @ignore */\nfunction decodeFieldNode(f: _FieldNode) {\n    return new FieldNode(f.length(), f.nullCount());\n}\n\n/** @ignore */\nfunction decodeFieldNodes(batch: _RecordBatch) {\n    const nodes = [] as FieldNode[];\n    for (let f, i = -1, j = -1, n = batch.nodesLength(); ++i < n;) {\n        if (f = batch.nodes(i)) {\n            nodes[++j] = FieldNode.decode(f);\n        }\n    }\n    return nodes;\n}\n\n/** @ignore */\nfunction decodeBuffers(batch: _RecordBatch, version: MetadataVersion) {\n    const bufferRegions = [] as BufferRegion[];\n    for (let b, i = -1, j = -1, n = batch.buffersLength(); ++i < n;) {\n        if (b = batch.buffers(i)) {\n        // If this Arrow buffer was written before version 4,\n        // advance the buffer's bb_pos 8 bytes to skip past\n        // the now-removed page_id field\n        if (version < MetadataVersion.V4) {\n                b.bb_pos += (8 * (i + 1));\n            }\n            bufferRegions[++j] = BufferRegion.decode(b);\n        }\n    }\n    return bufferRegions;\n}\n\n/** @ignore */\nfunction decodeSchemaFields(schema: _Schema, dictionaries?: Map<number, DataType>) {\n    const fields = [] as Field[];\n    for (let f, i = -1, j = -1, n = schema.fieldsLength(); ++i < n;) {\n        if (f = schema.fields(i)) {\n            fields[++j] = Field.decode(f, dictionaries);\n        }\n    }\n    return fields;\n}\n\n/** @ignore */\nfunction decodeFieldChildren(field: _Field, dictionaries?: Map<number, DataType>): Field[] {\n    const children = [] as Field[];\n    for (let f, i = -1, j = -1, n = field.childrenLength(); ++i < n;) {\n        if (f = field.children(i)) {\n            children[++j] = Field.decode(f, dictionaries);\n        }\n    }\n    return children;\n}\n\n/** @ignore */\nfunction decodeField(f: _Field, dictionaries?: Map<number, DataType>) {\n\n    let id: number;\n    let field: Field | void;\n    let type: DataType<any>;\n    let keys: _Int | TKeys | null;\n    let dictType: Dictionary;\n    let dictMeta: _DictionaryEncoding | null;\n\n    // If no dictionary encoding\n    if (!dictionaries || !(dictMeta = f.dictionary())) {\n        type = decodeFieldType(f, decodeFieldChildren(f, dictionaries));\n        field = new Field(f.name()!, type, f.nullable(), decodeCustomMetadata(f));\n    }\n    // tslint:disable\n    // If dictionary encoded and the first time we've seen this dictionary id, decode\n    // the data type and child fields, then wrap in a Dictionary type and insert the\n    // data type into the dictionary types map.\n    else if (!dictionaries.has(id = dictMeta.id().low)) {\n        // a dictionary index defaults to signed 32 bit int if unspecified\n        keys = (keys = dictMeta.indexType()) ? decodeIndexType(keys) as TKeys : new Int32();\n        dictionaries.set(id, type = decodeFieldType(f, decodeFieldChildren(f, dictionaries)));\n        dictType = new Dictionary(type, keys, id, dictMeta.isOrdered());\n        field = new Field(f.name()!, dictType, f.nullable(), decodeCustomMetadata(f));\n    }\n    // If dictionary encoded, and have already seen this dictionary Id in the schema, then reuse the\n    // data type and wrap in a new Dictionary type and field.\n    else {\n        // a dictionary index defaults to signed 32 bit int if unspecified\n        keys = (keys = dictMeta.indexType()) ? decodeIndexType(keys) as TKeys : new Int32();\n        dictType = new Dictionary(dictionaries.get(id)!, keys, id, dictMeta.isOrdered());\n        field = new Field(f.name()!, dictType, f.nullable(), decodeCustomMetadata(f));\n    }\n    return field || null;\n}\n\n/** @ignore */\nfunction decodeCustomMetadata(parent?: _Schema | _Field | null) {\n    const data = new Map<string, string>();\n    if (parent) {\n        for (let entry, key, i = -1, n = parent.customMetadataLength() | 0; ++i < n;) {\n            if ((entry = parent.customMetadata(i)) && (key = entry.key()) != null) {\n                data.set(key, entry.value()!);\n            }\n        }\n    }\n    return data;\n}\n\n/** @ignore */\nfunction decodeIndexType(_type: _Int) {\n    return new Int(_type.isSigned(), _type.bitWidth() as IntBitWidth);\n}\n\n/** @ignore */\nfunction decodeFieldType(f: _Field, children?: Field[]): DataType<any> {\n\n    const typeId = f.typeType();\n\n    switch (typeId) {\n        case Type.NONE:    return new Null();\n        case Type.Null:    return new Null();\n        case Type.Binary:  return new Binary();\n        case Type.Utf8:    return new Utf8();\n        case Type.Bool:    return new Bool();\n        case Type.List:    return new List((children || [])[0]);\n        case Type.Struct_: return new Struct(children || []);\n    }\n\n    switch (typeId) {\n        case Type.Int: {\n            const t = f.type(new Schema_.org.apache.arrow.flatbuf.Int())!;\n            return new Int(t.isSigned(), t.bitWidth());\n        }\n        case Type.FloatingPoint: {\n            const t = f.type(new Schema_.org.apache.arrow.flatbuf.FloatingPoint())!;\n            return new Float(t.precision());\n        }\n        case Type.Decimal: {\n            const t = f.type(new Schema_.org.apache.arrow.flatbuf.Decimal())!;\n            return new Decimal(t.scale(), t.precision());\n        }\n        case Type.Date: {\n            const t = f.type(new Schema_.org.apache.arrow.flatbuf.Date())!;\n            return new Date_(t.unit());\n        }\n        case Type.Time: {\n            const t = f.type(new Schema_.org.apache.arrow.flatbuf.Time())!;\n            return new Time(t.unit(), t.bitWidth() as TimeBitWidth);\n        }\n        case Type.Timestamp: {\n            const t = f.type(new Schema_.org.apache.arrow.flatbuf.Timestamp())!;\n            return new Timestamp(t.unit(), t.timezone());\n        }\n        case Type.Interval: {\n            const t = f.type(new Schema_.org.apache.arrow.flatbuf.Interval())!;\n            return new Interval(t.unit());\n        }\n        case Type.Union: {\n            const t = f.type(new Schema_.org.apache.arrow.flatbuf.Union())!;\n            return new Union(t.mode(), t.typeIdsArray() || [], children || []);\n        }\n        case Type.FixedSizeBinary: {\n            const t = f.type(new Schema_.org.apache.arrow.flatbuf.FixedSizeBinary())!;\n            return new FixedSizeBinary(t.byteWidth());\n        }\n        case Type.FixedSizeList: {\n            const t = f.type(new Schema_.org.apache.arrow.flatbuf.FixedSizeList())!;\n            return new FixedSizeList(t.listSize(), (children || [])[0]);\n        }\n        case Type.Map: {\n            const t = f.type(new Schema_.org.apache.arrow.flatbuf.Map())!;\n            return new Map_((children || [])[0], t.keysSorted());\n        }\n    }\n    throw new Error(`Unrecognized type: \"${Type[typeId]}\" (${typeId})`);\n}\n\n/** @ignore */\nfunction encodeSchema(b: Builder, schema: Schema) {\n\n    const fieldOffsets = schema.fields.map((f) => Field.encode(b, f));\n\n    _Schema.startFieldsVector(b, fieldOffsets.length);\n\n    const fieldsVectorOffset = _Schema.createFieldsVector(b, fieldOffsets);\n\n    const metadataOffset = !(schema.metadata && schema.metadata.size > 0) ? -1 :\n        _Schema.createCustomMetadataVector(b, [...schema.metadata].map(([k, v]) => {\n            const key = b.createString(`${k}`);\n            const val = b.createString(`${v}`);\n            _KeyValue.startKeyValue(b);\n            _KeyValue.addKey(b, key);\n            _KeyValue.addValue(b, val);\n            return _KeyValue.endKeyValue(b);\n        }));\n\n    _Schema.startSchema(b);\n    _Schema.addFields(b, fieldsVectorOffset);\n    _Schema.addEndianness(b, platformIsLittleEndian ? _Endianness.Little : _Endianness.Big);\n\n    if (metadataOffset !== -1) { _Schema.addCustomMetadata(b, metadataOffset); }\n\n    return _Schema.endSchema(b);\n}\n\n/** @ignore */\nfunction encodeField(b: Builder, field: Field) {\n\n    let nameOffset = -1;\n    let typeOffset = -1;\n    let dictionaryOffset = -1;\n\n    let type = field.type;\n    let typeId: Type = <any> field.typeId;\n\n    if (!DataType.isDictionary(type)) {\n        typeOffset = typeAssembler.visit(type, b)!;\n    } else {\n        typeId = type.dictionary.typeId;\n        dictionaryOffset = typeAssembler.visit(type, b)!;\n        typeOffset = typeAssembler.visit(type.dictionary, b)!;\n    }\n\n    const childOffsets = (type.children || []).map((f: Field) => Field.encode(b, f));\n    const childrenVectorOffset = _Field.createChildrenVector(b, childOffsets);\n\n    const metadataOffset = !(field.metadata && field.metadata.size > 0) ? -1 :\n        _Field.createCustomMetadataVector(b, [...field.metadata].map(([k, v]) => {\n            const key = b.createString(`${k}`);\n            const val = b.createString(`${v}`);\n            _KeyValue.startKeyValue(b);\n            _KeyValue.addKey(b, key);\n            _KeyValue.addValue(b, val);\n            return _KeyValue.endKeyValue(b);\n        }));\n\n    if (field.name) {\n        nameOffset = b.createString(field.name);\n    }\n\n    _Field.startField(b);\n    _Field.addType(b, typeOffset);\n    _Field.addTypeType(b, typeId);\n    _Field.addChildren(b, childrenVectorOffset);\n    _Field.addNullable(b, !!field.nullable);\n\n    if (nameOffset !== -1) { _Field.addName(b, nameOffset); }\n    if (dictionaryOffset !== -1) { _Field.addDictionary(b, dictionaryOffset); }\n    if (metadataOffset !== -1) { _Field.addCustomMetadata(b, metadataOffset); }\n\n    return _Field.endField(b);\n}\n\n/** @ignore */\nfunction encodeRecordBatch(b: Builder, recordBatch: RecordBatch) {\n\n    const nodes = recordBatch.nodes || [];\n    const buffers = recordBatch.buffers || [];\n\n    _RecordBatch.startNodesVector(b, nodes.length);\n    nodes.slice().reverse().forEach((n) => FieldNode.encode(b, n));\n\n    const nodesVectorOffset = b.endVector();\n\n    _RecordBatch.startBuffersVector(b, buffers.length);\n    buffers.slice().reverse().forEach((b_) => BufferRegion.encode(b, b_));\n\n    const buffersVectorOffset = b.endVector();\n\n    _RecordBatch.startRecordBatch(b);\n    _RecordBatch.addLength(b, new Long(recordBatch.length, 0));\n    _RecordBatch.addNodes(b, nodesVectorOffset);\n    _RecordBatch.addBuffers(b, buffersVectorOffset);\n    return _RecordBatch.endRecordBatch(b);\n}\n\n/** @ignore */\nfunction encodeDictionaryBatch(b: Builder, dictionaryBatch: DictionaryBatch) {\n    const dataOffset = RecordBatch.encode(b, dictionaryBatch.data);\n    _DictionaryBatch.startDictionaryBatch(b);\n    _DictionaryBatch.addId(b, new Long(dictionaryBatch.id, 0));\n    _DictionaryBatch.addIsDelta(b, dictionaryBatch.isDelta);\n    _DictionaryBatch.addData(b, dataOffset);\n    return _DictionaryBatch.endDictionaryBatch(b);\n}\n\n/** @ignore */\nfunction encodeFieldNode(b: Builder, node: FieldNode) {\n    return _FieldNode.createFieldNode(b, new Long(node.length, 0), new Long(node.nullCount, 0));\n}\n\n/** @ignore */\nfunction encodeBufferRegion(b: Builder, node: BufferRegion) {\n    return _Buffer.createBuffer(b, new Long(node.offset, 0), new Long(node.length, 0));\n}\n\n/** @ignore */\nconst platformIsLittleEndian = (function() {\n    const buffer = new ArrayBuffer(2);\n    new DataView(buffer).setInt16(0, 256, true /* littleEndian */);\n    // Int16Array uses the platform's endianness.\n    return new Int16Array(buffer)[0] === 256;\n})();\n\n/** @ignore */\ntype MessageHeaderDecoder = <T extends MessageHeader>() => T extends MessageHeader.Schema ? Schema\n                                                         : T extends MessageHeader.RecordBatch ? RecordBatch\n                                                         : T extends MessageHeader.DictionaryBatch ? DictionaryBatch : never;\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { MessageHeader } from '../enum';\nimport { flatbuffers } from 'flatbuffers';\nimport ByteBuffer = flatbuffers.ByteBuffer;\nimport { Message } from './metadata/message';\nimport { isFileHandle } from '../util/compat';\nimport { AsyncRandomAccessFile } from '../io/file';\nimport { toUint8Array, ArrayBufferViewInput } from '../util/buffer';\nimport { ByteStream, ReadableSource, AsyncByteStream } from '../io/stream';\nimport { ArrowJSON, ArrowJSONLike, ITERATOR_DONE, FileHandle } from '../io/interfaces';\n\n/** @ignore */ const invalidMessageType       = (type: MessageHeader) => `Expected ${MessageHeader[type]} Message in stream, but was null or length 0.`;\n/** @ignore */ const nullMessage              = (type: MessageHeader) => `Header pointer of flatbuffer-encoded ${MessageHeader[type]} Message is null or length 0.`;\n/** @ignore */ const invalidMessageMetadata   = (expected: number, actual: number) => `Expected to read ${expected} metadata bytes, but only read ${actual}.`;\n/** @ignore */ const invalidMessageBodyLength = (expected: number, actual: number) => `Expected to read ${expected} bytes for message body, but only read ${actual}.`;\n\n/** @ignore */\nexport class MessageReader implements IterableIterator<Message> {\n    protected source: ByteStream;\n    constructor(source: ByteStream | ArrayBufferViewInput | Iterable<ArrayBufferViewInput>) {\n        this.source = source instanceof ByteStream ? source : new ByteStream(source);\n    }\n    public [Symbol.iterator](): IterableIterator<Message> { return this as IterableIterator<Message>; }\n    public next(): IteratorResult<Message> {\n        let r;\n        if ((r = this.readMetadataLength()).done) { return ITERATOR_DONE; }\n        // ARROW-6313: If the first 4 bytes are continuation indicator (-1), read\n        // the next 4 for the 32-bit metadata length. Otherwise, assume this is a\n        // pre-v0.15 message, where the first 4 bytes are the metadata length.\n        if ((r.value === -1) &&\n            (r = this.readMetadataLength()).done) { return ITERATOR_DONE; }\n        if ((r = this.readMetadata(r.value)).done) { return ITERATOR_DONE; }\n        return (<any> r) as IteratorResult<Message>;\n    }\n    public throw(value?: any) { return this.source.throw(value); }\n    public return(value?: any) { return this.source.return(value); }\n    public readMessage<T extends MessageHeader>(type?: T | null) {\n        let r: IteratorResult<Message<T>>;\n        if ((r = this.next()).done) { return null; }\n        if ((type != null) && r.value.headerType !== type) {\n            throw new Error(invalidMessageType(type));\n        }\n        return r.value;\n    }\n    public readMessageBody(bodyLength: number): Uint8Array {\n        if (bodyLength <= 0) { return new Uint8Array(0); }\n        const buf = toUint8Array(this.source.read(bodyLength));\n        if (buf.byteLength < bodyLength) {\n            throw new Error(invalidMessageBodyLength(bodyLength, buf.byteLength));\n        }\n        // 1. Work around bugs in fs.ReadStream's internal Buffer pooling, see: https://github.com/nodejs/node/issues/24817\n        // 2. Work around https://github.com/whatwg/streams/blob/0ebe4b042e467d9876d80ae045de3843092ad797/reference-implementation/lib/helpers.js#L126\n        return /* 1. */ (buf.byteOffset % 8 === 0) &&\n               /* 2. */ (buf.byteOffset + buf.byteLength) <= buf.buffer.byteLength ? buf : buf.slice();\n    }\n    public readSchema(throwIfNull = false) {\n        const type = MessageHeader.Schema;\n        const message = this.readMessage(type);\n        const schema = message && message.header();\n        if (throwIfNull && !schema) {\n            throw new Error(nullMessage(type));\n        }\n        return schema;\n    }\n    protected readMetadataLength(): IteratorResult<number> {\n        const buf = this.source.read(PADDING);\n        const bb = buf && new ByteBuffer(buf);\n        const len = bb && bb.readInt32(0) || 0;\n        return { done: len === 0, value: len };\n    }\n    protected readMetadata(metadataLength: number): IteratorResult<Message> {\n        const buf = this.source.read(metadataLength);\n        if (!buf) { return ITERATOR_DONE; }\n        if (buf.byteLength < metadataLength) {\n            throw new Error(invalidMessageMetadata(metadataLength, buf.byteLength));\n        }\n        return { done: false, value: Message.decode(buf) };\n    }\n}\n\n/** @ignore */\nexport class AsyncMessageReader implements AsyncIterableIterator<Message> {\n    protected source: AsyncByteStream;\n    constructor(source: ReadableSource<Uint8Array>);\n    constructor(source: FileHandle, byteLength?: number);\n    constructor(source: any, byteLength?: number) {\n        this.source = source instanceof AsyncByteStream ? source\n            : isFileHandle(source)\n            ? new AsyncRandomAccessFile(source, byteLength!)\n            : new AsyncByteStream(source);\n    }\n    public [Symbol.asyncIterator](): AsyncIterableIterator<Message> { return this as AsyncIterableIterator<Message>; }\n    public async next(): Promise<IteratorResult<Message>> {\n        let r;\n        if ((r = await this.readMetadataLength()).done) { return ITERATOR_DONE; }\n        // ARROW-6313: If the first 4 bytes are continuation indicator (-1), read\n        // the next 4 for the 32-bit metadata length. Otherwise, assume this is a\n        // pre-v0.15 message, where the first 4 bytes are the metadata length.\n        if ((r.value === -1) &&\n            (r = await this.readMetadataLength()).done) { return ITERATOR_DONE; }\n        if ((r = await this.readMetadata(r.value)).done) { return ITERATOR_DONE; }\n        return (<any> r) as IteratorResult<Message>;\n    }\n    public async throw(value?: any) { return await this.source.throw(value); }\n    public async return(value?: any) { return await this.source.return(value); }\n    public async readMessage<T extends MessageHeader>(type?: T | null) {\n        let r: IteratorResult<Message<T>>;\n        if ((r = await this.next()).done) { return null; }\n        if ((type != null) && r.value.headerType !== type) {\n            throw new Error(invalidMessageType(type));\n        }\n        return r.value;\n    }\n    public async readMessageBody(bodyLength: number): Promise<Uint8Array> {\n        if (bodyLength <= 0) { return new Uint8Array(0); }\n        const buf = toUint8Array(await this.source.read(bodyLength));\n        if (buf.byteLength < bodyLength) {\n            throw new Error(invalidMessageBodyLength(bodyLength, buf.byteLength));\n        }\n        // 1. Work around bugs in fs.ReadStream's internal Buffer pooling, see: https://github.com/nodejs/node/issues/24817\n        // 2. Work around https://github.com/whatwg/streams/blob/0ebe4b042e467d9876d80ae045de3843092ad797/reference-implementation/lib/helpers.js#L126\n        return /* 1. */ (buf.byteOffset % 8 === 0) &&\n               /* 2. */ (buf.byteOffset + buf.byteLength) <= buf.buffer.byteLength ? buf : buf.slice();\n    }\n    public async readSchema(throwIfNull = false) {\n        const type = MessageHeader.Schema;\n        const message = await this.readMessage(type);\n        const schema = message && message.header();\n        if (throwIfNull && !schema) {\n            throw new Error(nullMessage(type));\n        }\n        return schema;\n    }\n    protected async readMetadataLength(): Promise<IteratorResult<number>> {\n        const buf = await this.source.read(PADDING);\n        const bb = buf && new ByteBuffer(buf);\n        const len = bb && bb.readInt32(0) || 0;\n        return { done: len === 0, value: len };\n    }\n    protected async readMetadata(metadataLength: number): Promise<IteratorResult<Message>> {\n        const buf = await this.source.read(metadataLength);\n        if (!buf) { return ITERATOR_DONE; }\n        if (buf.byteLength < metadataLength) {\n            throw new Error(invalidMessageMetadata(metadataLength, buf.byteLength));\n        }\n        return { done: false, value: Message.decode(buf) };\n    }\n}\n\n/** @ignore */\nexport class JSONMessageReader extends MessageReader {\n    private _schema = false;\n    private _json: ArrowJSON;\n    private _body: any[] = [];\n    private _batchIndex = 0;\n    private _dictionaryIndex = 0;\n    constructor(source: ArrowJSON | ArrowJSONLike) {\n        super(new Uint8Array(0));\n        this._json = source instanceof ArrowJSON ? source : new ArrowJSON(source);\n    }\n    public next() {\n        const { _json } = this;\n        if (!this._schema) {\n            this._schema = true;\n            const message = Message.fromJSON(_json.schema, MessageHeader.Schema);\n            return { done: false, value: message };\n        }\n        if (this._dictionaryIndex < _json.dictionaries.length) {\n            const batch = _json.dictionaries[this._dictionaryIndex++];\n            this._body = batch['data']['columns'];\n            const message = Message.fromJSON(batch, MessageHeader.DictionaryBatch);\n            return { done: false, value: message };\n        }\n        if (this._batchIndex < _json.batches.length) {\n            const batch = _json.batches[this._batchIndex++];\n            this._body = batch['columns'];\n            const message = Message.fromJSON(batch, MessageHeader.RecordBatch);\n            return { done: false, value: message };\n        }\n        this._body = [];\n        return ITERATOR_DONE;\n    }\n    public readMessageBody(_bodyLength?: number) {\n        return flattenDataSources(this._body) as any;\n        function flattenDataSources(xs: any[]): any[][] {\n            return (xs || []).reduce<any[][]>((buffers, column: any) => [\n                ...buffers,\n                ...(column['VALIDITY'] && [column['VALIDITY']] || []),\n                ...(column['TYPE'] && [column['TYPE']] || []),\n                ...(column['OFFSET'] && [column['OFFSET']] || []),\n                ...(column['DATA'] && [column['DATA']] || []),\n                ...flattenDataSources(column['children'])\n            ], [] as any[][]);\n        }\n    }\n    public readMessage<T extends MessageHeader>(type?: T | null) {\n        let r: IteratorResult<Message<T>>;\n        if ((r = this.next()).done) { return null; }\n        if ((type != null) && r.value.headerType !== type) {\n            throw new Error(invalidMessageType(type));\n        }\n        return r.value;\n    }\n    public readSchema() {\n        const type = MessageHeader.Schema;\n        const message = this.readMessage(type);\n        const schema = message && message.header();\n        if (!message || !schema) {\n            throw new Error(nullMessage(type));\n        }\n        return schema;\n    }\n}\n\n/** @ignore */\nexport const PADDING = 4;\n/** @ignore */\nexport const MAGIC_STR = 'ARROW1';\n/** @ignore */\nexport const MAGIC = new Uint8Array(MAGIC_STR.length);\n\nfor (let i = 0; i < MAGIC_STR.length; i += 1 | 0) {\n    MAGIC[i] = MAGIC_STR.charCodeAt(i);\n}\n\n/** @ignore */\nexport function checkForMagicArrowString(buffer: Uint8Array, index = 0) {\n    for (let i = -1, n = MAGIC.length; ++i < n;) {\n        if (MAGIC[i] !== buffer[index + i]) {\n            return false;\n        }\n    }\n    return true;\n}\n\n/** @ignore */\nexport const magicLength = MAGIC.length;\n/** @ignore */\nexport const magicAndPadding = magicLength + PADDING;\n/** @ignore */\nexport const magicX2AndPadding = magicLength * 2 + PADDING;\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { Data } from '../data';\nimport { Vector } from '../vector';\nimport { Visitor } from '../visitor';\nimport { Type, UnionMode } from '../enum';\nimport { RecordBatch } from '../recordbatch';\nimport { VectorType as V } from '../interfaces';\nimport { rebaseValueOffsets } from '../util/buffer';\nimport { packBools, truncateBitmap } from '../util/bit';\nimport { selectVectorChildrenArgs } from '../util/args';\nimport { BufferRegion, FieldNode } from '../ipc/metadata/message';\nimport {\n    DataType, Dictionary,\n    Float, Int, Date_, Interval, Time, Timestamp, Union,\n    Bool, Null, Utf8, Binary, Decimal, FixedSizeBinary, List, FixedSizeList, Map_, Struct,\n} from '../type';\n\n/** @ignore */\nexport interface VectorAssembler extends Visitor {\n    visit<T extends Vector>(node: T): this;\n    visitMany<T extends Vector>(nodes: T[]): this[];\n    getVisitFn<T extends Type>(node: T): (vector: V<T>) => this;\n    getVisitFn<T extends DataType>(node: V<T> | Data<T> | T): (vector: V<T>) => this;\n\n    visitBool                 <T extends Bool>            (vector: V<T>): this;\n    visitInt                  <T extends Int>             (vector: V<T>): this;\n    visitFloat                <T extends Float>           (vector: V<T>): this;\n    visitUtf8                 <T extends Utf8>            (vector: V<T>): this;\n    visitBinary               <T extends Binary>          (vector: V<T>): this;\n    visitFixedSizeBinary      <T extends FixedSizeBinary> (vector: V<T>): this;\n    visitDate                 <T extends Date_>           (vector: V<T>): this;\n    visitTimestamp            <T extends Timestamp>       (vector: V<T>): this;\n    visitTime                 <T extends Time>            (vector: V<T>): this;\n    visitDecimal              <T extends Decimal>         (vector: V<T>): this;\n    visitList                 <T extends List>            (vector: V<T>): this;\n    visitStruct               <T extends Struct>          (vector: V<T>): this;\n    visitUnion                <T extends Union>           (vector: V<T>): this;\n    visitInterval             <T extends Interval>        (vector: V<T>): this;\n    visitFixedSizeList        <T extends FixedSizeList>   (vector: V<T>): this;\n    visitMap                  <T extends Map_>            (vector: V<T>): this;\n}\n\n/** @ignore */\nexport class VectorAssembler extends Visitor {\n\n    /** @nocollapse */\n    public static assemble<T extends Vector | RecordBatch>(...args: (T | T[])[]) {\n        const assembler = new VectorAssembler();\n        const vectorChildren = selectVectorChildrenArgs(RecordBatch, args);\n        const [assembleResult = assembler] = assembler.visitMany(vectorChildren);\n        return assembleResult;\n    }\n\n    private constructor() { super(); }\n\n    public visit<T extends Vector>(vector: T): this {\n        if (!DataType.isDictionary(vector.type)) {\n            const { data, length, nullCount } = vector;\n            if (length > 2147483647) {\n                /* istanbul ignore next */\n                throw new RangeError('Cannot write arrays larger than 2^31 - 1 in length');\n            }\n            if (!DataType.isNull(vector.type)) {\n                addBuffer.call(this, nullCount <= 0\n                    ? new Uint8Array(0) // placeholder validity buffer\n                    : truncateBitmap(data.offset, length, data.nullBitmap)\n                );\n            }\n            this.nodes.push(new FieldNode(length, nullCount));\n        }\n        return super.visit(vector);\n    }\n\n    public visitNull<T extends Null>(_nullV: V<T>) {\n        return this;\n    }\n    public visitDictionary<T extends Dictionary>(vector: V<T>) {\n        // Assemble the indices here, Dictionary assembled separately.\n        return this.visit(vector.indices);\n    }\n\n    public get nodes() { return this._nodes; }\n    public get buffers() { return this._buffers; }\n    public get byteLength() { return this._byteLength; }\n    public get bufferRegions() { return this._bufferRegions; }\n\n    protected _byteLength = 0;\n    protected _nodes: FieldNode[] = [];\n    protected _buffers: ArrayBufferView[] = [];\n    protected _bufferRegions: BufferRegion[] = [];\n}\n\n/** @ignore */\nfunction addBuffer(this: VectorAssembler, values: ArrayBufferView) {\n    const byteLength = (values.byteLength + 7) & ~7; // Round up to a multiple of 8\n    this.buffers.push(values);\n    this.bufferRegions.push(new BufferRegion(this._byteLength, byteLength));\n    this._byteLength += byteLength;\n    return this;\n}\n\n/** @ignore */\nfunction assembleUnion<T extends Union>(this: VectorAssembler, vector: V<T>) {\n    const { type, length, typeIds, valueOffsets } = vector;\n    // All Union Vectors have a typeIds buffer\n    addBuffer.call(this, typeIds);\n    // If this is a Sparse Union, treat it like all other Nested types\n    if (type.mode === UnionMode.Sparse) {\n        return assembleNestedVector.call(this, vector);\n    } else if (type.mode === UnionMode.Dense) {\n        // If this is a Dense Union, add the valueOffsets buffer and potentially slice the children\n        if (vector.offset <= 0) {\n            // If the Vector hasn't been sliced, write the existing valueOffsets\n            addBuffer.call(this, valueOffsets);\n            // We can treat this like all other Nested types\n            return assembleNestedVector.call(this, vector);\n        } else {\n            // A sliced Dense Union is an unpleasant case. Because the offsets are different for\n            // each child vector, we need to \"rebase\" the valueOffsets for each child\n            // Union typeIds are not necessary 0-indexed\n            const maxChildTypeId = typeIds.reduce((x, y) => Math.max(x, y), typeIds[0]);\n            const childLengths = new Int32Array(maxChildTypeId + 1);\n            // Set all to -1 to indicate that we haven't observed a first occurrence of a particular child yet\n            const childOffsets = new Int32Array(maxChildTypeId + 1).fill(-1);\n            const shiftedOffsets = new Int32Array(length);\n            // If we have a non-zero offset, then the value offsets do not start at\n            // zero. We must a) create a new offsets array with shifted offsets and\n            // b) slice the values array accordingly\n            const unshiftedOffsets = rebaseValueOffsets(-valueOffsets[0], length, valueOffsets);\n            for (let typeId, shift, index = -1; ++index < length;) {\n                if ((shift = childOffsets[typeId = typeIds[index]]) === -1) {\n                    shift = childOffsets[typeId] = unshiftedOffsets[typeId];\n                }\n                shiftedOffsets[index] = unshiftedOffsets[index] - shift;\n                ++childLengths[typeId];\n            }\n            addBuffer.call(this, shiftedOffsets);\n            // Slice and visit children accordingly\n            for (let child: Vector | null, childIndex = -1, numChildren = type.children.length; ++childIndex < numChildren;) {\n                if (child = vector.getChildAt(childIndex)) {\n                    const typeId = type.typeIds[childIndex];\n                    const childLength = Math.min(length, childLengths[typeId]);\n                    this.visit(child.slice(childOffsets[typeId], childLength));\n                }\n            }\n        }\n    }\n    return this;\n}\n\n/** @ignore */\nfunction assembleBoolVector<T extends Bool>(this: VectorAssembler, vector: V<T>) {\n    // Bool vector is a special case of FlatVector, as its data buffer needs to stay packed\n    let values: Uint8Array;\n    if (vector.nullCount >= vector.length) {\n        // If all values are null, just insert a placeholder empty data buffer (fastest path)\n        return addBuffer.call(this, new Uint8Array(0));\n    } else if ((values = vector.values) instanceof Uint8Array) {\n        // If values is already a Uint8Array, slice the bitmap (fast path)\n        return addBuffer.call(this, truncateBitmap(vector.offset, vector.length, values));\n    }\n    // Otherwise if the underlying data *isn't* a Uint8Array, enumerate the\n    // values as bools and re-pack them into a Uint8Array. This code isn't\n    // reachable unless you're trying to manipulate the Data internals,\n    // we we're only doing this for safety.\n    /* istanbul ignore next */\n    return addBuffer.call(this, packBools(vector));\n}\n\n/** @ignore */\nfunction assembleFlatVector<T extends Int | Float | FixedSizeBinary | Date_ | Timestamp | Time | Decimal | Interval>(this: VectorAssembler, vector: V<T>) {\n    return addBuffer.call(this, vector.values.subarray(0, vector.length * vector.stride));\n}\n\n/** @ignore */\nfunction assembleFlatListVector<T extends Utf8 | Binary>(this: VectorAssembler, vector: V<T>) {\n    const { length, values, valueOffsets } = vector;\n    const firstOffset = valueOffsets[0];\n    const lastOffset = valueOffsets[length];\n    const byteLength = Math.min(lastOffset - firstOffset, values.byteLength - firstOffset);\n    // Push in the order FlatList types read their buffers\n    addBuffer.call(this, rebaseValueOffsets(-valueOffsets[0], length, valueOffsets)); // valueOffsets buffer first\n    addBuffer.call(this, values.subarray(firstOffset, firstOffset + byteLength)); // sliced values buffer second\n    return this;\n}\n\n/** @ignore */\nfunction assembleListVector<T extends Map_ | List | FixedSizeList>(this: VectorAssembler, vector: V<T>) {\n    const { length, valueOffsets } = vector;\n    // If we have valueOffsets (MapVector, ListVector), push that buffer first\n    if (valueOffsets) {\n        addBuffer.call(this, rebaseValueOffsets(valueOffsets[0], length, valueOffsets));\n    }\n    // Then insert the List's values child\n    return this.visit(vector.getChildAt(0)!);\n}\n\n/** @ignore */\nfunction assembleNestedVector<T extends Struct | Union>(this: VectorAssembler, vector: V<T>) {\n    return this.visitMany(vector.type.children.map((_, i) => vector.getChildAt(i)!).filter(Boolean))[0];\n}\n\nVectorAssembler.prototype.visitBool            =     assembleBoolVector;\nVectorAssembler.prototype.visitInt             =     assembleFlatVector;\nVectorAssembler.prototype.visitFloat           =     assembleFlatVector;\nVectorAssembler.prototype.visitUtf8            = assembleFlatListVector;\nVectorAssembler.prototype.visitBinary          = assembleFlatListVector;\nVectorAssembler.prototype.visitFixedSizeBinary =     assembleFlatVector;\nVectorAssembler.prototype.visitDate            =     assembleFlatVector;\nVectorAssembler.prototype.visitTimestamp       =     assembleFlatVector;\nVectorAssembler.prototype.visitTime            =     assembleFlatVector;\nVectorAssembler.prototype.visitDecimal         =     assembleFlatVector;\nVectorAssembler.prototype.visitList            =     assembleListVector;\nVectorAssembler.prototype.visitStruct          =   assembleNestedVector;\nVectorAssembler.prototype.visitUnion           =          assembleUnion;\nVectorAssembler.prototype.visitInterval        =     assembleFlatVector;\nVectorAssembler.prototype.visitFixedSizeList   =     assembleListVector;\nVectorAssembler.prototype.visitMap             =     assembleListVector;\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { Table } from '../table';\nimport { MAGIC } from './message';\nimport { Vector } from '../vector';\nimport { Column } from '../column';\nimport { DataType } from '../type';\nimport { Schema, Field } from '../schema';\nimport { Message } from './metadata/message';\nimport * as metadata from './metadata/message';\nimport { FileBlock, Footer } from './metadata/file';\nimport { MessageHeader, MetadataVersion } from '../enum';\nimport { WritableSink, AsyncByteQueue } from '../io/stream';\nimport { VectorAssembler } from '../visitor/vectorassembler';\nimport { JSONTypeAssembler } from '../visitor/jsontypeassembler';\nimport { JSONVectorAssembler } from '../visitor/jsonvectorassembler';\nimport { ArrayBufferViewInput, toUint8Array } from '../util/buffer';\nimport { RecordBatch, _InternalEmptyPlaceholderRecordBatch } from '../recordbatch';\nimport { Writable, ReadableInterop, ReadableDOMStreamOptions } from '../io/interfaces';\nimport { isPromise, isAsyncIterable, isWritableDOMStream, isWritableNodeStream, isIterable, isObject } from '../util/compat';\n\nexport interface RecordBatchStreamWriterOptions {\n    /**\n     *\n     */\n    autoDestroy?: boolean;\n    /**\n     * A flag indicating whether the RecordBatchWriter should construct pre-0.15.0\n     * encapsulated IPC Messages, which reserves  4 bytes for the Message metadata\n     * length instead of 8.\n     * @see https://issues.apache.org/jira/browse/ARROW-6313\n     */\n    writeLegacyIpcFormat?: boolean;\n}\n\nexport class RecordBatchWriter<T extends { [key: string]: DataType } = any> extends ReadableInterop<Uint8Array> implements Writable<RecordBatch<T>> {\n\n    /** @nocollapse */\n    // @ts-ignore\n    public static throughNode(options?: import('stream').DuplexOptions & { autoDestroy: boolean }): import('stream').Duplex {\n        throw new Error(`\"throughNode\" not available in this environment`);\n    }\n    /** @nocollapse */\n    public static throughDOM<T extends { [key: string]: DataType }>(\n        // @ts-ignore\n        writableStrategy?: QueuingStrategy<RecordBatch<T>> & { autoDestroy: boolean },\n        // @ts-ignore\n        readableStrategy?: { highWaterMark?: number, size?: any }\n    ): { writable: WritableStream<Table<T> | RecordBatch<T>>, readable: ReadableStream<Uint8Array> } {\n        throw new Error(`\"throughDOM\" not available in this environment`);\n    }\n\n    constructor(options?: RecordBatchStreamWriterOptions) {\n        super();\n        isObject(options) || (options = { autoDestroy: true, writeLegacyIpcFormat: false });\n        this._autoDestroy = (typeof options.autoDestroy === 'boolean') ? options.autoDestroy : true;\n        this._writeLegacyIpcFormat = (typeof options.writeLegacyIpcFormat === 'boolean') ? options.writeLegacyIpcFormat : false;\n    }\n\n    protected _position = 0;\n    protected _started = false;\n    protected _autoDestroy: boolean;\n    protected _writeLegacyIpcFormat: boolean;\n    // @ts-ignore\n    protected _sink = new AsyncByteQueue();\n    protected _schema: Schema | null = null;\n    protected _dictionaryBlocks: FileBlock[] = [];\n    protected _recordBatchBlocks: FileBlock[] = [];\n    protected _dictionaryDeltaOffsets = new Map<number, number>();\n\n    public toString(sync: true): string;\n    public toString(sync?: false): Promise<string>;\n    public toString(sync: any = false) {\n        return this._sink.toString(sync) as Promise<string> | string;\n    }\n    public toUint8Array(sync: true): Uint8Array;\n    public toUint8Array(sync?: false): Promise<Uint8Array>;\n    public toUint8Array(sync: any = false) {\n        return this._sink.toUint8Array(sync) as Promise<Uint8Array> | Uint8Array;\n    }\n\n    public writeAll(input: Table<T> | Iterable<RecordBatch<T>>): this;\n    public writeAll(input: AsyncIterable<RecordBatch<T>>): Promise<this>;\n    public writeAll(input: PromiseLike<AsyncIterable<RecordBatch<T>>>): Promise<this>;\n    public writeAll(input: PromiseLike<Table<T> | Iterable<RecordBatch<T>>>): Promise<this>;\n    public writeAll(input: PromiseLike<any> | Table<T> | Iterable<RecordBatch<T>> | AsyncIterable<RecordBatch<T>>) {\n        if (isPromise<any>(input)) {\n            return input.then((x) => this.writeAll(x));\n        } else if (isAsyncIterable<RecordBatch<T>>(input)) {\n            return writeAllAsync(this, input);\n        }\n        return writeAll(this, <any> input);\n    }\n\n    public get closed() { return this._sink.closed; }\n    public [Symbol.asyncIterator]() { return this._sink[Symbol.asyncIterator](); }\n    public toDOMStream(options?: ReadableDOMStreamOptions) { return this._sink.toDOMStream(options); }\n    public toNodeStream(options?: import('stream').ReadableOptions) { return this._sink.toNodeStream(options); }\n\n    public close() {\n        return this.reset()._sink.close();\n    }\n    public abort(reason?: any) {\n        return this.reset()._sink.abort(reason);\n    }\n    public finish() {\n        this._autoDestroy ? this.close() : this.reset(this._sink, this._schema);\n        return this;\n    }\n    public reset(sink: WritableSink<ArrayBufferViewInput> = this._sink, schema: Schema<T> | null = null) {\n\n        if ((sink === this._sink) || (sink instanceof AsyncByteQueue)) {\n            this._sink = sink as AsyncByteQueue;\n        } else {\n            this._sink = new AsyncByteQueue();\n            if (sink && isWritableDOMStream(sink)) {\n                this.toDOMStream({ type: 'bytes' }).pipeTo(sink);\n            } else if (sink && isWritableNodeStream(sink)) {\n                this.toNodeStream({ objectMode: false }).pipe(sink);\n            }\n        }\n\n        if (this._started && this._schema) {\n            this._writeFooter(this._schema);\n        }\n\n        this._started = false;\n        this._dictionaryBlocks = [];\n        this._recordBatchBlocks = [];\n        this._dictionaryDeltaOffsets = new Map();\n\n        if (!schema || !(schema.compareTo(this._schema))) {\n            if (schema === null) {\n                this._position = 0;\n                this._schema = null;\n            } else {\n                this._started = true;\n                this._schema = schema;\n                this._writeSchema(schema);\n            }\n        }\n\n        return this;\n    }\n\n    public write(payload?: Table<T> | RecordBatch<T> | Iterable<RecordBatch<T>> | null) {\n\n        let schema: Schema<T> | null = null;\n\n        if (!this._sink) {\n            throw new Error(`RecordBatchWriter is closed`);\n        } else if (payload === null || payload === undefined) {\n            return this.finish() && undefined;\n        } else if (payload instanceof Table && !(schema = payload.schema)) {\n            return this.finish() && undefined;\n        } else if (payload instanceof RecordBatch && !(schema = payload.schema)) {\n            return this.finish() && undefined;\n        }\n\n        if (schema && !schema.compareTo(this._schema)) {\n            if (this._started && this._autoDestroy) {\n                return this.close();\n            }\n            this.reset(this._sink, schema);\n        }\n\n        if (payload instanceof RecordBatch) {\n            if (!(payload instanceof _InternalEmptyPlaceholderRecordBatch)) {\n                this._writeRecordBatch(payload);\n            }\n        } else if (payload instanceof Table) {\n            this.writeAll(payload.chunks);\n        } else if (isIterable(payload)) {\n            this.writeAll(payload);\n        }\n    }\n\n    protected _writeMessage<T extends MessageHeader>(message: Message<T>, alignment = 8) {\n\n        const a = alignment - 1;\n        const buffer = Message.encode(message);\n        const flatbufferSize = buffer.byteLength;\n        const prefixSize = !this._writeLegacyIpcFormat ? 8 : 4;\n        const alignedSize = (flatbufferSize + prefixSize + a) & ~a;\n        const nPaddingBytes = alignedSize - flatbufferSize - prefixSize;\n\n        if (message.headerType === MessageHeader.RecordBatch) {\n            this._recordBatchBlocks.push(new FileBlock(alignedSize, message.bodyLength, this._position));\n        } else if (message.headerType === MessageHeader.DictionaryBatch) {\n            this._dictionaryBlocks.push(new FileBlock(alignedSize, message.bodyLength, this._position));\n        }\n\n        // If not in legacy pre-0.15.0 mode, write the stream continuation indicator\n        if (!this._writeLegacyIpcFormat) {\n            this._write(Int32Array.of(-1));\n        }\n        // Write the flatbuffer size prefix including padding\n        this._write(Int32Array.of(alignedSize - prefixSize));\n        // Write the flatbuffer\n        if (flatbufferSize > 0) { this._write(buffer); }\n        // Write any padding\n        return this._writePadding(nPaddingBytes);\n    }\n\n    protected _write(chunk: ArrayBufferViewInput) {\n        if (this._started) {\n            const buffer = toUint8Array(chunk);\n            if (buffer && buffer.byteLength > 0) {\n                this._sink.write(buffer);\n                this._position += buffer.byteLength;\n            }\n        }\n        return this;\n    }\n\n    protected _writeSchema(schema: Schema<T>) {\n        return this._writeMessage(Message.from(schema));\n    }\n\n    // @ts-ignore\n    protected _writeFooter(schema: Schema<T>) {\n        // eos bytes\n        return this._writeLegacyIpcFormat\n            ? this._write(Int32Array.of(0))\n            : this._write(Int32Array.of(-1, 0));\n    }\n\n    protected _writeMagic() {\n        return this._write(MAGIC);\n    }\n\n    protected _writePadding(nBytes: number) {\n        return nBytes > 0 ? this._write(new Uint8Array(nBytes)) : this;\n    }\n\n    protected _writeRecordBatch(batch: RecordBatch<T>) {\n        const { byteLength, nodes, bufferRegions, buffers } = VectorAssembler.assemble(batch);\n        const recordBatch = new metadata.RecordBatch(batch.length, nodes, bufferRegions);\n        const message = Message.from(recordBatch, byteLength);\n        return this\n            ._writeDictionaries(batch)\n            ._writeMessage(message)\n            ._writeBodyBuffers(buffers);\n    }\n\n    protected _writeDictionaryBatch(dictionary: Vector, id: number, isDelta = false) {\n        this._dictionaryDeltaOffsets.set(id, dictionary.length + (this._dictionaryDeltaOffsets.get(id) || 0));\n        const { byteLength, nodes, bufferRegions, buffers } = VectorAssembler.assemble(dictionary);\n        const recordBatch = new metadata.RecordBatch(dictionary.length, nodes, bufferRegions);\n        const dictionaryBatch = new metadata.DictionaryBatch(recordBatch, id, isDelta);\n        const message = Message.from(dictionaryBatch, byteLength);\n        return this\n            ._writeMessage(message)\n            ._writeBodyBuffers(buffers);\n    }\n\n    protected _writeBodyBuffers(buffers: ArrayBufferView[]) {\n        let buffer: ArrayBufferView;\n        let size: number, padding: number;\n        for (let i = -1, n = buffers.length; ++i < n;) {\n            if ((buffer = buffers[i]) && (size = buffer.byteLength) > 0) {\n                this._write(buffer);\n                if ((padding = ((size + 7) & ~7) - size) > 0) {\n                    this._writePadding(padding);\n                }\n            }\n        }\n        return this;\n    }\n\n    protected _writeDictionaries(batch: RecordBatch<T>) {\n        for (let [id, dictionary] of batch.dictionaries) {\n            let offset = this._dictionaryDeltaOffsets.get(id) || 0;\n            if (offset === 0 || (dictionary = dictionary.slice(offset)).length > 0) {\n                const chunks = 'chunks' in dictionary ? (dictionary as any).chunks : [dictionary];\n                for (const chunk of chunks) {\n                    this._writeDictionaryBatch(chunk, id, offset > 0);\n                    offset += chunk.length;\n                }\n            }\n        }\n        return this;\n    }\n}\n\n/** @ignore */\nexport class RecordBatchStreamWriter<T extends { [key: string]: DataType } = any> extends RecordBatchWriter<T> {\n    public static writeAll<T extends { [key: string]: DataType } = any>(input: Table<T> | Iterable<RecordBatch<T>>, options?: RecordBatchStreamWriterOptions): RecordBatchStreamWriter<T>;\n    public static writeAll<T extends { [key: string]: DataType } = any>(input: AsyncIterable<RecordBatch<T>>, options?: RecordBatchStreamWriterOptions): Promise<RecordBatchStreamWriter<T>>;\n    public static writeAll<T extends { [key: string]: DataType } = any>(input: PromiseLike<AsyncIterable<RecordBatch<T>>>, options?: RecordBatchStreamWriterOptions): Promise<RecordBatchStreamWriter<T>>;\n    public static writeAll<T extends { [key: string]: DataType } = any>(input: PromiseLike<Table<T> | Iterable<RecordBatch<T>>>, options?: RecordBatchStreamWriterOptions): Promise<RecordBatchStreamWriter<T>>;\n    /** @nocollapse */\n    public static writeAll<T extends { [key: string]: DataType } = any>(input: any, options?: RecordBatchStreamWriterOptions) {\n        const writer = new RecordBatchStreamWriter<T>(options);\n        if (isPromise<any>(input)) {\n            return input.then((x) => writer.writeAll(x));\n        } else if (isAsyncIterable<RecordBatch<T>>(input)) {\n            return writeAllAsync(writer, input);\n        }\n        return writeAll(writer, input);\n    }\n}\n\n/** @ignore */\nexport class RecordBatchFileWriter<T extends { [key: string]: DataType } = any> extends RecordBatchWriter<T> {\n    public static writeAll<T extends { [key: string]: DataType } = any>(input: Table<T> | Iterable<RecordBatch<T>>): RecordBatchFileWriter<T>;\n    public static writeAll<T extends { [key: string]: DataType } = any>(input: AsyncIterable<RecordBatch<T>>): Promise<RecordBatchFileWriter<T>>;\n    public static writeAll<T extends { [key: string]: DataType } = any>(input: PromiseLike<AsyncIterable<RecordBatch<T>>>): Promise<RecordBatchFileWriter<T>>;\n    public static writeAll<T extends { [key: string]: DataType } = any>(input: PromiseLike<Table<T> | Iterable<RecordBatch<T>>>): Promise<RecordBatchFileWriter<T>>;\n    /** @nocollapse */\n    public static writeAll<T extends { [key: string]: DataType } = any>(input: any) {\n        const writer = new RecordBatchFileWriter<T>();\n        if (isPromise<any>(input)) {\n            return input.then((x) => writer.writeAll(x));\n        } else if (isAsyncIterable<RecordBatch<T>>(input)) {\n            return writeAllAsync(writer, input);\n        }\n        return writeAll(writer, input);\n    }\n\n    constructor() {\n        super();\n        this._autoDestroy = true;\n    }\n\n    // @ts-ignore\n    protected _writeSchema(schema: Schema<T>) {\n        return this._writeMagic()._writePadding(2);\n    }\n\n    protected _writeFooter(schema: Schema<T>) {\n        const buffer = Footer.encode(new Footer(\n            schema, MetadataVersion.V4,\n            this._recordBatchBlocks, this._dictionaryBlocks\n        ));\n        return super\n            ._writeFooter(schema) // EOS bytes for sequential readers\n            ._write(buffer) // Write the flatbuffer\n            ._write(Int32Array.of(buffer.byteLength)) // then the footer size suffix\n            ._writeMagic(); // then the magic suffix\n    }\n}\n\n/** @ignore */\nexport class RecordBatchJSONWriter<T extends { [key: string]: DataType } = any> extends RecordBatchWriter<T> {\n\n    public static writeAll<T extends { [key: string]: DataType } = any>(this: typeof RecordBatchWriter, input: Table<T> | Iterable<RecordBatch<T>>): RecordBatchJSONWriter<T>;\n    // @ts-ignore\n    public static writeAll<T extends { [key: string]: DataType } = any>(this: typeof RecordBatchWriter, input: AsyncIterable<RecordBatch<T>>): Promise<RecordBatchJSONWriter<T>>;\n    public static writeAll<T extends { [key: string]: DataType } = any>(this: typeof RecordBatchWriter, input: PromiseLike<AsyncIterable<RecordBatch<T>>>): Promise<RecordBatchJSONWriter<T>>;\n    public static writeAll<T extends { [key: string]: DataType } = any>(this: typeof RecordBatchWriter, input: PromiseLike<Table<T> | Iterable<RecordBatch<T>>>): Promise<RecordBatchJSONWriter<T>>;\n    /** @nocollapse */\n    public static writeAll<T extends { [key: string]: DataType } = any>(this: typeof RecordBatchWriter, input: any) {\n        return new RecordBatchJSONWriter<T>().writeAll(input as any);\n    }\n\n    private _recordBatches: RecordBatch[];\n    private _dictionaries: RecordBatch[];\n\n    constructor() {\n        super();\n        this._autoDestroy = true;\n        this._recordBatches = [];\n        this._dictionaries = [];\n    }\n\n    protected _writeMessage() { return this; }\n    // @ts-ignore\n    protected _writeFooter(schema: Schema<T>) { return this; }\n    protected _writeSchema(schema: Schema<T>) {\n        return this._write(`{\\n  \"schema\": ${\n            JSON.stringify({ fields: schema.fields.map(fieldToJSON) }, null, 2)\n        }`);\n    }\n    protected _writeDictionaries(batch: RecordBatch<T>) {\n        if (batch.dictionaries.size > 0) {\n            this._dictionaries.push(batch);\n        }\n        return this;\n    }\n    protected _writeDictionaryBatch(dictionary: Vector, id: number, isDelta = false) {\n        this._dictionaryDeltaOffsets.set(id, dictionary.length + (this._dictionaryDeltaOffsets.get(id) || 0));\n        this._write(this._dictionaryBlocks.length === 0 ? `    ` : `,\\n    `);\n        this._write(`${dictionaryBatchToJSON(dictionary, id, isDelta)}`);\n        this._dictionaryBlocks.push(new FileBlock(0, 0, 0));\n        return this;\n    }\n    protected _writeRecordBatch(batch: RecordBatch<T>) {\n        this._writeDictionaries(batch);\n        this._recordBatches.push(batch);\n        return this;\n    }\n    public close() {\n\n        if (this._dictionaries.length > 0) {\n            this._write(`,\\n  \"dictionaries\": [\\n`);\n            for (const batch of this._dictionaries) {\n                super._writeDictionaries(batch);\n            }\n            this._write(`\\n  ]`);\n        }\n\n        if (this._recordBatches.length > 0) {\n            for (let i = -1, n = this._recordBatches.length; ++i < n;) {\n                this._write(i === 0 ? `,\\n  \"batches\": [\\n    ` : `,\\n    `);\n                this._write(`${recordBatchToJSON(this._recordBatches[i])}`);\n                this._recordBatchBlocks.push(new FileBlock(0, 0, 0));\n            }\n            this._write(`\\n  ]`);\n        }\n\n        if (this._schema) {\n            this._write(`\\n}`);\n        }\n\n        this._dictionaries = [];\n        this._recordBatches = [];\n\n        return super.close();\n    }\n}\n\n/** @ignore */\nfunction writeAll<T extends { [key: string]: DataType } = any>(writer: RecordBatchWriter<T>, input: Table<T> | Iterable<RecordBatch<T>>) {\n    let chunks = input as Iterable<RecordBatch<T>>;\n    if (input instanceof Table) {\n        chunks = input.chunks;\n        writer.reset(undefined, input.schema);\n    }\n    for (const batch of chunks) {\n        writer.write(batch);\n    }\n    return writer.finish();\n}\n\n/** @ignore */\nasync function writeAllAsync<T extends { [key: string]: DataType } = any>(writer: RecordBatchWriter<T>, batches: AsyncIterable<RecordBatch<T>>) {\n    for await (const batch of batches) {\n        writer.write(batch);\n    }\n    return writer.finish();\n}\n\n/** @ignore */\nfunction fieldToJSON({ name, type, nullable }: Field): object {\n    const assembler = new JSONTypeAssembler();\n    return {\n        'name': name, 'nullable': nullable,\n        'type': assembler.visit(type),\n        'children': (type.children || []).map(fieldToJSON),\n        'dictionary': !DataType.isDictionary(type) ? undefined : {\n            'id': type.id,\n            'isOrdered': type.isOrdered,\n            'indexType': assembler.visit(type.indices)\n        }\n    };\n}\n\n/** @ignore */\nfunction dictionaryBatchToJSON(dictionary: Vector, id: number, isDelta = false) {\n    const field = new Field(`${id}`, dictionary.type, dictionary.nullCount > 0);\n    const columns = JSONVectorAssembler.assemble(new Column(field, [dictionary]));\n    return JSON.stringify({\n        'id': id,\n        'isDelta': isDelta,\n        'data': {\n            'count': dictionary.length,\n            'columns': columns\n        }\n    }, null, 2);\n}\n\n/** @ignore */\nfunction recordBatchToJSON(records: RecordBatch) {\n    return JSON.stringify({\n        'count': records.length,\n        'columns': JSONVectorAssembler.assemble(records)\n    }, null, 2);\n}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { Column } from '../column';\nimport { Vector } from '../vector';\nimport { DataType } from '../type';\nimport { Data, Buffers } from '../data';\nimport { Schema, Field } from '../schema';\nimport { Chunked } from '../vector/chunked';\nimport { RecordBatch } from '../recordbatch';\n\nconst noopBuf = new Uint8Array(0);\nconst nullBufs = (bitmapLength: number) => <unknown> [\n    noopBuf, noopBuf, new Uint8Array(bitmapLength), noopBuf\n] as Buffers<any>;\n\n/** @ignore */\nexport function ensureSameLengthData<T extends { [key: string]: DataType } = any>(\n    schema: Schema<T>,\n    chunks: Data<T[keyof T]>[],\n    batchLength = chunks.reduce((l, c) => Math.max(l, c.length), 0)\n) {\n    let data: Data<T[keyof T]>;\n    let field: Field<T[keyof T]>;\n    let i = -1, n = chunks.length;\n    const fields = [...schema.fields];\n    const batchData = [] as Data<T[keyof T]>[];\n    const bitmapLength = ((batchLength + 63) & ~63) >> 3;\n    while (++i < n) {\n        if ((data = chunks[i]) && data.length === batchLength) {\n            batchData[i] = data;\n        } else {\n            (field = fields[i]).nullable || (fields[i] = fields[i].clone({ nullable: true }) as Field<T[keyof T]>);\n            batchData[i] = data ? data._changeLengthAndBackfillNullBitmap(batchLength)\n                : Data.new(field.type, 0, batchLength, batchLength, nullBufs(bitmapLength)) as Data<T[keyof T]>;\n        }\n    }\n    return [new Schema<T>(fields), batchLength, batchData] as [Schema<T>, number, Data<T[keyof T]>[]];\n}\n\n/** @ignore */\nexport function distributeColumnsIntoRecordBatches<T extends { [key: string]: DataType } = any>(columns: Column<T[keyof T]>[]): [Schema<T>, RecordBatch<T>[]] {\n    return distributeVectorsIntoRecordBatches<T>(new Schema<T>(columns.map(({ field }) => field)), columns);\n}\n\n/** @ignore */\nexport function distributeVectorsIntoRecordBatches<T extends { [key: string]: DataType } = any>(schema: Schema<T>, vecs: (Vector<T[keyof T]> | Chunked<T[keyof T]>)[]): [Schema<T>, RecordBatch<T>[]] {\n    return uniformlyDistributeChunksAcrossRecordBatches<T>(schema, vecs.map((v) => v instanceof Chunked ? v.chunks.map((c) => c.data) : [v.data]));\n}\n\n/** @ignore */\nfunction uniformlyDistributeChunksAcrossRecordBatches<T extends { [key: string]: DataType } = any>(schema: Schema<T>, columns: Data<T[keyof T]>[][]): [Schema<T>, RecordBatch<T>[]] {\n\n    const fields = [...schema.fields];\n    const batchArgs = [] as [number, Data<T[keyof T]>[]][];\n    const memo = { numBatches: columns.reduce((n, c) => Math.max(n, c.length), 0) };\n\n    let numBatches = 0, batchLength = 0;\n    let i: number = -1, numColumns = columns.length;\n    let child: Data<T[keyof T]>, childData: Data<T[keyof T]>[] = [];\n\n    while (memo.numBatches-- > 0) {\n\n        for (batchLength = Number.POSITIVE_INFINITY, i = -1; ++i < numColumns;) {\n            childData[i] = child = columns[i].shift()!;\n            batchLength = Math.min(batchLength, child ? child.length : batchLength);\n        }\n\n        if (isFinite(batchLength)) {\n            childData = distributeChildData(fields, batchLength, childData, columns, memo);\n            if (batchLength > 0) {\n                batchArgs[numBatches++] = [batchLength, childData.slice()];\n            }\n        }\n    }\n    return [\n        schema = new Schema<T>(fields, schema.metadata),\n        batchArgs.map((xs) => new RecordBatch(schema, ...xs))\n    ];\n}\n\n/** @ignore */\nfunction distributeChildData<T extends { [key: string]: DataType } = any>(fields: Field<T[keyof T]>[], batchLength: number, childData: Data<T[keyof T]>[], columns: Data<T[keyof T]>[][], memo: { numBatches: number }) {\n    let data: Data<T[keyof T]>;\n    let field: Field<T[keyof T]>;\n    let length = 0, i = -1, n = columns.length;\n    const bitmapLength = ((batchLength + 63) & ~63) >> 3;\n    while (++i < n) {\n        if ((data = childData[i]) && ((length = data.length) >= batchLength)) {\n            if (length === batchLength) {\n                childData[i] = data;\n            } else {\n                childData[i] = data.slice(0, batchLength);\n                data = data.slice(batchLength, length - batchLength);\n                memo.numBatches = Math.max(memo.numBatches, columns[i].unshift(data));\n            }\n        } else {\n            (field = fields[i]).nullable || (fields[i] = field.clone({ nullable: true }) as Field<T[keyof T]>);\n            childData[i] = data ? data._changeLengthAndBackfillNullBitmap(batchLength)\n                : Data.new(field.type, 0, batchLength, batchLength, nullBufs(bitmapLength)) as Data<T[keyof T]>;\n        }\n    }\n    return childData;\n}\n","import objectWithoutPropertiesLoose from \"./objectWithoutPropertiesLoose.js\";\nexport default function _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n  var target = objectWithoutPropertiesLoose(source, excluded);\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}","export default function _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { Data } from '../data';\nimport { Type } from '../enum';\nimport { DataType } from '../type';\nimport { Chunked } from './chunked';\nimport { clampRange } from '../util/vector';\nimport { VectorType as V } from '../interfaces';\nimport { AbstractVector, Vector, Clonable, Sliceable, Applicative } from '../vector';\n\n/** @ignore */\nexport interface BaseVector<T extends DataType = any> extends Clonable<V<T>>, Sliceable<V<T>>, Applicative<T, Chunked<T>> {\n    slice(begin?: number, end?: number): V<T>;\n    concat(...others: Vector<T>[]): Chunked<T>;\n    clone<R extends DataType = T>(data: Data<R>, children?: Vector<R>[]): V<R>;\n}\n\n/** @ignore */\nexport abstract class BaseVector<T extends DataType = any> extends AbstractVector<T>\n    implements Clonable<V<T>>, Sliceable<V<T>>, Applicative<T, Chunked<T>> {\n\n    protected _children?: Vector[];\n\n    constructor(data: Data<T>, children?: Vector[]) {\n        super();\n        this._children = children;\n        this.numChildren = data.childData.length;\n        this._bindDataAccessors(this.data = data);\n    }\n\n    public readonly data: Data<T>;\n    public readonly numChildren: number;\n\n    public get type() { return this.data.type; }\n    public get typeId() { return this.data.typeId; }\n    public get length() { return this.data.length; }\n    public get offset() { return this.data.offset; }\n    public get stride() { return this.data.stride; }\n    public get nullCount() { return this.data.nullCount; }\n    public get byteLength() { return this.data.byteLength; }\n    public get VectorName() { return `${Type[this.typeId]}Vector`; }\n\n    public get ArrayType(): T['ArrayType'] { return this.type.ArrayType; }\n\n    public get values() { return this.data.values; }\n    public get typeIds() { return this.data.typeIds; }\n    public get nullBitmap() { return this.data.nullBitmap; }\n    public get valueOffsets() { return this.data.valueOffsets; }\n\n    public get [Symbol.toStringTag]() { return `${this.VectorName}<${this.type[Symbol.toStringTag]}>`; }\n\n    public clone<R extends DataType = T>(data: Data<R>, children = this._children) {\n        return Vector.new<R>(data, children) as any;\n    }\n\n    public concat(...others: Vector<T>[]) {\n        return Chunked.concat<T>(this, ...others);\n    }\n\n    public slice(begin?: number, end?: number) {\n        // Adjust args similar to Array.prototype.slice. Normalize begin/end to\n        // clamp between 0 and length, and wrap around on negative indices, e.g.\n        // slice(-1, 5) or slice(5, -1)\n        return clampRange(this, begin, end, this._sliceInternal);\n    }\n\n    public isValid(index: number): boolean {\n        if (this.nullCount > 0) {\n            const idx = this.offset + index;\n            const val = this.nullBitmap[idx >> 3];\n            const mask = (val & (1 << (idx % 8)));\n            return mask !== 0;\n        }\n        return true;\n    }\n\n    public getChildAt<R extends DataType = any>(index: number): Vector<R> | null {\n        return index < 0 || index >= this.numChildren ? null : (\n            (this._children || (this._children = []))[index] ||\n            (this._children[index] = Vector.new<R>(this.data.childData[index] as Data<R>))\n        ) as Vector<R>;\n    }\n\n    public toJSON(): any { return [...this]; }\n\n    protected _sliceInternal(self: this, begin: number, end: number) {\n        return self.clone(self.data.slice(begin, end - begin), null!);\n    }\n\n    // @ts-ignore\n    protected _bindDataAccessors(data: Data<T>) {\n        // Implementation in src/vectors/index.ts due to circular dependency/packaging shenanigans\n    }\n}\n\n(BaseVector.prototype as any)[Symbol.isConcatSpreadable] = true;\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { Vector } from '../vector';\nimport { BaseVector } from './base';\nimport { Binary, Utf8 } from '../type';\n\n/** @ignore */\nexport class BinaryVector extends BaseVector<Binary> {\n    public asUtf8() {\n        return Vector.new(this.data.clone(new Utf8()));\n    }\n}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { Bool } from '../type';\nimport { Chunked } from './chunked';\nimport { BaseVector } from './base';\nimport { VectorBuilderOptions } from './index';\nimport { vectorFromValuesWithType } from './index';\nimport { VectorBuilderOptionsAsync } from './index';\n\n/** @ignore */\nexport class BoolVector extends BaseVector<Bool> {\n    public static from<TNull = any>(input: Iterable<boolean | TNull>): BoolVector;\n    public static from<TNull = any>(input: AsyncIterable<boolean | TNull>): Promise<BoolVector>;\n    public static from<TNull = any>(input: VectorBuilderOptions<Bool, TNull>): Chunked<Bool>;\n    public static from<TNull = any>(input: VectorBuilderOptionsAsync<Bool, TNull>): Promise<Chunked<Bool>>;\n    /** @nocollapse */\n    public static from<TNull = any>(input: Iterable<boolean | TNull> | AsyncIterable<boolean | TNull> | VectorBuilderOptions<Bool, TNull> | VectorBuilderOptionsAsync<Bool, TNull>) {\n        return vectorFromValuesWithType(() => new Bool(), input);\n    }\n}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { DateUnit } from '../enum';\nimport { Chunked } from './chunked';\nimport { BaseVector } from './base';\nimport { VectorType as V } from '../interfaces';\nimport { VectorBuilderOptions } from './index';\nimport { vectorFromValuesWithType } from './index';\nimport { VectorBuilderOptionsAsync } from './index';\nimport { Date_, DateDay, DateMillisecond  } from '../type';\n\n/** @ignore */\ntype FromArgs<T extends Date_> = [Iterable<Date>, T['unit']];\n\n/** @ignore */\nexport class DateVector<T extends Date_ = Date_> extends BaseVector<T> {\n    public static from<T extends DateUnit.DAY>(...args: FromArgs<DateDay>): V<DateDay>;\n    public static from<T extends DateUnit.MILLISECOND>(...args: FromArgs<DateMillisecond>): V<DateMillisecond>;\n    public static from<T extends Date_, TNull = any>(input: Iterable<Date | TNull>): V<T>;\n    public static from<T extends Date_, TNull = any>(input: AsyncIterable<Date | TNull>): Promise<V<T>>;\n    public static from<T extends Date_, TNull = any>(input: VectorBuilderOptions<T, TNull>): Chunked<T>;\n    public static from<T extends Date_, TNull = any>(input: VectorBuilderOptionsAsync<T, TNull>): Promise<Chunked<T>>;\n    /** @nocollapse */\n    public static from<T extends Date_, TNull = any>(...args: FromArgs<T> | [Iterable<Date | TNull> | AsyncIterable<Date | TNull> | VectorBuilderOptions<T, TNull> | VectorBuilderOptionsAsync<T, TNull>]) {\n        if (args.length === 2) {\n            return vectorFromValuesWithType(() => args[1] === DateUnit.DAY ? new DateDay() : new DateMillisecond() as T, args[0]);\n        }\n        return vectorFromValuesWithType(() => new DateMillisecond() as T, args[0]);\n    }\n}\n\n/** @ignore */\nexport class DateDayVector extends DateVector<DateDay> {}\n\n/** @ignore */\nexport class DateMillisecondVector extends DateVector<DateMillisecond> {}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { Decimal } from '../type';\nimport { BaseVector } from './base';\n\n/** @ignore */\nexport class DecimalVector extends BaseVector<Decimal> {}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { Data } from '../data';\nimport { Vector } from '../vector';\nimport { BaseVector } from './base';\nimport { VectorType as V } from '../interfaces';\nimport { VectorBuilderOptions } from './index';\nimport { vectorFromValuesWithType } from './index';\nimport { VectorBuilderOptionsAsync } from './index';\nimport { DataType, Dictionary, TKeys } from '../type';\n\n/** @ignore */\ntype FromArgs<T extends DataType = any, TKey extends TKeys = TKeys> = [Vector<T>, TKey, ArrayLike<number> | TKey['TArray']];\n\n/** @ignore */\nexport class DictionaryVector<T extends DataType = any, TKey extends TKeys = TKeys> extends BaseVector<Dictionary<T, TKey>> {\n    public static from<T extends DataType = any, TKey extends TKeys = TKeys>(...args: FromArgs<T, TKey>): V<Dictionary<T, TKey>>;\n    public static from<T extends DataType = any, TKey extends TKeys = TKeys>(input: VectorBuilderOptions<Dictionary<T, TKey>>): Vector<Dictionary<T, TKey>>;\n    public static from<T extends DataType = any, TKey extends TKeys = TKeys>(input: VectorBuilderOptionsAsync<Dictionary<T, TKey>>): Promise<Vector<Dictionary<T, TKey>>>;\n    /** @nocollapse */\n    public static from<T extends DataType = any, TKey extends TKeys = TKeys>(...args: any[]) {\n        if (args.length === 3) {\n            const [values, indices, keys] = args as FromArgs<T, TKey>;\n            const type = new Dictionary(values.type, indices, null, null);\n            return Vector.new(Data.Dictionary(type, 0, keys.length, 0, null, keys, values));\n        }\n        return vectorFromValuesWithType(() => args[0].type, args[0]);\n    }\n\n    constructor(data: Data<Dictionary<T, TKey>>) {\n        super(data);\n        this.indices = Vector.new(data.clone(this.type.indices));\n    }\n\n    public readonly indices: V<TKey>;\n\n    public get dictionary() { return <Vector<T>> this.data.dictionary; }\n    public reverseLookup(value: T) { return this.dictionary.indexOf(value); }\n    public getKey(idx: number): TKey['TValue'] | null { return this.indices.get(idx); }\n    public getValue(key: number): T['TValue'] | null { return this.dictionary.get(key); }\n    public setKey(idx: number, key: TKey['TValue'] | null) { return this.indices.set(idx, key); }\n    public setValue(key: number, value: T['TValue'] | null) { return this.dictionary.set(key, value); }\n}\n\n(DictionaryVector.prototype as any).indices = null;\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { BaseVector } from './base';\nimport { FixedSizeBinary } from '../type';\n\n/** @ignore */\nexport class FixedSizeBinaryVector extends BaseVector<FixedSizeBinary> {}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { BaseVector } from './base';\nimport { DataType, FixedSizeList } from '../type';\n\n/** @ignore */\nexport class FixedSizeListVector<T extends DataType = any> extends BaseVector<FixedSizeList<T>> {}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { Data } from '../data';\nimport { Vector } from '../vector';\nimport { Chunked } from './chunked';\nimport { BaseVector } from './base';\nimport { VectorBuilderOptions } from './index';\nimport { vectorFromValuesWithType } from './index';\nimport { VectorBuilderOptionsAsync } from './index';\nimport { Float, Float16, Float32, Float64, FloatArray } from '../type';\nimport { VectorType as V, TypedArrayConstructor } from '../interfaces';\n\n/** @ignore */\ntype FloatVectorConstructors =\n    typeof FloatVector   |\n    typeof Float16Vector |\n    typeof Float32Vector |\n    typeof Float64Vector ;\n\n/** @ignore */\ntype FromInput<T extends Float, TNull = any> =\n    FloatArray                          |\n    Iterable<T['TValue'] | TNull>       |\n    AsyncIterable<T['TValue'] | TNull>  |\n    VectorBuilderOptions<T, TNull>      |\n    VectorBuilderOptionsAsync<T, TNull> ;\n\n/** @ignore */\ntype FloatArrayCtor = TypedArrayConstructor<FloatArray>;\n\n/** @ignore */\nexport class FloatVector<T extends Float = Float> extends BaseVector<T> {\n\n    // Guaranteed zero-copy variants\n    public static from(this: typeof FloatVector, input: Uint16Array): Float16Vector;\n    public static from(this: typeof FloatVector, input: Float32Array): Float32Vector;\n    public static from(this: typeof FloatVector, input: Float64Array): Float64Vector;\n\n    // Zero-copy if input is a TypedArray of the same type as the\n    // Vector that from is called on, otherwise uses the Builders\n    public static from<TNull = any>(this: typeof Float16Vector,  input: FromInput<Float16, TNull>): Float16Vector;\n    public static from<TNull = any>(this: typeof Float32Vector,  input: FromInput<Float32, TNull>): Float32Vector;\n    public static from<TNull = any>(this: typeof Float64Vector,  input: FromInput<Float64, TNull>): Float64Vector;\n\n    // Not zero-copy\n    public static from<T extends Float, TNull = any>(this: typeof FloatVector, input: Iterable<T['TValue'] | TNull>): V<T>;\n    public static from<T extends Float, TNull = any>(this: typeof FloatVector, input: AsyncIterable<T['TValue'] | TNull>): Promise<V<T>>;\n    public static from<T extends Float, TNull = any>(this: typeof FloatVector, input: VectorBuilderOptions<T, TNull>): Chunked<T>;\n    public static from<T extends Float, TNull = any>(this: typeof FloatVector, input: VectorBuilderOptionsAsync<T, TNull>): Promise<Chunked<T>>;\n    /** @nocollapse */\n    public static from<T extends Float, TNull = any>(this: FloatVectorConstructors, input: FromInput<T, TNull>) {\n\n        let ArrowType = vectorTypeToDataType(this);\n\n        if ((input instanceof ArrayBuffer) || ArrayBuffer.isView(input)) {\n            let InputType = arrayTypeToDataType(input.constructor as FloatArrayCtor) || ArrowType;\n            // Special case, infer the Arrow DataType from the input if calling the base\n            // FloatVector.from with a TypedArray, e.g. `FloatVector.from(new Float32Array())`\n            if (ArrowType === null) {\n                ArrowType = InputType;\n            }\n            // If the DataType inferred from the Vector constructor matches the\n            // DataType inferred from the input arguments, return zero-copy view\n            if (ArrowType && ArrowType === InputType) {\n                let type = new ArrowType();\n                let length = input.byteLength / type.ArrayType.BYTES_PER_ELEMENT;\n                // If the ArrowType is Float16 but the input type isn't a Uint16Array,\n                // let the Float16Builder handle casting the input values to Uint16s.\n                if (!convertTo16Bit(ArrowType, input.constructor)) {\n                    return Vector.new(Data.Float(type, 0, length, 0, null, input as FloatArray));\n                }\n            }\n        }\n\n        if (ArrowType) {\n            // If the DataType inferred from the Vector constructor is different than\n            // the DataType inferred from the input TypedArray, or if input isn't a\n            // TypedArray, use the Builders to construct the result Vector\n            return vectorFromValuesWithType(() => new ArrowType!() as T, input);\n        }\n\n        if ((input instanceof DataView) || (input instanceof ArrayBuffer)) {\n            throw new TypeError(`Cannot infer float type from instance of ${input.constructor.name}`);\n        }\n\n        throw new TypeError('Unrecognized FloatVector input');\n    }\n}\n\n/** @ignore */\nexport class Float16Vector extends FloatVector<Float16> {\n    // Since JS doesn't have half floats, `toArray()` returns a zero-copy slice\n    // of the underlying Uint16Array data. This behavior ensures we don't incur\n    // extra compute or copies if you're calling `toArray()` in order to create\n    // a buffer for something like WebGL. Buf if you're using JS and want typed\n    // arrays of 4-to-8-byte precision, these methods will enumerate the values\n    // and clamp to the desired byte lengths.\n    public toFloat32Array() { return new Float32Array(this as Iterable<number>); }\n    public toFloat64Array() { return new Float64Array(this as Iterable<number>); }\n}\n\n/** @ignore */\nexport class Float32Vector extends FloatVector<Float32> {}\n/** @ignore */\nexport class Float64Vector extends FloatVector<Float64> {}\n\nconst convertTo16Bit = (typeCtor: any, dataCtor: any) => {\n    return (typeCtor === Float16) && (dataCtor !== Uint16Array);\n};\n\n/** @ignore */\nconst arrayTypeToDataType = (ctor: FloatArrayCtor) => {\n    switch (ctor) {\n        case Uint16Array:    return Float16;\n        case Float32Array:   return Float32;\n        case Float64Array:   return Float64;\n        default: return null;\n    }\n};\n\n/** @ignore */\nconst vectorTypeToDataType = (ctor: FloatVectorConstructors) => {\n    switch (ctor) {\n        case Float16Vector: return Float16;\n        case Float32Vector: return Float32;\n        case Float64Vector: return Float64;\n        default: return null;\n    }\n};\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { BaseVector } from './base';\nimport { Interval, IntervalDayTime, IntervalYearMonth } from '../type';\n\n/** @ignore */\nexport class IntervalVector<T extends Interval = Interval> extends BaseVector<T> {}\n/** @ignore */\nexport class IntervalDayTimeVector extends IntervalVector<IntervalDayTime> {}\n/** @ignore */\nexport class IntervalYearMonthVector extends IntervalVector<IntervalYearMonth> {}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { Data } from '../data';\nimport { Vector } from '../vector';\nimport { Chunked } from './chunked';\nimport { BaseVector } from './base';\nimport { VectorBuilderOptions } from './index';\nimport { vectorFromValuesWithType } from './index';\nimport { VectorBuilderOptionsAsync } from './index';\nimport { BigInt64Array, BigUint64Array } from '../util/compat';\nimport { toBigInt64Array, toBigUint64Array } from '../util/buffer';\nimport { Int, Uint8, Uint16, Uint32, Uint64, Int8, Int16, Int32, Int64, IntArray } from '../type';\nimport { VectorType as V, TypedArrayConstructor, BigIntArrayConstructor, BigIntArray } from '../interfaces';\n\n/** @ignore */\ntype IntVectorConstructors =\n    typeof IntVector    |\n    typeof Int8Vector   |\n    typeof Int16Vector  |\n    typeof Int32Vector  |\n    typeof Uint8Vector  |\n    typeof Uint16Vector |\n    typeof Uint32Vector |\n    typeof Int64Vector  |\n    typeof Uint64Vector ;\n\n/** @ignore */\ntype FromInput<T extends Int, TNull = any> =\n    IntArray | BigIntArray              |\n    Iterable<T['TValue'] | TNull>       |\n    AsyncIterable<T['TValue'] | TNull>  |\n    VectorBuilderOptions<T, TNull>      |\n    VectorBuilderOptionsAsync<T, TNull> ;\n\n/** @ignore */\ntype FromArgs<T extends Int, TNull = any> = [FromInput<T, TNull>, boolean?];\n\n/** @ignore */\ntype IntArrayCtor = TypedArrayConstructor<IntArray> | BigIntArrayConstructor<BigIntArray>;\n\n/** @ignore */\nexport class IntVector<T extends Int = Int> extends BaseVector<T> {\n\n    // Guaranteed zero-copy variants\n    public static from(this: typeof IntVector, input: Int8Array): Int8Vector;\n    public static from(this: typeof IntVector, input: Int16Array): Int16Vector;\n    public static from(this: typeof IntVector, input: Int32Array): Int32Vector;\n    public static from(this: typeof IntVector, input: BigInt64Array): Int64Vector;\n    public static from(this: typeof IntVector, input: Int32Array, is64bit: true): Int64Vector;\n    public static from(this: typeof IntVector, input: Uint8Array): Uint8Vector;\n    public static from(this: typeof IntVector, input: Uint16Array): Uint16Vector;\n    public static from(this: typeof IntVector, input: Uint32Array): Uint32Vector;\n    public static from(this: typeof IntVector, input: BigUint64Array): Uint64Vector;\n    public static from(this: typeof IntVector, input: Uint32Array, is64bit: true): Uint64Vector;\n\n    // Zero-copy if input is a TypedArray of the same type as the\n    // Vector that from is called on, otherwise uses the Builders\n    public static from<TNull = any>(this: typeof Int8Vector,   input: FromInput<Int8, TNull>): Int8Vector;\n    public static from<TNull = any>(this: typeof Int16Vector,  input: FromInput<Int16, TNull>): Int16Vector;\n    public static from<TNull = any>(this: typeof Int32Vector,  input: FromInput<Int32, TNull>): Int32Vector;\n    public static from<TNull = any>(this: typeof Int64Vector,  input: FromInput<Int64, TNull>): Int64Vector;\n    public static from<TNull = any>(this: typeof Uint8Vector,  input: FromInput<Uint8, TNull>): Uint8Vector;\n    public static from<TNull = any>(this: typeof Uint16Vector, input: FromInput<Uint16, TNull>): Uint16Vector;\n    public static from<TNull = any>(this: typeof Uint32Vector, input: FromInput<Uint32, TNull>): Uint32Vector;\n    public static from<TNull = any>(this: typeof Uint64Vector, input: FromInput<Uint64, TNull>): Uint64Vector;\n\n    // Not zero-copy\n    public static from<T extends Int, TNull = any>(this: typeof IntVector, input: Iterable<T['TValue'] | TNull>): V<T>;\n    public static from<T extends Int, TNull = any>(this: typeof IntVector, input: AsyncIterable<T['TValue'] | TNull>): Promise<V<T>>;\n    public static from<T extends Int, TNull = any>(this: typeof IntVector, input: VectorBuilderOptions<T, TNull>): Chunked<T>;\n    public static from<T extends Int, TNull = any>(this: typeof IntVector, input: VectorBuilderOptionsAsync<T, TNull>): Promise<Chunked<T>>;\n    /** @nocollapse */\n    public static from<T extends Int, TNull = any>(this: IntVectorConstructors, ...args: FromArgs<T, TNull>) {\n\n        let [input, is64bit = false] = args;\n        let ArrowType = vectorTypeToDataType(this, is64bit);\n\n        if ((input instanceof ArrayBuffer) || ArrayBuffer.isView(input)) {\n            let InputType = arrayTypeToDataType(input.constructor as IntArrayCtor, is64bit) || ArrowType;\n            // Special case, infer the Arrow DataType from the input if calling the base\n            // IntVector.from with a TypedArray, e.g. `IntVector.from(new Int32Array())`\n            if (ArrowType === null) {\n                ArrowType = InputType;\n            }\n            // If the DataType inferred from the Vector constructor matches the\n            // DataType inferred from the input arguments, return zero-copy view\n            if (ArrowType && ArrowType === InputType) {\n                let type = new ArrowType();\n                let length = input.byteLength / type.ArrayType.BYTES_PER_ELEMENT;\n                // If the ArrowType is 64bit but the input type is 32bit pairs, update the logical length\n                if (convert32To64Bit(ArrowType, input.constructor)) {\n                    length *= 0.5;\n                }\n                return Vector.new(Data.Int(type, 0, length, 0, null, input as IntArray));\n            }\n        }\n\n        if (ArrowType) {\n            // If the DataType inferred from the Vector constructor is different than\n            // the DataType inferred from the input TypedArray, or if input isn't a\n            // TypedArray, use the Builders to construct the result Vector\n            return vectorFromValuesWithType(() => new ArrowType!() as T, input);\n        }\n\n        if ((input instanceof DataView) || (input instanceof ArrayBuffer)) {\n            throw new TypeError(`Cannot infer integer type from instance of ${input.constructor.name}`);\n        }\n\n        throw new TypeError('Unrecognized IntVector input');\n    }\n}\n\n/** @ignore */\nexport class Int8Vector extends IntVector<Int8> {}\n/** @ignore */\nexport class Int16Vector extends IntVector<Int16> {}\n/** @ignore */\nexport class Int32Vector extends IntVector<Int32> {}\n/** @ignore */\nexport class Int64Vector extends IntVector<Int64> {\n    public toBigInt64Array() {\n        return toBigInt64Array(this.values);\n    }\n    // @ts-ignore\n    private _values64: BigInt64Array;\n    public get values64(): BigInt64Array {\n        return this._values64 || (this._values64 = this.toBigInt64Array());\n    }\n}\n\n/** @ignore */\nexport class Uint8Vector extends IntVector<Uint8> {}\n/** @ignore */\nexport class Uint16Vector extends IntVector<Uint16> {}\n/** @ignore */\nexport class Uint32Vector extends IntVector<Uint32> {}\n/** @ignore */\nexport class Uint64Vector extends IntVector<Uint64> {\n    public toBigUint64Array() {\n        return toBigUint64Array(this.values);\n    }\n    // @ts-ignore\n    private _values64: BigUint64Array;\n    public get values64(): BigUint64Array {\n        return this._values64 || (this._values64 = this.toBigUint64Array());\n    }\n}\n\nconst convert32To64Bit = (typeCtor: any, dataCtor: any) => {\n    return (typeCtor === Int64 || typeCtor === Uint64) &&\n           (dataCtor === Int32Array || dataCtor === Uint32Array);\n};\n\n/** @ignore */\nconst arrayTypeToDataType = (ctor: IntArrayCtor, is64bit: boolean) => {\n    switch (ctor) {\n        case Int8Array:      return Int8;\n        case Int16Array:     return Int16;\n        case Int32Array:     return is64bit ? Int64 : Int32;\n        case BigInt64Array:  return Int64;\n        case Uint8Array:     return Uint8;\n        case Uint16Array:    return Uint16;\n        case Uint32Array:    return is64bit ? Uint64 : Uint32;\n        case BigUint64Array: return Uint64;\n        default: return null;\n    }\n};\n\n/** @ignore */\nconst vectorTypeToDataType = (ctor: IntVectorConstructors, is64bit: boolean) => {\n    switch (ctor) {\n        case Int8Vector:   return Int8;\n        case Int16Vector:  return Int16;\n        case Int32Vector:  return is64bit ? Int64 : Int32;\n        case Int64Vector:  return Int64;\n        case Uint8Vector:  return Uint8;\n        case Uint16Vector: return Uint16;\n        case Uint32Vector: return is64bit ? Uint64 : Uint32;\n        case Uint64Vector: return Uint64;\n        default: return null;\n    }\n};\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { BaseVector } from './base';\nimport { DataType, List } from '../type';\n\n/** @ignore */\nexport class ListVector<T extends DataType = any> extends BaseVector<List<T>> {}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { MapRow } from './row';\nimport { Field } from '../schema';\nimport { Vector } from '../vector';\nimport { BaseVector } from './base';\nimport { DataType, Map_, Struct, List } from '../type';\n\n/** @ignore */\nexport class MapVector<K extends DataType = any, V extends DataType = any> extends BaseVector<Map_<K, V>> {\n    public asList() {\n        const child = this.type.children[0] as Field<Struct<{ key: K, value: V }>>;\n        return Vector.new(this.data.clone(new List<Struct<{ key: K, value: V }>>(child)));\n    }\n    public bind(index: number): Map_<K, V>['TValue'] {\n        const child = this.getChildAt<Struct<{ key: K, value: V }>>(0);\n        const { [index]: begin, [index + 1]: end } = this.valueOffsets;\n        return new MapRow(child!.slice(begin, end));\n    }\n}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { Null } from '../type';\nimport { BaseVector } from './base';\n\n/** @ignore */\nexport class NullVector extends BaseVector<Null> {}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { StructRow } from './row';\nimport { BaseVector } from './base';\nimport { DataType, Struct } from '../type';\n\n/** @ignore */ const kRowIndex = Symbol.for('rowIndex');\n/** @ignore */\nexport class StructVector<T extends { [key: string]: DataType } = any> extends BaseVector<Struct<T>> {\n    // @ts-ignore\n    private _row: StructRow<T>;\n    public bind(index: number): Struct<T>['TValue'] {\n        const proto = this._row || (this._row = new StructRow<T>(this));\n        const bound = Object.create(proto);\n        bound[kRowIndex] = index;\n        return bound;\n    }\n}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { BaseVector } from './base';\nimport { Timestamp, TimestampSecond, TimestampMillisecond, TimestampMicrosecond, TimestampNanosecond } from '../type';\n\n/** @ignore */\nexport class TimestampVector<T extends Timestamp = Timestamp> extends BaseVector<T> {}\n/** @ignore */\nexport class TimestampSecondVector extends TimestampVector<TimestampSecond> {}\n/** @ignore */\nexport class TimestampMillisecondVector extends TimestampVector<TimestampMillisecond> {}\n/** @ignore */\nexport class TimestampMicrosecondVector extends TimestampVector<TimestampMicrosecond> {}\n/** @ignore */\nexport class TimestampNanosecondVector extends TimestampVector<TimestampNanosecond> {}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { BaseVector } from './base';\nimport { Time, TimeSecond, TimeMillisecond, TimeMicrosecond, TimeNanosecond } from '../type';\n\n/** @ignore */\nexport class TimeVector<T extends Time = Time> extends BaseVector<T> {}\n/** @ignore */\nexport class TimeSecondVector extends TimeVector<TimeSecond> {}\n/** @ignore */\nexport class TimeMillisecondVector extends TimeVector<TimeMillisecond> {}\n/** @ignore */\nexport class TimeMicrosecondVector extends TimeVector<TimeMicrosecond> {}\n/** @ignore */\nexport class TimeNanosecondVector extends TimeVector<TimeNanosecond> {}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { BaseVector } from './base';\nimport { Union, DenseUnion, SparseUnion} from '../type';\n\n/** @ignore */\nexport class UnionVector<T extends Union = Union> extends BaseVector<T> {\n    public get typeIdToChildIndex() { return this.data.type.typeIdToChildIndex; }\n}\n\n/** @ignore */\nexport class DenseUnionVector extends UnionVector<DenseUnion> {\n    public get valueOffsets() { return this.data.valueOffsets!; }\n}\n\n/** @ignore */\nexport class SparseUnionVector extends UnionVector<SparseUnion> {}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { Vector } from '../vector';\nimport { Chunked } from './chunked';\nimport { BaseVector } from './base';\nimport { Binary, Utf8 } from '../type';\nimport { VectorBuilderOptions } from './index';\nimport { vectorFromValuesWithType } from './index';\nimport { VectorBuilderOptionsAsync } from './index';\n\n/** @ignore */\nexport class Utf8Vector extends BaseVector<Utf8> {\n    public static from<TNull = any>(input: Iterable<string | TNull>): Utf8Vector;\n    public static from<TNull = any>(input: AsyncIterable<string | TNull>): Promise<Utf8Vector>;\n    public static from<TNull = any>(input: VectorBuilderOptions<Utf8, TNull>): Chunked<Utf8>;\n    public static from<TNull = any>(input: VectorBuilderOptionsAsync<Utf8, TNull>): Promise<Chunked<Utf8>>;\n    /** @nocollapse */\n    public static from<TNull = any>(input: Iterable<string | TNull> | AsyncIterable<string | TNull> | VectorBuilderOptions<Utf8, TNull> | VectorBuilderOptionsAsync<Utf8, TNull>) {\n        return vectorFromValuesWithType(() => new Utf8(), input);\n    }\n    public asBinary() {\n        return Vector.new(this.data.clone(new Binary()));\n    }\n}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\n/** @ignore */\nexport function partial0<T>(visit: (node: T) => any) {\n    return function(this: T) { return visit(this); };\n}\n\n/** @ignore */\nexport function partial1<T>(visit: (node: T, a: any) => any) {\n    return function(this: T, a: any) { return visit(this, a); };\n}\n\n/** @ignore */\nexport function partial2<T>(visit: (node: T, a: any, b: any) => any) {\n    return function(this: T, a: any, b: any) { return visit(this, a, b); };\n}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { Data } from '../data';\nimport { BN } from '../util/bn';\nimport { Visitor } from '../visitor';\nimport { decodeUtf8 } from '../util/utf8';\nimport { VectorType } from '../interfaces';\nimport { uint16ToFloat64 } from '../util/math';\nimport { Type, UnionMode, Precision, DateUnit, TimeUnit, IntervalUnit } from '../enum';\nimport {\n    DataType, Dictionary,\n    Bool, Null, Utf8, Binary, Decimal, FixedSizeBinary, List, FixedSizeList, Map_, Struct,\n    Float, Float16, Float32, Float64,\n    Int, Uint8, Uint16, Uint32, Uint64, Int8, Int16, Int32, Int64,\n    Date_, DateDay, DateMillisecond,\n    Interval, IntervalDayTime, IntervalYearMonth,\n    Time, TimeSecond, TimeMillisecond, TimeMicrosecond, TimeNanosecond,\n    Timestamp, TimestampSecond, TimestampMillisecond, TimestampMicrosecond, TimestampNanosecond,\n    Union, DenseUnion, SparseUnion,\n} from '../type';\n\n/** @ignore */\nexport interface GetVisitor extends Visitor {\n    visit<T extends VectorType>  (node: T, index: number): T['TValue'];\n    visitMany<T extends VectorType>  (nodes: T[], indices: number[]): T['TValue'][];\n    getVisitFn<T extends Type>    (node: T): (vector: VectorType<T>, index: number) => VectorType<T>['TValue'];\n    getVisitFn<T extends DataType>(node: VectorType<T> | Data<T> | T): (vector: VectorType<T>, index: number) => VectorType<T>['TValue'];\n    visitNull                 <T extends Null>                 (vector: VectorType<T>, index: number): T['TValue'];\n    visitBool                 <T extends Bool>                 (vector: VectorType<T>, index: number): T['TValue'];\n    visitInt                  <T extends Int>                  (vector: VectorType<T>, index: number): T['TValue'];\n    visitInt8                 <T extends Int8>                 (vector: VectorType<T>, index: number): T['TValue'];\n    visitInt16                <T extends Int16>                (vector: VectorType<T>, index: number): T['TValue'];\n    visitInt32                <T extends Int32>                (vector: VectorType<T>, index: number): T['TValue'];\n    visitInt64                <T extends Int64>                (vector: VectorType<T>, index: number): T['TValue'];\n    visitUint8                <T extends Uint8>                (vector: VectorType<T>, index: number): T['TValue'];\n    visitUint16               <T extends Uint16>               (vector: VectorType<T>, index: number): T['TValue'];\n    visitUint32               <T extends Uint32>               (vector: VectorType<T>, index: number): T['TValue'];\n    visitUint64               <T extends Uint64>               (vector: VectorType<T>, index: number): T['TValue'];\n    visitFloat                <T extends Float>                (vector: VectorType<T>, index: number): T['TValue'];\n    visitFloat16              <T extends Float16>              (vector: VectorType<T>, index: number): T['TValue'];\n    visitFloat32              <T extends Float32>              (vector: VectorType<T>, index: number): T['TValue'];\n    visitFloat64              <T extends Float64>              (vector: VectorType<T>, index: number): T['TValue'];\n    visitUtf8                 <T extends Utf8>                 (vector: VectorType<T>, index: number): T['TValue'];\n    visitBinary               <T extends Binary>               (vector: VectorType<T>, index: number): T['TValue'];\n    visitFixedSizeBinary      <T extends FixedSizeBinary>      (vector: VectorType<T>, index: number): T['TValue'];\n    visitDate                 <T extends Date_>                (vector: VectorType<T>, index: number): T['TValue'];\n    visitDateDay              <T extends DateDay>              (vector: VectorType<T>, index: number): T['TValue'];\n    visitDateMillisecond      <T extends DateMillisecond>      (vector: VectorType<T>, index: number): T['TValue'];\n    visitTimestamp            <T extends Timestamp>            (vector: VectorType<T>, index: number): T['TValue'];\n    visitTimestampSecond      <T extends TimestampSecond>      (vector: VectorType<T>, index: number): T['TValue'];\n    visitTimestampMillisecond <T extends TimestampMillisecond> (vector: VectorType<T>, index: number): T['TValue'];\n    visitTimestampMicrosecond <T extends TimestampMicrosecond> (vector: VectorType<T>, index: number): T['TValue'];\n    visitTimestampNanosecond  <T extends TimestampNanosecond>  (vector: VectorType<T>, index: number): T['TValue'];\n    visitTime                 <T extends Time>                 (vector: VectorType<T>, index: number): T['TValue'];\n    visitTimeSecond           <T extends TimeSecond>           (vector: VectorType<T>, index: number): T['TValue'];\n    visitTimeMillisecond      <T extends TimeMillisecond>      (vector: VectorType<T>, index: number): T['TValue'];\n    visitTimeMicrosecond      <T extends TimeMicrosecond>      (vector: VectorType<T>, index: number): T['TValue'];\n    visitTimeNanosecond       <T extends TimeNanosecond>       (vector: VectorType<T>, index: number): T['TValue'];\n    visitDecimal              <T extends Decimal>              (vector: VectorType<T>, index: number): T['TValue'];\n    visitList                 <T extends List>                 (vector: VectorType<T>, index: number): T['TValue'];\n    visitStruct               <T extends Struct>               (vector: VectorType<T>, index: number): T['TValue'];\n    visitUnion                <T extends Union>                (vector: VectorType<T>, index: number): T['TValue'];\n    visitDenseUnion           <T extends DenseUnion>           (vector: VectorType<T>, index: number): T['TValue'];\n    visitSparseUnion          <T extends SparseUnion>          (vector: VectorType<T>, index: number): T['TValue'];\n    visitDictionary           <T extends Dictionary>           (vector: VectorType<T>, index: number): T['TValue'];\n    visitInterval             <T extends Interval>             (vector: VectorType<T>, index: number): T['TValue'];\n    visitIntervalDayTime      <T extends IntervalDayTime>      (vector: VectorType<T>, index: number): T['TValue'];\n    visitIntervalYearMonth    <T extends IntervalYearMonth>    (vector: VectorType<T>, index: number): T['TValue'];\n    visitFixedSizeList        <T extends FixedSizeList>        (vector: VectorType<T>, index: number): T['TValue'];\n    visitMap                  <T extends Map_>                 (vector: VectorType<T>, index: number): T['TValue'];\n}\n\n/** @ignore */\nexport class GetVisitor extends Visitor {}\n\n/** @ignore */const epochDaysToMs = (data: Int32Array, index: number) => 86400000 * data[index];\n/** @ignore */const epochMillisecondsLongToMs = (data: Int32Array, index: number) => 4294967296 * (data[index + 1]) + (data[index] >>> 0);\n/** @ignore */const epochMicrosecondsLongToMs = (data: Int32Array, index: number) => 4294967296 * (data[index + 1] / 1000) + ((data[index] >>> 0) / 1000);\n/** @ignore */const epochNanosecondsLongToMs = (data: Int32Array, index: number) => 4294967296 * (data[index + 1] / 1000000) + ((data[index] >>> 0) / 1000000);\n\n/** @ignore */const epochMillisecondsToDate = (epochMs: number) => new Date(epochMs);\n/** @ignore */const epochDaysToDate = (data: Int32Array, index: number) => epochMillisecondsToDate(epochDaysToMs(data, index));\n/** @ignore */const epochMillisecondsLongToDate = (data: Int32Array, index: number) => epochMillisecondsToDate(epochMillisecondsLongToMs(data, index));\n\n/** @ignore */\nconst getNull = <T extends Null>(_vector: VectorType<T>, _index: number): T['TValue'] => null;\n/** @ignore */\nconst getVariableWidthBytes = (values: Uint8Array, valueOffsets: Int32Array, index: number) => {\n    const { [index]: x, [index + 1]: y } = valueOffsets;\n    return x != null && y != null ? values.subarray(x, y) : null as any;\n};\n\n/** @ignore */\nconst getBool = <T extends Bool>({ offset, values }: VectorType<T>, index: number): T['TValue'] => {\n    const idx = offset + index;\n    const byte = values[idx >> 3];\n    return (byte & 1 << (idx % 8)) !== 0;\n};\n\n/** @ignore */\ntype Numeric1X = Int8 | Int16 | Int32 | Uint8 | Uint16 | Uint32 | Float32 | Float64;\n/** @ignore */\ntype Numeric2X = Int64 | Uint64;\n\n/** @ignore */\nconst getDateDay         = <T extends DateDay>        ({ values         }: VectorType<T>, index: number): T['TValue'] => epochDaysToDate(values, index);\n/** @ignore */\nconst getDateMillisecond = <T extends DateMillisecond>({ values         }: VectorType<T>, index: number): T['TValue'] => epochMillisecondsLongToDate(values, index * 2);\n/** @ignore */\nconst getNumeric         = <T extends Numeric1X>      ({ stride, values }: VectorType<T>, index: number): T['TValue'] => values[stride * index];\n/** @ignore */\nconst getFloat16         = <T extends Float16>        ({ stride, values }: VectorType<T>, index: number): T['TValue'] => uint16ToFloat64(values[stride * index]);\n/** @ignore */\nconst getBigInts         = <T extends Numeric2X>({ stride, values, type }: VectorType<T>, index: number): T['TValue'] => <any> BN.new(values.subarray(stride * index, stride * (index + 1)), type.isSigned);\n/** @ignore */\nconst getFixedSizeBinary = <T extends FixedSizeBinary>({ stride, values }: VectorType<T>, index: number): T['TValue'] => values.subarray(stride * index, stride * (index + 1));\n\n/** @ignore */\nconst getBinary = <T extends Binary>({ values, valueOffsets }: VectorType<T>, index: number): T['TValue'] => getVariableWidthBytes(values, valueOffsets, index);\n/** @ignore */\nconst getUtf8 = <T extends Utf8>({ values, valueOffsets }: VectorType<T>, index: number): T['TValue'] => {\n    const bytes = getVariableWidthBytes(values, valueOffsets, index);\n    return bytes !== null ? decodeUtf8(bytes) : null as any;\n};\n\n/* istanbul ignore next */\n/** @ignore */\nconst getInt = <T extends Int>(vector: VectorType<T>, index: number): T['TValue'] => (\n    vector.type.bitWidth < 64\n        ? getNumeric(vector as VectorType<Numeric1X>, index)\n        : getBigInts(vector as VectorType<Numeric2X>, index)\n);\n\n/* istanbul ignore next */\n/** @ignore */\nconst getFloat = <T extends Float> (vector: VectorType<T>, index: number): T['TValue'] => (\n    vector.type.precision !== Precision.HALF\n        ? getNumeric(vector as VectorType<Numeric1X>, index)\n        : getFloat16(vector as VectorType<Float16>, index)\n);\n\n/* istanbul ignore next */\n/** @ignore */\nconst getDate = <T extends Date_> (vector: VectorType<T>, index: number): T['TValue'] => (\n    vector.type.unit === DateUnit.DAY\n        ? getDateDay(vector as VectorType<DateDay>, index)\n        : getDateMillisecond(vector as VectorType<DateMillisecond>, index)\n);\n\n/** @ignore */\nconst getTimestampSecond      = <T extends TimestampSecond>     ({ values }: VectorType<T>, index: number): T['TValue'] => 1000 * epochMillisecondsLongToMs(values, index * 2);\n/** @ignore */\nconst getTimestampMillisecond = <T extends TimestampMillisecond>({ values }: VectorType<T>, index: number): T['TValue'] => epochMillisecondsLongToMs(values, index * 2);\n/** @ignore */\nconst getTimestampMicrosecond = <T extends TimestampMicrosecond>({ values }: VectorType<T>, index: number): T['TValue'] => epochMicrosecondsLongToMs(values, index * 2);\n/** @ignore */\nconst getTimestampNanosecond  = <T extends TimestampNanosecond> ({ values }: VectorType<T>, index: number): T['TValue'] => epochNanosecondsLongToMs(values, index * 2);\n/* istanbul ignore next */\n/** @ignore */\nconst getTimestamp            = <T extends Timestamp>(vector: VectorType<T>, index: number): T['TValue'] => {\n    switch (vector.type.unit) {\n        case TimeUnit.SECOND:      return      getTimestampSecond(vector as VectorType<TimestampSecond>, index);\n        case TimeUnit.MILLISECOND: return getTimestampMillisecond(vector as VectorType<TimestampMillisecond>, index);\n        case TimeUnit.MICROSECOND: return getTimestampMicrosecond(vector as VectorType<TimestampMicrosecond>, index);\n        case TimeUnit.NANOSECOND:  return  getTimestampNanosecond(vector as VectorType<TimestampNanosecond>, index);\n    }\n};\n\n/** @ignore */\nconst getTimeSecond      = <T extends TimeSecond>     ({ values, stride }: VectorType<T>, index: number): T['TValue'] => values[stride * index];\n/** @ignore */\nconst getTimeMillisecond = <T extends TimeMillisecond>({ values, stride }: VectorType<T>, index: number): T['TValue'] => values[stride * index];\n/** @ignore */\nconst getTimeMicrosecond = <T extends TimeMicrosecond>({ values         }: VectorType<T>, index: number): T['TValue'] => BN.signed(values.subarray(2 * index, 2 * (index + 1)));\n/** @ignore */\nconst getTimeNanosecond  = <T extends TimeNanosecond> ({ values         }: VectorType<T>, index: number): T['TValue'] => BN.signed(values.subarray(2 * index, 2 * (index + 1)));\n/* istanbul ignore next */\n/** @ignore */\nconst getTime            = <T extends Time>(vector: VectorType<T>, index: number): T['TValue'] => {\n    switch (vector.type.unit) {\n        case TimeUnit.SECOND:      return      getTimeSecond(vector as VectorType<TimeSecond>, index);\n        case TimeUnit.MILLISECOND: return getTimeMillisecond(vector as VectorType<TimeMillisecond>, index);\n        case TimeUnit.MICROSECOND: return getTimeMicrosecond(vector as VectorType<TimeMicrosecond>, index);\n        case TimeUnit.NANOSECOND:  return  getTimeNanosecond(vector as VectorType<TimeNanosecond>, index);\n    }\n};\n\n/** @ignore */\nconst getDecimal = <T extends Decimal>({ values }: VectorType<T>, index: number): T['TValue'] => BN.decimal(values.subarray(4 * index, 4 * (index + 1)));\n\n/** @ignore */\nconst getList = <T extends List>(vector: VectorType<T>, index: number): T['TValue'] => {\n    const child = vector.getChildAt(0)!, { valueOffsets, stride } = vector;\n    return child.slice(valueOffsets[index * stride], valueOffsets[(index * stride) + 1]) as T['TValue'];\n};\n\n/** @ignore */\nconst getMap = <T extends Map_>(vector: VectorType<T>, index: number): T['TValue'] => {\n    return vector.bind(index) as T['TValue'];\n};\n\n/** @ignore */\nconst getStruct = <T extends Struct>(vector: VectorType<T>, index: number): T['TValue'] => {\n    return vector.bind(index) as T['TValue'];\n};\n\n/* istanbul ignore next */\n/** @ignore */\nconst getUnion = <\n    V extends VectorType<Union> | VectorType<DenseUnion> | VectorType<SparseUnion>\n>(vector: V, index: number): V['TValue'] => {\n    return vector.type.mode === UnionMode.Dense ?\n        getDenseUnion(vector as VectorType<DenseUnion>, index) :\n        getSparseUnion(vector as VectorType<SparseUnion>, index);\n};\n\n/** @ignore */\nconst getDenseUnion = <T extends DenseUnion>(vector: VectorType<T>, index: number): T['TValue'] => {\n    const childIndex = vector.typeIdToChildIndex[vector.typeIds[index]];\n    const child = vector.getChildAt(childIndex);\n    return child ? child.get(vector.valueOffsets[index]) : null;\n};\n\n/** @ignore */\nconst getSparseUnion = <T extends SparseUnion>(vector: VectorType<T>, index: number): T['TValue'] => {\n    const childIndex = vector.typeIdToChildIndex[vector.typeIds[index]];\n    const child = vector.getChildAt(childIndex);\n    return child ? child.get(index) : null;\n};\n\n/** @ignore */\nconst getDictionary = <T extends Dictionary>(vector: VectorType<T>, index: number): T['TValue'] => {\n    return vector.getValue(vector.getKey(index)!);\n};\n\n/* istanbul ignore next */\n/** @ignore */\nconst getInterval = <T extends Interval>(vector: VectorType<T>, index: number): T['TValue'] =>\n    (vector.type.unit === IntervalUnit.DAY_TIME)\n        ? getIntervalDayTime(vector as VectorType<IntervalDayTime>, index)\n        : getIntervalYearMonth(vector as VectorType<IntervalYearMonth>, index);\n\n/** @ignore */\nconst getIntervalDayTime = <T extends IntervalDayTime>({ values }: VectorType<T>, index: number): T['TValue'] => values.subarray(2 * index, 2 * (index + 1));\n\n/** @ignore */\nconst getIntervalYearMonth = <T extends IntervalYearMonth>({ values }: VectorType<T>, index: number): T['TValue'] => {\n    const interval = values[index];\n    const int32s = new Int32Array(2);\n    int32s[0] = interval / 12 | 0; /* years */\n    int32s[1] = interval % 12 | 0; /* months */\n    return int32s;\n};\n\n/** @ignore */\nconst getFixedSizeList = <T extends FixedSizeList>(vector: VectorType<T>, index: number): T['TValue'] => {\n    const child = vector.getChildAt(0)!, { stride } = vector;\n    return child.slice(index * stride, (index + 1) * stride) as T['TValue'];\n};\n\nGetVisitor.prototype.visitNull                 =                 getNull;\nGetVisitor.prototype.visitBool                 =                 getBool;\nGetVisitor.prototype.visitInt                  =                  getInt;\nGetVisitor.prototype.visitInt8                 =              getNumeric;\nGetVisitor.prototype.visitInt16                =              getNumeric;\nGetVisitor.prototype.visitInt32                =              getNumeric;\nGetVisitor.prototype.visitInt64                =              getBigInts;\nGetVisitor.prototype.visitUint8                =              getNumeric;\nGetVisitor.prototype.visitUint16               =              getNumeric;\nGetVisitor.prototype.visitUint32               =              getNumeric;\nGetVisitor.prototype.visitUint64               =              getBigInts;\nGetVisitor.prototype.visitFloat                =                getFloat;\nGetVisitor.prototype.visitFloat16              =              getFloat16;\nGetVisitor.prototype.visitFloat32              =              getNumeric;\nGetVisitor.prototype.visitFloat64              =              getNumeric;\nGetVisitor.prototype.visitUtf8                 =                 getUtf8;\nGetVisitor.prototype.visitBinary               =               getBinary;\nGetVisitor.prototype.visitFixedSizeBinary      =      getFixedSizeBinary;\nGetVisitor.prototype.visitDate                 =                 getDate;\nGetVisitor.prototype.visitDateDay              =              getDateDay;\nGetVisitor.prototype.visitDateMillisecond      =      getDateMillisecond;\nGetVisitor.prototype.visitTimestamp            =            getTimestamp;\nGetVisitor.prototype.visitTimestampSecond      =      getTimestampSecond;\nGetVisitor.prototype.visitTimestampMillisecond = getTimestampMillisecond;\nGetVisitor.prototype.visitTimestampMicrosecond = getTimestampMicrosecond;\nGetVisitor.prototype.visitTimestampNanosecond  =  getTimestampNanosecond;\nGetVisitor.prototype.visitTime                 =                 getTime;\nGetVisitor.prototype.visitTimeSecond           =           getTimeSecond;\nGetVisitor.prototype.visitTimeMillisecond      =      getTimeMillisecond;\nGetVisitor.prototype.visitTimeMicrosecond      =      getTimeMicrosecond;\nGetVisitor.prototype.visitTimeNanosecond       =       getTimeNanosecond;\nGetVisitor.prototype.visitDecimal              =              getDecimal;\nGetVisitor.prototype.visitList                 =                 getList;\nGetVisitor.prototype.visitStruct               =               getStruct;\nGetVisitor.prototype.visitUnion                =                getUnion;\nGetVisitor.prototype.visitDenseUnion           =           getDenseUnion;\nGetVisitor.prototype.visitSparseUnion          =          getSparseUnion;\nGetVisitor.prototype.visitDictionary           =           getDictionary;\nGetVisitor.prototype.visitInterval             =             getInterval;\nGetVisitor.prototype.visitIntervalDayTime      =      getIntervalDayTime;\nGetVisitor.prototype.visitIntervalYearMonth    =    getIntervalYearMonth;\nGetVisitor.prototype.visitFixedSizeList        =        getFixedSizeList;\nGetVisitor.prototype.visitMap                  =                  getMap;\n\n/** @ignore */\nexport const instance = new GetVisitor();\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { Data } from '../data';\nimport { Type } from '../enum';\nimport { Visitor } from '../visitor';\nimport { VectorType } from '../interfaces';\nimport { getBool, iterateBits } from '../util/bit';\nimport { createElementComparator } from '../util/vector';\nimport {\n    DataType, Dictionary,\n    Bool, Null, Utf8, Binary, Decimal, FixedSizeBinary, List, FixedSizeList, Map_, Struct,\n    Float, Float16, Float32, Float64,\n    Int, Uint8, Uint16, Uint32, Uint64, Int8, Int16, Int32, Int64,\n    Date_, DateDay, DateMillisecond,\n    Interval, IntervalDayTime, IntervalYearMonth,\n    Time, TimeSecond, TimeMillisecond, TimeMicrosecond, TimeNanosecond,\n    Timestamp, TimestampSecond, TimestampMillisecond, TimestampMicrosecond, TimestampNanosecond,\n    Union, DenseUnion, SparseUnion,\n} from '../type';\n\n/** @ignore */\nexport interface IndexOfVisitor extends Visitor {\n    visit<T extends VectorType>  (node: T, value: T['TValue'] | null, index?: number): number;\n    visitMany <T extends VectorType>  (nodes: T[], values: (T['TValue'] | null)[], indices: (number | undefined)[]): number[];\n    getVisitFn<T extends Type>    (node: T): (vector: VectorType<T>, value: VectorType<T>['TValue'] | null, index?: number) => number;\n    getVisitFn<T extends DataType>(node: VectorType<T> | Data<T> | T): (vector: VectorType<T>, value:         T['TValue'] | null, index?: number) => number;\n    visitNull                 <T extends Null>                (vector: VectorType<T>, value: T['TValue'] | null, index?: number): number;\n    visitBool                 <T extends Bool>                (vector: VectorType<T>, value: T['TValue'] | null, index?: number): number;\n    visitInt                  <T extends Int>                 (vector: VectorType<T>, value: T['TValue'] | null, index?: number): number;\n    visitInt8                 <T extends Int8>                (vector: VectorType<T>, value: T['TValue'] | null, index?: number): number;\n    visitInt16                <T extends Int16>               (vector: VectorType<T>, value: T['TValue'] | null, index?: number): number;\n    visitInt32                <T extends Int32>               (vector: VectorType<T>, value: T['TValue'] | null, index?: number): number;\n    visitInt64                <T extends Int64>               (vector: VectorType<T>, value: T['TValue'] | null, index?: number): number;\n    visitUint8                <T extends Uint8>               (vector: VectorType<T>, value: T['TValue'] | null, index?: number): number;\n    visitUint16               <T extends Uint16>              (vector: VectorType<T>, value: T['TValue'] | null, index?: number): number;\n    visitUint32               <T extends Uint32>              (vector: VectorType<T>, value: T['TValue'] | null, index?: number): number;\n    visitUint64               <T extends Uint64>              (vector: VectorType<T>, value: T['TValue'] | null, index?: number): number;\n    visitFloat                <T extends Float>               (vector: VectorType<T>, value: T['TValue'] | null, index?: number): number;\n    visitFloat16              <T extends Float16>             (vector: VectorType<T>, value: T['TValue'] | null, index?: number): number;\n    visitFloat32              <T extends Float32>             (vector: VectorType<T>, value: T['TValue'] | null, index?: number): number;\n    visitFloat64              <T extends Float64>             (vector: VectorType<T>, value: T['TValue'] | null, index?: number): number;\n    visitUtf8                 <T extends Utf8>                (vector: VectorType<T>, value: T['TValue'] | null, index?: number): number;\n    visitBinary               <T extends Binary>              (vector: VectorType<T>, value: T['TValue'] | null, index?: number): number;\n    visitFixedSizeBinary      <T extends FixedSizeBinary>     (vector: VectorType<T>, value: T['TValue'] | null, index?: number): number;\n    visitDate                 <T extends Date_>               (vector: VectorType<T>, value: T['TValue'] | null, index?: number): number;\n    visitDateDay              <T extends DateDay>             (vector: VectorType<T>, value: T['TValue'] | null, index?: number): number;\n    visitDateMillisecond      <T extends DateMillisecond>     (vector: VectorType<T>, value: T['TValue'] | null, index?: number): number;\n    visitTimestamp            <T extends Timestamp>           (vector: VectorType<T>, value: T['TValue'] | null, index?: number): number;\n    visitTimestampSecond      <T extends TimestampSecond>     (vector: VectorType<T>, value: T['TValue'] | null, index?: number): number;\n    visitTimestampMillisecond <T extends TimestampMillisecond>(vector: VectorType<T>, value: T['TValue'] | null, index?: number): number;\n    visitTimestampMicrosecond <T extends TimestampMicrosecond>(vector: VectorType<T>, value: T['TValue'] | null, index?: number): number;\n    visitTimestampNanosecond  <T extends TimestampNanosecond> (vector: VectorType<T>, value: T['TValue'] | null, index?: number): number;\n    visitTime                 <T extends Time>                (vector: VectorType<T>, value: T['TValue'] | null, index?: number): number;\n    visitTimeSecond           <T extends TimeSecond>          (vector: VectorType<T>, value: T['TValue'] | null, index?: number): number;\n    visitTimeMillisecond      <T extends TimeMillisecond>     (vector: VectorType<T>, value: T['TValue'] | null, index?: number): number;\n    visitTimeMicrosecond      <T extends TimeMicrosecond>     (vector: VectorType<T>, value: T['TValue'] | null, index?: number): number;\n    visitTimeNanosecond       <T extends TimeNanosecond>      (vector: VectorType<T>, value: T['TValue'] | null, index?: number): number;\n    visitDecimal              <T extends Decimal>             (vector: VectorType<T>, value: T['TValue'] | null, index?: number): number;\n    visitList                 <T extends List>                (vector: VectorType<T>, value: T['TValue'] | null, index?: number): number;\n    visitStruct               <T extends Struct>              (vector: VectorType<T>, value: T['TValue'] | null, index?: number): number;\n    visitUnion                <T extends Union>               (vector: VectorType<T>, value: T['TValue'] | null, index?: number): number;\n    visitDenseUnion           <T extends DenseUnion>          (vector: VectorType<T>, value: T['TValue'] | null, index?: number): number;\n    visitSparseUnion          <T extends SparseUnion>         (vector: VectorType<T>, value: T['TValue'] | null, index?: number): number;\n    visitDictionary           <T extends Dictionary>          (vector: VectorType<T>, value: T['TValue'] | null, index?: number): number;\n    visitInterval             <T extends Interval>            (vector: VectorType<T>, value: T['TValue'] | null, index?: number): number;\n    visitIntervalDayTime      <T extends IntervalDayTime>     (vector: VectorType<T>, value: T['TValue'] | null, index?: number): number;\n    visitIntervalYearMonth    <T extends IntervalYearMonth>   (vector: VectorType<T>, value: T['TValue'] | null, index?: number): number;\n    visitFixedSizeList        <T extends FixedSizeList>       (vector: VectorType<T>, value: T['TValue'] | null, index?: number): number;\n    visitMap                  <T extends Map_>                (vector: VectorType<T>, value: T['TValue'] | null, index?: number): number;\n}\n\n/** @ignore */\nexport class IndexOfVisitor extends Visitor {}\n\n/** @ignore */\nfunction nullIndexOf(vector: VectorType<Null>, searchElement?: null) {\n    // if you're looking for nulls and the vector isn't empty, we've got 'em!\n    return searchElement === null && vector.length > 0 ? 0 : -1;\n}\n\n/** @ignore */\nfunction indexOfNull<T extends DataType>(vector: VectorType<T>, fromIndex?: number): number {\n    const { nullBitmap } = vector;\n    if (!nullBitmap || vector.nullCount <= 0) {\n        return -1;\n    }\n    let i = 0;\n    for (const isValid of iterateBits(nullBitmap, vector.data.offset + (fromIndex || 0), vector.length, nullBitmap, getBool)) {\n        if (!isValid) { return i; }\n        ++i;\n    }\n    return -1;\n}\n\n/** @ignore */\nfunction indexOfValue<T extends DataType>(vector: VectorType<T>, searchElement?: T['TValue'] | null, fromIndex?: number): number {\n    if (searchElement === undefined) { return -1; }\n    if (searchElement === null) { return indexOfNull(vector, fromIndex); }\n    const compare = createElementComparator(searchElement);\n    for (let i = (fromIndex || 0) - 1, n = vector.length; ++i < n;) {\n        if (compare(vector.get(i))) {\n            return i;\n        }\n    }\n    return -1;\n}\n\n/** @ignore */\nfunction indexOfUnion<T extends DataType>(vector: VectorType<T>, searchElement?: T['TValue'] | null, fromIndex?: number): number {\n    // Unions are special -- they do have a nullBitmap, but so can their children.\n    // If the searchElement is null, we don't know whether it came from the Union's\n    // bitmap or one of its childrens'. So we don't interrogate the Union's bitmap,\n    // since that will report the wrong index if a child has a null before the Union.\n    const compare = createElementComparator(searchElement);\n    for (let i = (fromIndex || 0) - 1, n = vector.length; ++i < n;) {\n        if (compare(vector.get(i))) {\n            return i;\n        }\n    }\n    return -1;\n}\n\nIndexOfVisitor.prototype.visitNull                 =  nullIndexOf;\nIndexOfVisitor.prototype.visitBool                 = indexOfValue;\nIndexOfVisitor.prototype.visitInt                  = indexOfValue;\nIndexOfVisitor.prototype.visitInt8                 = indexOfValue;\nIndexOfVisitor.prototype.visitInt16                = indexOfValue;\nIndexOfVisitor.prototype.visitInt32                = indexOfValue;\nIndexOfVisitor.prototype.visitInt64                = indexOfValue;\nIndexOfVisitor.prototype.visitUint8                = indexOfValue;\nIndexOfVisitor.prototype.visitUint16               = indexOfValue;\nIndexOfVisitor.prototype.visitUint32               = indexOfValue;\nIndexOfVisitor.prototype.visitUint64               = indexOfValue;\nIndexOfVisitor.prototype.visitFloat                = indexOfValue;\nIndexOfVisitor.prototype.visitFloat16              = indexOfValue;\nIndexOfVisitor.prototype.visitFloat32              = indexOfValue;\nIndexOfVisitor.prototype.visitFloat64              = indexOfValue;\nIndexOfVisitor.prototype.visitUtf8                 = indexOfValue;\nIndexOfVisitor.prototype.visitBinary               = indexOfValue;\nIndexOfVisitor.prototype.visitFixedSizeBinary      = indexOfValue;\nIndexOfVisitor.prototype.visitDate                 = indexOfValue;\nIndexOfVisitor.prototype.visitDateDay              = indexOfValue;\nIndexOfVisitor.prototype.visitDateMillisecond      = indexOfValue;\nIndexOfVisitor.prototype.visitTimestamp            = indexOfValue;\nIndexOfVisitor.prototype.visitTimestampSecond      = indexOfValue;\nIndexOfVisitor.prototype.visitTimestampMillisecond = indexOfValue;\nIndexOfVisitor.prototype.visitTimestampMicrosecond = indexOfValue;\nIndexOfVisitor.prototype.visitTimestampNanosecond  = indexOfValue;\nIndexOfVisitor.prototype.visitTime                 = indexOfValue;\nIndexOfVisitor.prototype.visitTimeSecond           = indexOfValue;\nIndexOfVisitor.prototype.visitTimeMillisecond      = indexOfValue;\nIndexOfVisitor.prototype.visitTimeMicrosecond      = indexOfValue;\nIndexOfVisitor.prototype.visitTimeNanosecond       = indexOfValue;\nIndexOfVisitor.prototype.visitDecimal              = indexOfValue;\nIndexOfVisitor.prototype.visitList                 = indexOfValue;\nIndexOfVisitor.prototype.visitStruct               = indexOfValue;\nIndexOfVisitor.prototype.visitUnion                = indexOfValue;\nIndexOfVisitor.prototype.visitDenseUnion           = indexOfUnion;\nIndexOfVisitor.prototype.visitSparseUnion          = indexOfUnion;\nIndexOfVisitor.prototype.visitDictionary           = indexOfValue;\nIndexOfVisitor.prototype.visitInterval             = indexOfValue;\nIndexOfVisitor.prototype.visitIntervalDayTime      = indexOfValue;\nIndexOfVisitor.prototype.visitIntervalYearMonth    = indexOfValue;\nIndexOfVisitor.prototype.visitFixedSizeList        = indexOfValue;\nIndexOfVisitor.prototype.visitMap                  = indexOfValue;\n\n/** @ignore */\nexport const instance = new IndexOfVisitor();\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { Data } from '../data';\nimport { Type } from '../enum';\nimport { Visitor } from '../visitor';\nimport { VectorType } from '../interfaces';\nimport { iterateBits } from '../util/bit';\nimport { instance as getVisitor } from './get';\nimport {\n    DataType, Dictionary,\n    Bool, Null, Utf8, Binary, Decimal, FixedSizeBinary, List, FixedSizeList, Map_, Struct,\n    Float, Float16, Float32, Float64,\n    Int, Uint8, Uint16, Uint32, Uint64, Int8, Int16, Int32, Int64,\n    Date_, DateDay, DateMillisecond,\n    Interval, IntervalDayTime, IntervalYearMonth,\n    Time, TimeSecond, TimeMillisecond, TimeMicrosecond, TimeNanosecond,\n    Timestamp, TimestampSecond, TimestampMillisecond, TimestampMicrosecond, TimestampNanosecond,\n    Union, DenseUnion, SparseUnion,\n} from '../type';\n\n/** @ignore */\nexport interface IteratorVisitor extends Visitor {\n    visit<T extends VectorType>(node: T): IterableIterator<T['TValue'] | null>;\n    visitMany <T extends VectorType>(nodes: T[]): IterableIterator<T['TValue'] | null>[];\n    getVisitFn<T extends Type>(node: T): (vector: VectorType<T>) => IterableIterator<VectorType<T>['TValue'] | null>;\n    getVisitFn<T extends DataType>(node: VectorType<T> | Data<T> | T): (vector: VectorType<T>) => IterableIterator<VectorType<T>['TValue'] | null>;\n    visitNull                 <T extends Null>                 (vector: VectorType<T>): IterableIterator<T['TValue'] | null>;\n    visitBool                 <T extends Bool>                 (vector: VectorType<T>): IterableIterator<T['TValue'] | null>;\n    visitInt                  <T extends Int>                  (vector: VectorType<T>): IterableIterator<T['TValue'] | null>;\n    visitInt8                 <T extends Int8>                 (vector: VectorType<T>): IterableIterator<T['TValue'] | null>;\n    visitInt16                <T extends Int16>                (vector: VectorType<T>): IterableIterator<T['TValue'] | null>;\n    visitInt32                <T extends Int32>                (vector: VectorType<T>): IterableIterator<T['TValue'] | null>;\n    visitInt64                <T extends Int64>                (vector: VectorType<T>): IterableIterator<T['TValue'] | null>;\n    visitUint8                <T extends Uint8>                (vector: VectorType<T>): IterableIterator<T['TValue'] | null>;\n    visitUint16               <T extends Uint16>               (vector: VectorType<T>): IterableIterator<T['TValue'] | null>;\n    visitUint32               <T extends Uint32>               (vector: VectorType<T>): IterableIterator<T['TValue'] | null>;\n    visitUint64               <T extends Uint64>               (vector: VectorType<T>): IterableIterator<T['TValue'] | null>;\n    visitFloat                <T extends Float>                (vector: VectorType<T>): IterableIterator<T['TValue'] | null>;\n    visitFloat16              <T extends Float16>              (vector: VectorType<T>): IterableIterator<T['TValue'] | null>;\n    visitFloat32              <T extends Float32>              (vector: VectorType<T>): IterableIterator<T['TValue'] | null>;\n    visitFloat64              <T extends Float64>              (vector: VectorType<T>): IterableIterator<T['TValue'] | null>;\n    visitUtf8                 <T extends Utf8>                 (vector: VectorType<T>): IterableIterator<T['TValue'] | null>;\n    visitBinary               <T extends Binary>               (vector: VectorType<T>): IterableIterator<T['TValue'] | null>;\n    visitFixedSizeBinary      <T extends FixedSizeBinary>      (vector: VectorType<T>): IterableIterator<T['TValue'] | null>;\n    visitDate                 <T extends Date_>                (vector: VectorType<T>): IterableIterator<T['TValue'] | null>;\n    visitDateDay              <T extends DateDay>              (vector: VectorType<T>): IterableIterator<T['TValue'] | null>;\n    visitDateMillisecond      <T extends DateMillisecond>      (vector: VectorType<T>): IterableIterator<T['TValue'] | null>;\n    visitTimestamp            <T extends Timestamp>            (vector: VectorType<T>): IterableIterator<T['TValue'] | null>;\n    visitTimestampSecond      <T extends TimestampSecond>      (vector: VectorType<T>): IterableIterator<T['TValue'] | null>;\n    visitTimestampMillisecond <T extends TimestampMillisecond> (vector: VectorType<T>): IterableIterator<T['TValue'] | null>;\n    visitTimestampMicrosecond <T extends TimestampMicrosecond> (vector: VectorType<T>): IterableIterator<T['TValue'] | null>;\n    visitTimestampNanosecond  <T extends TimestampNanosecond>  (vector: VectorType<T>): IterableIterator<T['TValue'] | null>;\n    visitTime                 <T extends Time>                 (vector: VectorType<T>): IterableIterator<T['TValue'] | null>;\n    visitTimeSecond           <T extends TimeSecond>           (vector: VectorType<T>): IterableIterator<T['TValue'] | null>;\n    visitTimeMillisecond      <T extends TimeMillisecond>      (vector: VectorType<T>): IterableIterator<T['TValue'] | null>;\n    visitTimeMicrosecond      <T extends TimeMicrosecond>      (vector: VectorType<T>): IterableIterator<T['TValue'] | null>;\n    visitTimeNanosecond       <T extends TimeNanosecond>       (vector: VectorType<T>): IterableIterator<T['TValue'] | null>;\n    visitDecimal              <T extends Decimal>              (vector: VectorType<T>): IterableIterator<T['TValue'] | null>;\n    visitList                 <T extends List>                 (vector: VectorType<T>): IterableIterator<T['TValue'] | null>;\n    visitStruct               <T extends Struct>               (vector: VectorType<T>): IterableIterator<T['TValue'] | null>;\n    visitUnion                <T extends Union>                (vector: VectorType<T>): IterableIterator<T['TValue'] | null>;\n    visitDenseUnion           <T extends DenseUnion>           (vector: VectorType<T>): IterableIterator<T['TValue'] | null>;\n    visitSparseUnion          <T extends SparseUnion>          (vector: VectorType<T>): IterableIterator<T['TValue'] | null>;\n    visitDictionary           <T extends Dictionary>           (vector: VectorType<T>): IterableIterator<T['TValue'] | null>;\n    visitInterval             <T extends Interval>             (vector: VectorType<T>): IterableIterator<T['TValue'] | null>;\n    visitIntervalDayTime      <T extends IntervalDayTime>      (vector: VectorType<T>): IterableIterator<T['TValue'] | null>;\n    visitIntervalYearMonth    <T extends IntervalYearMonth>    (vector: VectorType<T>): IterableIterator<T['TValue'] | null>;\n    visitFixedSizeList        <T extends FixedSizeList>        (vector: VectorType<T>): IterableIterator<T['TValue'] | null>;\n    visitMap                  <T extends Map_>                 (vector: VectorType<T>): IterableIterator<T['TValue'] | null>;\n}\n\n/** @ignore */\nexport class IteratorVisitor extends Visitor {}\n\n/** @ignore */\nfunction nullableIterator<T extends DataType>(vector: VectorType<T>): IterableIterator<T['TValue'] | null> {\n    const getFn = getVisitor.getVisitFn(vector);\n    return iterateBits<T['TValue'] | null>(\n        vector.nullBitmap, vector.offset, vector.length, vector,\n        (vec: VectorType<T>, idx: number, nullByte: number, nullBit: number) =>\n            ((nullByte & 1 << nullBit) !== 0) ? getFn(vec, idx) : null\n    );\n}\n\n/** @ignore */\nfunction vectorIterator<T extends DataType>(vector: VectorType<T>): IterableIterator<T['TValue'] | null> {\n\n    // If nullable, iterate manually\n    if (vector.nullCount > 0) {\n        return nullableIterator<T>(vector);\n    }\n\n    const { type, typeId, length } = vector;\n\n    // Fast case, defer to native iterators if possible\n    if (vector.stride === 1 && (\n        (typeId === Type.Timestamp) ||\n        (typeId === Type.Int && (type as Int).bitWidth !== 64) ||\n        (typeId === Type.Time && (type as Time).bitWidth !== 64) ||\n        (typeId === Type.Float && (type as Float).precision > 0 /* Precision.HALF */)\n    )) {\n        return vector.values.subarray(0, length)[Symbol.iterator]();\n    }\n\n    // Otherwise, iterate manually\n    return (function* (getFn) {\n        for (let index = -1; ++index < length;) {\n            yield getFn(vector, index);\n        }\n    })(getVisitor.getVisitFn(vector));\n}\n\nIteratorVisitor.prototype.visitNull                 = vectorIterator;\nIteratorVisitor.prototype.visitBool                 = vectorIterator;\nIteratorVisitor.prototype.visitInt                  = vectorIterator;\nIteratorVisitor.prototype.visitInt8                 = vectorIterator;\nIteratorVisitor.prototype.visitInt16                = vectorIterator;\nIteratorVisitor.prototype.visitInt32                = vectorIterator;\nIteratorVisitor.prototype.visitInt64                = vectorIterator;\nIteratorVisitor.prototype.visitUint8                = vectorIterator;\nIteratorVisitor.prototype.visitUint16               = vectorIterator;\nIteratorVisitor.prototype.visitUint32               = vectorIterator;\nIteratorVisitor.prototype.visitUint64               = vectorIterator;\nIteratorVisitor.prototype.visitFloat                = vectorIterator;\nIteratorVisitor.prototype.visitFloat16              = vectorIterator;\nIteratorVisitor.prototype.visitFloat32              = vectorIterator;\nIteratorVisitor.prototype.visitFloat64              = vectorIterator;\nIteratorVisitor.prototype.visitUtf8                 = vectorIterator;\nIteratorVisitor.prototype.visitBinary               = vectorIterator;\nIteratorVisitor.prototype.visitFixedSizeBinary      = vectorIterator;\nIteratorVisitor.prototype.visitDate                 = vectorIterator;\nIteratorVisitor.prototype.visitDateDay              = vectorIterator;\nIteratorVisitor.prototype.visitDateMillisecond      = vectorIterator;\nIteratorVisitor.prototype.visitTimestamp            = vectorIterator;\nIteratorVisitor.prototype.visitTimestampSecond      = vectorIterator;\nIteratorVisitor.prototype.visitTimestampMillisecond = vectorIterator;\nIteratorVisitor.prototype.visitTimestampMicrosecond = vectorIterator;\nIteratorVisitor.prototype.visitTimestampNanosecond  = vectorIterator;\nIteratorVisitor.prototype.visitTime                 = vectorIterator;\nIteratorVisitor.prototype.visitTimeSecond           = vectorIterator;\nIteratorVisitor.prototype.visitTimeMillisecond      = vectorIterator;\nIteratorVisitor.prototype.visitTimeMicrosecond      = vectorIterator;\nIteratorVisitor.prototype.visitTimeNanosecond       = vectorIterator;\nIteratorVisitor.prototype.visitDecimal              = vectorIterator;\nIteratorVisitor.prototype.visitList                 = vectorIterator;\nIteratorVisitor.prototype.visitStruct               = vectorIterator;\nIteratorVisitor.prototype.visitUnion                = vectorIterator;\nIteratorVisitor.prototype.visitDenseUnion           = vectorIterator;\nIteratorVisitor.prototype.visitSparseUnion          = vectorIterator;\nIteratorVisitor.prototype.visitDictionary           = vectorIterator;\nIteratorVisitor.prototype.visitInterval             = vectorIterator;\nIteratorVisitor.prototype.visitIntervalDayTime      = vectorIterator;\nIteratorVisitor.prototype.visitIntervalYearMonth    = vectorIterator;\nIteratorVisitor.prototype.visitFixedSizeList        = vectorIterator;\nIteratorVisitor.prototype.visitMap                  = vectorIterator;\n\n/** @ignore */\nexport const instance = new IteratorVisitor();\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { Data } from '../data';\nimport { Type } from '../enum';\nimport { Visitor } from '../visitor';\nimport { VectorType } from '../interfaces';\nimport { instance as iteratorVisitor } from './iterator';\nimport {\n    DataType, Dictionary,\n    Bool, Null, Utf8, Binary, Decimal, FixedSizeBinary, List, FixedSizeList, Map_, Struct,\n    Float, Float16, Float32, Float64,\n    Int, Uint8, Uint16, Uint32, Uint64, Int8, Int16, Int32, Int64,\n    Date_, DateDay, DateMillisecond,\n    Interval, IntervalDayTime, IntervalYearMonth,\n    Time, TimeSecond, TimeMillisecond, TimeMicrosecond, TimeNanosecond,\n    Timestamp, TimestampSecond, TimestampMillisecond, TimestampMicrosecond, TimestampNanosecond,\n    Union, DenseUnion, SparseUnion,\n} from '../type';\n\n/** @ignore */\nexport interface ToArrayVisitor extends Visitor {\n    visit<T extends VectorType>(node: T): T['TArray'];\n    visitMany<T extends VectorType>(nodes: T[]): T['TArray'][];\n    getVisitFn<T extends Type>(node: T): (vector: VectorType<T>) => VectorType<T>['TArray'];\n    getVisitFn<T extends DataType>(node: VectorType<T> | Data<T> | T): (vector: VectorType<T>) => VectorType<T>['TArray'];\n    visitNull                                    <T extends Null>                (vector: VectorType<T>): VectorType<T>['TArray'];\n    visitBool                                    <T extends Bool>                (vector: VectorType<T>): VectorType<T>['TArray'];\n    visitInt                                     <T extends Int>                 (vector: VectorType<T>): VectorType<T>['TArray'];\n    visitInt8                                    <T extends Int8>                (vector: VectorType<T>): VectorType<T>['TArray'];\n    visitInt16                                   <T extends Int16>               (vector: VectorType<T>): VectorType<T>['TArray'];\n    visitInt32                                   <T extends Int32>               (vector: VectorType<T>): VectorType<T>['TArray'];\n    visitInt64                                   <T extends Int64>               (vector: VectorType<T>): VectorType<T>['TArray'];\n    visitUint8                                   <T extends Uint8>               (vector: VectorType<T>): VectorType<T>['TArray'];\n    visitUint16                                  <T extends Uint16>              (vector: VectorType<T>): VectorType<T>['TArray'];\n    visitUint32                                  <T extends Uint32>              (vector: VectorType<T>): VectorType<T>['TArray'];\n    visitUint64                                  <T extends Uint64>              (vector: VectorType<T>): VectorType<T>['TArray'];\n    visitFloat                                   <T extends Float>               (vector: VectorType<T>): VectorType<T>['TArray'];\n    visitFloat16                                 <T extends Float16>             (vector: VectorType<T>): VectorType<T>['TArray'];\n    visitFloat32                                 <T extends Float32>             (vector: VectorType<T>): VectorType<T>['TArray'];\n    visitFloat64                                 <T extends Float64>             (vector: VectorType<T>): VectorType<T>['TArray'];\n    visitUtf8                                    <T extends Utf8>                (vector: VectorType<T>): VectorType<T>['TArray'];\n    visitBinary                                  <T extends Binary>              (vector: VectorType<T>): VectorType<T>['TArray'];\n    visitFixedSizeBinary                         <T extends FixedSizeBinary>     (vector: VectorType<T>): VectorType<T>['TArray'];\n    visitDate                                    <T extends Date_>               (vector: VectorType<T>): VectorType<T>['TArray'];\n    visitDateDay                                 <T extends DateDay>             (vector: VectorType<T>): VectorType<T>['TArray'];\n    visitDateMillisecond                         <T extends DateMillisecond>     (vector: VectorType<T>): VectorType<T>['TArray'];\n    visitTimestamp                               <T extends Timestamp>           (vector: VectorType<T>): VectorType<T>['TArray'];\n    visitTimestampSecond                         <T extends TimestampSecond>     (vector: VectorType<T>): VectorType<T>['TArray'];\n    visitTimestampMillisecond                    <T extends TimestampMillisecond>(vector: VectorType<T>): VectorType<T>['TArray'];\n    visitTimestampMicrosecond                    <T extends TimestampMicrosecond>(vector: VectorType<T>): VectorType<T>['TArray'];\n    visitTimestampNanosecond                     <T extends TimestampNanosecond> (vector: VectorType<T>): VectorType<T>['TArray'];\n    visitTime                                    <T extends Time>                (vector: VectorType<T>): VectorType<T>['TArray'];\n    visitTimeSecond                              <T extends TimeSecond>          (vector: VectorType<T>): VectorType<T>['TArray'];\n    visitTimeMillisecond                         <T extends TimeMillisecond>     (vector: VectorType<T>): VectorType<T>['TArray'];\n    visitTimeMicrosecond                         <T extends TimeMicrosecond>     (vector: VectorType<T>): VectorType<T>['TArray'];\n    visitTimeNanosecond                          <T extends TimeNanosecond>      (vector: VectorType<T>): VectorType<T>['TArray'];\n    visitDecimal                                 <T extends Decimal>             (vector: VectorType<T>): VectorType<T>['TArray'];\n    visitList                <R extends DataType, T extends List<R>>             (vector: VectorType<T>): VectorType<T>['TArray'];\n    visitStruct                                  <T extends Struct>              (vector: VectorType<T>): VectorType<T>['TArray'];\n    visitUnion                                   <T extends Union>               (vector: VectorType<T>): VectorType<T>['TArray'];\n    visitDenseUnion                              <T extends DenseUnion>          (vector: VectorType<T>): VectorType<T>['TArray'];\n    visitSparseUnion                             <T extends SparseUnion>         (vector: VectorType<T>): VectorType<T>['TArray'];\n    visitDictionary          <R extends DataType, T extends Dictionary<R>>       (vector: VectorType<T>): VectorType<T>['TArray'];\n    visitInterval                                <T extends Interval>            (vector: VectorType<T>): VectorType<T>['TArray'];\n    visitIntervalDayTime                         <T extends IntervalDayTime>     (vector: VectorType<T>): VectorType<T>['TArray'];\n    visitIntervalYearMonth                       <T extends IntervalYearMonth>   (vector: VectorType<T>): VectorType<T>['TArray'];\n    visitFixedSizeList       <R extends DataType, T extends FixedSizeList<R>>    (vector: VectorType<T>): VectorType<T>['TArray'];\n    visitMap                                     <T extends Map_>                (vector: VectorType<T>): VectorType<T>['TArray'];\n}\n\n/** @ignore */\nexport class ToArrayVisitor extends Visitor {}\n\n/** @ignore */\nfunction arrayOfVector<T extends DataType>(vector: VectorType<T>): T['TArray'] {\n\n    const { type, length, stride } = vector;\n\n    // Fast case, return subarray if possible\n    switch (type.typeId) {\n        case Type.Int:\n        case Type.Float: case Type.Decimal:\n        case Type.Time: case Type.Timestamp:\n            return vector.values.subarray(0, length * stride);\n    }\n\n    // Otherwise if not primitive, slow copy\n    return [...iteratorVisitor.visit(vector)] as T['TArray'];\n}\n\nToArrayVisitor.prototype.visitNull                 = arrayOfVector;\nToArrayVisitor.prototype.visitBool                 = arrayOfVector;\nToArrayVisitor.prototype.visitInt                  = arrayOfVector;\nToArrayVisitor.prototype.visitInt8                 = arrayOfVector;\nToArrayVisitor.prototype.visitInt16                = arrayOfVector;\nToArrayVisitor.prototype.visitInt32                = arrayOfVector;\nToArrayVisitor.prototype.visitInt64                = arrayOfVector;\nToArrayVisitor.prototype.visitUint8                = arrayOfVector;\nToArrayVisitor.prototype.visitUint16               = arrayOfVector;\nToArrayVisitor.prototype.visitUint32               = arrayOfVector;\nToArrayVisitor.prototype.visitUint64               = arrayOfVector;\nToArrayVisitor.prototype.visitFloat                = arrayOfVector;\nToArrayVisitor.prototype.visitFloat16              = arrayOfVector;\nToArrayVisitor.prototype.visitFloat32              = arrayOfVector;\nToArrayVisitor.prototype.visitFloat64              = arrayOfVector;\nToArrayVisitor.prototype.visitUtf8                 = arrayOfVector;\nToArrayVisitor.prototype.visitBinary               = arrayOfVector;\nToArrayVisitor.prototype.visitFixedSizeBinary      = arrayOfVector;\nToArrayVisitor.prototype.visitDate                 = arrayOfVector;\nToArrayVisitor.prototype.visitDateDay              = arrayOfVector;\nToArrayVisitor.prototype.visitDateMillisecond      = arrayOfVector;\nToArrayVisitor.prototype.visitTimestamp            = arrayOfVector;\nToArrayVisitor.prototype.visitTimestampSecond      = arrayOfVector;\nToArrayVisitor.prototype.visitTimestampMillisecond = arrayOfVector;\nToArrayVisitor.prototype.visitTimestampMicrosecond = arrayOfVector;\nToArrayVisitor.prototype.visitTimestampNanosecond  = arrayOfVector;\nToArrayVisitor.prototype.visitTime                 = arrayOfVector;\nToArrayVisitor.prototype.visitTimeSecond           = arrayOfVector;\nToArrayVisitor.prototype.visitTimeMillisecond      = arrayOfVector;\nToArrayVisitor.prototype.visitTimeMicrosecond      = arrayOfVector;\nToArrayVisitor.prototype.visitTimeNanosecond       = arrayOfVector;\nToArrayVisitor.prototype.visitDecimal              = arrayOfVector;\nToArrayVisitor.prototype.visitList                 = arrayOfVector;\nToArrayVisitor.prototype.visitStruct               = arrayOfVector;\nToArrayVisitor.prototype.visitUnion                = arrayOfVector;\nToArrayVisitor.prototype.visitDenseUnion           = arrayOfVector;\nToArrayVisitor.prototype.visitSparseUnion          = arrayOfVector;\nToArrayVisitor.prototype.visitDictionary           = arrayOfVector;\nToArrayVisitor.prototype.visitInterval             = arrayOfVector;\nToArrayVisitor.prototype.visitIntervalDayTime      = arrayOfVector;\nToArrayVisitor.prototype.visitIntervalYearMonth    = arrayOfVector;\nToArrayVisitor.prototype.visitFixedSizeList        = arrayOfVector;\nToArrayVisitor.prototype.visitMap                  = arrayOfVector;\n\n/** @ignore */\nexport const instance = new ToArrayVisitor();\n","/* istanbul ignore file */\n\n// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { Data } from '../data';\nimport { Visitor } from '../visitor';\nimport { VectorType } from '../interfaces';\nimport { Type, TimeUnit } from '../enum';\nimport { Schema, Field } from '../schema';\nimport {\n    DataType, Dictionary,\n    Float, Int, Date_, Interval, Time, Timestamp,\n    Bool, Null, Utf8, Binary, Decimal, FixedSizeBinary,\n    List, FixedSizeList, Map_, Struct, Union,\n} from '../type';\n\n/** @ignore */ const sum = (x: number, y: number) => x + y;\n/** @ignore */ const variableWidthColumnErrorMessage = (type: DataType) => `Cannot compute the byte width of variable-width column ${type}`;\n\n/** @ignore */\nexport interface ByteWidthVisitor extends Visitor {\n    visit<T extends DataType>(node: T): number;\n    visitMany<T extends DataType>(nodes: T[]): number[];\n    getVisitFn<T extends Type>    (node: T): (type: DataType<T>) => number;\n    getVisitFn<T extends DataType>(node: VectorType<T> | Data<T> | T): (type: T) => number;\n}\n\n/** @ignore */\nexport class ByteWidthVisitor extends Visitor {\n    public visitNull            (____: Null            ) { return 0; }\n    public visitInt             (type: Int             ) { return type.bitWidth / 8; }\n    public visitFloat           (type: Float           ) { return type.ArrayType.BYTES_PER_ELEMENT; }\n    public visitBinary          (type: Binary          ) { throw new Error(variableWidthColumnErrorMessage(type)); }\n    public visitUtf8            (type: Utf8            ) { throw new Error(variableWidthColumnErrorMessage(type)); }\n    public visitBool            (____: Bool            ) { return 1 / 8; }\n    public visitDecimal         (____: Decimal         ) { return 16; }\n    public visitDate            (type: Date_           ) { return (type.unit + 1) * 4; }\n    public visitTime            (type: Time            ) { return type.bitWidth / 8; }\n    public visitTimestamp       (type: Timestamp       ) { return type.unit === TimeUnit.SECOND ? 4 : 8; }\n    public visitInterval        (type: Interval        ) { return (type.unit + 1) * 4; }\n    public visitList            (type: List            ) { throw new Error(variableWidthColumnErrorMessage(type)); }\n    public visitStruct          (type: Struct          ) { return this.visitFields(type.children).reduce(sum, 0); }\n    public visitUnion           (type: Union           ) { return this.visitFields(type.children).reduce(sum, 0); }\n    public visitFixedSizeBinary (type: FixedSizeBinary ) { return type.byteWidth; }\n    public visitFixedSizeList   (type: FixedSizeList   ) { return type.listSize * this.visitFields(type.children).reduce(sum, 0); }\n    public visitMap             (type: Map_            ) { return this.visitFields(type.children).reduce(sum, 0); }\n    public visitDictionary      (type: Dictionary      ) { return this.visit(type.indices); }\n    public visitFields          (fields: Field[]       ) { return (fields || []).map((field) => this.visit(field.type)); }\n    public visitSchema          (schema: Schema        ) { return this.visitFields(schema.fields).reduce(sum, 0); }\n}\n\n/** @ignore */\nexport const instance = new ByteWidthVisitor();\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { Data } from '../data';\nimport { Type } from '../enum';\nimport { DataType } from '../type';\nimport { Visitor } from '../visitor';\nimport { VectorType, VectorCtor } from '../interfaces';\n\nimport { BinaryVector } from '../vector/binary';\nimport { BoolVector } from '../vector/bool';\nimport { DateVector, DateDayVector, DateMillisecondVector } from '../vector/date';\nimport { DecimalVector } from '../vector/decimal';\nimport { DictionaryVector } from '../vector/dictionary';\nimport { FixedSizeBinaryVector } from '../vector/fixedsizebinary';\nimport { FixedSizeListVector } from '../vector/fixedsizelist';\nimport { FloatVector, Float16Vector, Float32Vector, Float64Vector } from '../vector/float';\nimport { IntervalVector, IntervalDayTimeVector, IntervalYearMonthVector } from '../vector/interval';\nimport { IntVector, Int8Vector, Int16Vector, Int32Vector, Int64Vector, Uint8Vector, Uint16Vector, Uint32Vector, Uint64Vector } from '../vector/int';\nimport { ListVector } from '../vector/list';\nimport { MapVector } from '../vector/map';\nimport { NullVector } from '../vector/null';\nimport { StructVector } from '../vector/struct';\nimport { TimestampVector, TimestampSecondVector, TimestampMillisecondVector, TimestampMicrosecondVector, TimestampNanosecondVector } from '../vector/timestamp';\nimport { TimeVector, TimeSecondVector, TimeMillisecondVector, TimeMicrosecondVector, TimeNanosecondVector } from '../vector/time';\nimport { UnionVector, DenseUnionVector, SparseUnionVector } from '../vector/union';\nimport { Utf8Vector } from '../vector/utf8';\n\n/** @ignore */\nexport interface GetVectorConstructor extends Visitor {\n    visit<T extends Type>(node: T): VectorCtor<T>;\n    visitMany <T extends Type>(nodes: T[]): VectorCtor<T>[];\n    getVisitFn<T extends Type>(node: T): () => VectorCtor<T>;\n    getVisitFn<T extends DataType>(node: VectorType<T> | Data<T> | T): () => VectorCtor<T>;\n}\n\n/** @ignore */\nexport class GetVectorConstructor extends Visitor {\n    public visitNull                 () { return NullVector; }\n    public visitBool                 () { return BoolVector; }\n    public visitInt                  () { return IntVector; }\n    public visitInt8                 () { return Int8Vector; }\n    public visitInt16                () { return Int16Vector; }\n    public visitInt32                () { return Int32Vector; }\n    public visitInt64                () { return Int64Vector; }\n    public visitUint8                () { return Uint8Vector; }\n    public visitUint16               () { return Uint16Vector; }\n    public visitUint32               () { return Uint32Vector; }\n    public visitUint64               () { return Uint64Vector; }\n    public visitFloat                () { return FloatVector; }\n    public visitFloat16              () { return Float16Vector; }\n    public visitFloat32              () { return Float32Vector; }\n    public visitFloat64              () { return Float64Vector; }\n    public visitUtf8                 () { return Utf8Vector; }\n    public visitBinary               () { return BinaryVector; }\n    public visitFixedSizeBinary      () { return FixedSizeBinaryVector; }\n    public visitDate                 () { return DateVector; }\n    public visitDateDay              () { return DateDayVector; }\n    public visitDateMillisecond      () { return DateMillisecondVector; }\n    public visitTimestamp            () { return TimestampVector; }\n    public visitTimestampSecond      () { return TimestampSecondVector; }\n    public visitTimestampMillisecond () { return TimestampMillisecondVector; }\n    public visitTimestampMicrosecond () { return TimestampMicrosecondVector; }\n    public visitTimestampNanosecond  () { return TimestampNanosecondVector; }\n    public visitTime                 () { return TimeVector; }\n    public visitTimeSecond           () { return TimeSecondVector; }\n    public visitTimeMillisecond      () { return TimeMillisecondVector; }\n    public visitTimeMicrosecond      () { return TimeMicrosecondVector; }\n    public visitTimeNanosecond       () { return TimeNanosecondVector; }\n    public visitDecimal              () { return DecimalVector; }\n    public visitList                 () { return ListVector; }\n    public visitStruct               () { return StructVector; }\n    public visitUnion                () { return UnionVector; }\n    public visitDenseUnion           () { return DenseUnionVector; }\n    public visitSparseUnion          () { return SparseUnionVector; }\n    public visitDictionary           () { return DictionaryVector; }\n    public visitInterval             () { return IntervalVector; }\n    public visitIntervalDayTime      () { return IntervalDayTimeVector; }\n    public visitIntervalYearMonth    () { return IntervalYearMonthVector; }\n    public visitFixedSizeList        () { return FixedSizeListVector; }\n    public visitMap                  () { return MapVector; }\n}\n\n/** @ignore */\nexport const instance = new GetVectorConstructor();\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nexport { Vector } from '../vector';\nexport { BaseVector } from './base';\nexport { BinaryVector } from './binary';\nexport { BoolVector } from './bool';\nexport { Chunked } from './chunked';\nexport { DateVector, DateDayVector, DateMillisecondVector } from './date';\nexport { DecimalVector } from './decimal';\nexport { DictionaryVector } from './dictionary';\nexport { FixedSizeBinaryVector } from './fixedsizebinary';\nexport { FixedSizeListVector } from './fixedsizelist';\nexport { FloatVector, Float16Vector, Float32Vector, Float64Vector } from './float';\nexport { IntervalVector, IntervalDayTimeVector, IntervalYearMonthVector } from './interval';\nexport { IntVector, Int8Vector, Int16Vector, Int32Vector, Int64Vector, Uint8Vector, Uint16Vector, Uint32Vector, Uint64Vector } from './int';\nexport { ListVector } from './list';\nexport { MapVector } from './map';\nexport { NullVector } from './null';\nexport { StructVector } from './struct';\nexport { TimestampVector, TimestampSecondVector, TimestampMillisecondVector, TimestampMicrosecondVector, TimestampNanosecondVector } from './timestamp';\nexport { TimeVector, TimeSecondVector, TimeMillisecondVector, TimeMicrosecondVector, TimeNanosecondVector } from './time';\nexport { UnionVector, DenseUnionVector, SparseUnionVector } from './union';\nexport { Utf8Vector } from './utf8';\nexport { MapRow, StructRow } from './row';\n\nimport * as fn from '../util/fn';\nimport { Data } from '../data';\nimport { Type } from '../enum';\nimport { Vector } from '../vector';\nimport { DataType } from '../type';\nimport { Chunked } from './chunked';\nimport { BaseVector } from './base';\nimport { setBool } from '../util/bit';\nimport { isIterable, isAsyncIterable } from '../util/compat';\nimport { Builder, IterableBuilderOptions } from '../builder';\nimport { VectorType as V, VectorCtorArgs } from '../interfaces';\nimport { instance as getVisitor } from '../visitor/get';\nimport { instance as setVisitor } from '../visitor/set';\nimport { instance as indexOfVisitor } from '../visitor/indexof';\nimport { instance as toArrayVisitor } from '../visitor/toarray';\nimport { instance as iteratorVisitor } from '../visitor/iterator';\nimport { instance as byteWidthVisitor } from '../visitor/bytewidth';\nimport { instance as getVectorConstructor } from '../visitor/vectorctor';\n\ndeclare module '../vector' {\n    namespace Vector {\n        export { newVector as new };\n        export { vectorFrom as from };\n    }\n}\n\ndeclare module './base' {\n    namespace BaseVector {\n        export { vectorFrom as from };\n    }\n    interface BaseVector<T extends DataType> {\n        get(index: number): T['TValue'] | null;\n        set(index: number, value: T['TValue'] | null): void;\n        indexOf(value: T['TValue'] | null, fromIndex?: number): number;\n        toArray(): T['TArray'];\n        getByteWidth(): number;\n        [Symbol.iterator](): IterableIterator<T['TValue'] | null>;\n    }\n}\n\n/** @nocollapse */\nVector.new = newVector;\n\n/** @nocollapse */\nVector.from = vectorFrom;\n\n/** @ignore */\nfunction newVector<T extends DataType>(data: Data<T>, ...args: VectorCtorArgs<V<T>>): V<T> {\n    return new (getVectorConstructor.getVisitFn<T>(data)())(data, ...args) as V<T>;\n}\n\n/** @ignore */\nexport interface VectorBuilderOptions<T extends DataType, TNull = any> extends IterableBuilderOptions<T, TNull> { values: Iterable<T['TValue'] | TNull>; }\n/** @ignore */\nexport interface VectorBuilderOptionsAsync<T extends DataType, TNull = any> extends IterableBuilderOptions<T, TNull> { values: AsyncIterable<T['TValue'] | TNull>; }\n\n/** @ignore */\nexport function vectorFromValuesWithType<T extends DataType, TNull = any>(newDataType: () => T, input: Iterable<T['TValue'] | TNull> | AsyncIterable<T['TValue'] | TNull> | VectorBuilderOptions<T, TNull> | VectorBuilderOptionsAsync<T, TNull>) {\n    if (isIterable(input)) {\n        return Vector.from({ 'nullValues': [null, undefined], type: newDataType(), 'values': input }) as V<T>;\n    } else if (isAsyncIterable(input)) {\n        return Vector.from({ 'nullValues': [null, undefined], type: newDataType(), 'values': input }) as Promise<V<T>>;\n    }\n    const {\n        'values': values = [],\n        'type': type = newDataType(),\n        'nullValues': nullValues = [null, undefined],\n    } = { ...input };\n    return isIterable(values)\n        ? Vector.from({ nullValues, ...input, type } as VectorBuilderOptions<T, TNull>)\n        : Vector.from({ nullValues, ...input, type } as VectorBuilderOptionsAsync<T, TNull>);\n}\n\n/** @ignore */\nfunction vectorFrom<T extends DataType = any, TNull = any>(input: VectorBuilderOptions<T, TNull>): Vector<T>;\nfunction vectorFrom<T extends DataType = any, TNull = any>(input: VectorBuilderOptionsAsync<T, TNull>): Promise<Vector<T>>;\nfunction vectorFrom<T extends DataType = any, TNull = any>(input: VectorBuilderOptions<T, TNull> | VectorBuilderOptionsAsync<T, TNull>) {\n    const { 'values': values = [], ...options } = { 'nullValues': [null, undefined], ...input } as VectorBuilderOptions<T, TNull> | VectorBuilderOptionsAsync<T, TNull>;\n    if (isIterable<T['TValue'] | TNull>(values)) {\n        const chunks = [...Builder.throughIterable(options)(values)];\n        return chunks.length === 1 ? chunks[0] : Chunked.concat<T>(chunks);\n    }\n    return (async (chunks: V<T>[]) => {\n        const transform = Builder.throughAsyncIterable(options);\n        for await (const chunk of transform(values)) {\n            chunks.push(chunk);\n        }\n        return chunks.length === 1 ? chunks[0] : Chunked.concat<T>(chunks);\n    })([]);\n}\n\n//\n// We provide the following method implementations for code navigability purposes only.\n// They're overridden at runtime below with the specific Visitor implementation for each type,\n// short-circuiting the usual Visitor traversal and reducing intermediate lookups and calls.\n// This comment is here to remind you to not set breakpoints in these function bodies, or to inform\n// you why the breakpoints you have already set are not being triggered. Have a great day!\n//\n\nBaseVector.prototype.get = function baseVectorGet<T extends DataType>(this: BaseVector<T>, index: number): T['TValue'] | null {\n    return getVisitor.visit(this, index);\n};\n\nBaseVector.prototype.set = function baseVectorSet<T extends DataType>(this: BaseVector<T>, index: number, value: T['TValue'] | null): void {\n    return setVisitor.visit(this, index, value);\n};\n\nBaseVector.prototype.indexOf = function baseVectorIndexOf<T extends DataType>(this: BaseVector<T>, value: T['TValue'] | null, fromIndex?: number): number {\n    return indexOfVisitor.visit(this, value, fromIndex);\n};\n\nBaseVector.prototype.toArray = function baseVectorToArray<T extends DataType>(this: BaseVector<T>): T['TArray'] {\n    return toArrayVisitor.visit(this);\n};\n\nBaseVector.prototype.getByteWidth = function baseVectorGetByteWidth<T extends DataType>(this: BaseVector<T>): number {\n    return byteWidthVisitor.visit(this.type);\n};\n\nBaseVector.prototype[Symbol.iterator] = function baseVectorSymbolIterator<T extends DataType>(this: BaseVector<T>): IterableIterator<T['TValue'] | null> {\n    return iteratorVisitor.visit(this);\n};\n\n(BaseVector.prototype as any)._bindDataAccessors = bindBaseVectorDataAccessors;\n\n// Perf: bind and assign the operator Visitor methods to each of the Vector subclasses for each Type\n(Object.keys(Type) as any[])\n    .map((T: any) => Type[T] as any)\n    .filter((T: any): T is Type => typeof T === 'number')\n    .filter((typeId) => typeId !== Type.NONE)\n    .forEach((typeId) => {\n        const VectorCtor = getVectorConstructor.visit(typeId);\n        VectorCtor.prototype['get'] = fn.partial1(getVisitor.getVisitFn(typeId));\n        VectorCtor.prototype['set'] = fn.partial2(setVisitor.getVisitFn(typeId));\n        VectorCtor.prototype['indexOf'] = fn.partial2(indexOfVisitor.getVisitFn(typeId));\n        VectorCtor.prototype['toArray'] = fn.partial0(toArrayVisitor.getVisitFn(typeId));\n        VectorCtor.prototype['getByteWidth'] = partialType0(byteWidthVisitor.getVisitFn(typeId));\n        VectorCtor.prototype[Symbol.iterator] = fn.partial0(iteratorVisitor.getVisitFn(typeId));\n    });\n\n/** @ignore */\nfunction partialType0<T extends Vector>(visit: (node: T['type']) => any) {\n    return function(this: T) { return visit(this.type); };\n}\n\n/** @ignore */\nfunction wrapNullableGet<T extends DataType, V extends Vector<T>, F extends (i: number) => any>(fn: F): (...args: Parameters<F>) => ReturnType<F> {\n    return function(this: V, i: number) { return this.isValid(i) ? fn.call(this, i) : null; };\n}\n\n/** @ignore */\nfunction wrapNullableSet<T extends DataType, V extends BaseVector<T>, F extends (i: number, a: any) => void>(fn: F): (...args: Parameters<F>) => void {\n    return function(this: V, i: number, a: any) {\n        if (setBool(this.nullBitmap, this.offset + i, !(a === null || a === undefined))) {\n            fn.call(this, i, a);\n        }\n    };\n}\n\n/** @ignore */\nfunction bindBaseVectorDataAccessors<T extends DataType>(this: BaseVector<T>) {\n    const nullBitmap = this.nullBitmap;\n    if (nullBitmap && nullBitmap.byteLength > 0) {\n        this.get = wrapNullableGet(this.get);\n        this.set = wrapNullableSet(this.set);\n    }\n}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { Data } from './data';\nimport { Column } from './column';\nimport { Schema, Field } from './schema';\nimport { RecordBatch, _InternalEmptyPlaceholderRecordBatch } from './recordbatch';\nimport { DataFrame } from './compute/dataframe';\nimport { RecordBatchReader } from './ipc/reader';\nimport { DataType, RowLike, Struct } from './type';\nimport { selectColumnArgs, selectArgs } from './util/args';\nimport { Clonable, Sliceable, Applicative } from './vector';\nimport { isPromise, isIterable, isAsyncIterable } from './util/compat';\nimport { RecordBatchFileWriter, RecordBatchStreamWriter } from './ipc/writer';\nimport { distributeColumnsIntoRecordBatches, distributeVectorsIntoRecordBatches } from './util/recordbatch';\nimport { Vector, Chunked, StructVector, VectorBuilderOptions, VectorBuilderOptionsAsync } from './vector/index';\n\ntype VectorMap = { [key: string]: Vector };\ntype Fields<T extends { [key: string]: DataType }> = (keyof T)[] | Field<T[keyof T]>[];\ntype ChildData<T extends { [key: string]: DataType }> = Data<T[keyof T]>[] | Vector<T[keyof T]>[];\ntype Columns<T extends { [key: string]: DataType }> = Column<T[keyof T]>[] | Column<T[keyof T]>[][];\n\nexport interface Table<T extends { [key: string]: DataType } = any> {\n\n    get(index: number): Struct<T>['TValue'];\n    [Symbol.iterator](): IterableIterator<RowLike<T>>;\n\n    slice(begin?: number, end?: number): Table<T>;\n    concat(...others: Vector<Struct<T>>[]): Table<T>;\n    clone(chunks?: RecordBatch<T>[], offsets?: Uint32Array): Table<T>;\n\n    scan(next: import('./compute/dataframe').NextFunc, bind?: import('./compute/dataframe').BindFunc): void;\n    scanReverse(next: import('./compute/dataframe').NextFunc, bind?: import('./compute/dataframe').BindFunc): void;\n    countBy(name: import('./compute/predicate').Col | string): import('./compute/dataframe').CountByResult;\n    filter(predicate: import('./compute/predicate').Predicate): import('./compute/dataframe').FilteredDataFrame<T>;\n}\n\nexport class Table<T extends { [key: string]: DataType } = any>\n    extends Chunked<Struct<T>>\n    implements DataFrame<T>,\n               Clonable<Table<T>>,\n               Sliceable<Table<T>>,\n               Applicative<Struct<T>, Table<T>> {\n\n    /** @nocollapse */\n    public static empty<T extends { [key: string]: DataType } = {}>(schema = new Schema<T>([])) { return new Table<T>(schema, []); }\n\n    public static from(): Table<{}>;\n    public static from<T extends { [key: string]: DataType } = any>(source: RecordBatchReader<T>): Table<T>;\n    public static from<T extends { [key: string]: DataType } = any>(source: import('./ipc/reader').FromArg0): Table<T>;\n    public static from<T extends { [key: string]: DataType } = any>(source: import('./ipc/reader').FromArg2): Table<T>;\n    public static from<T extends { [key: string]: DataType } = any>(source: import('./ipc/reader').FromArg1): Promise<Table<T>>;\n    public static from<T extends { [key: string]: DataType } = any>(source: import('./ipc/reader').FromArg3): Promise<Table<T>>;\n    public static from<T extends { [key: string]: DataType } = any>(source: import('./ipc/reader').FromArg4): Promise<Table<T>>;\n    public static from<T extends { [key: string]: DataType } = any>(source: import('./ipc/reader').FromArg5): Promise<Table<T>>;\n    public static from<T extends { [key: string]: DataType } = any>(source: PromiseLike<RecordBatchReader<T>>): Promise<Table<T>>;\n    public static from<T extends { [key: string]: DataType } = any, TNull = any>(options: VectorBuilderOptions<Struct<T>, TNull>): Table<T>;\n    public static from<T extends { [key: string]: DataType } = any, TNull = any>(options: VectorBuilderOptionsAsync<Struct<T>, TNull>): Promise<Table<T>>;\n    /** @nocollapse */\n    public static from<T extends { [key: string]: DataType } = any, TNull = any>(input?: any) {\n\n        if (!input) { return Table.empty(); }\n\n        if (typeof input === 'object') {\n            let table = isIterable(input['values']) ? tableFromIterable<T, TNull>(input)\n                 : isAsyncIterable(input['values']) ? tableFromAsyncIterable<T, TNull>(input)\n                                                    : null;\n            if (table !== null) { return table; }\n        }\n\n        let reader = RecordBatchReader.from<T>(input) as RecordBatchReader<T> | Promise<RecordBatchReader<T>>;\n\n        if (isPromise<RecordBatchReader<T>>(reader)) {\n            return (async () => await Table.from(await reader))();\n        }\n        if (reader.isSync() && (reader = reader.open())) {\n            return !reader.schema ? Table.empty() : new Table<T>(reader.schema, [...reader]);\n        }\n        return (async (opening) => {\n            const reader = await opening;\n            const schema = reader.schema;\n            const batches: RecordBatch[] = [];\n            if (schema) {\n                for await (let batch of reader) {\n                    batches.push(batch);\n                }\n                return new Table<T>(schema, batches);\n            }\n            return Table.empty();\n        })(reader.open());\n    }\n\n    /** @nocollapse */\n    public static async fromAsync<T extends { [key: string]: DataType } = any>(source: import('./ipc/reader').FromArgs): Promise<Table<T>> {\n        return await Table.from<T>(source as any);\n    }\n\n    /** @nocollapse */\n    public static fromStruct<T extends { [key: string]: DataType } = any>(vector: Vector<Struct<T>>) {\n        return Table.new<T>(vector.data.childData as Data<T[keyof T]>[], vector.type.children);\n    }\n\n    /**\n     * @summary Create a new Table from a collection of Columns or Vectors,\n     * with an optional list of names or Fields.\n     *\n     *\n     * `Table.new` accepts an Object of\n     * Columns or Vectors, where the keys will be used as the field names\n     * for the Schema:\n     * ```ts\n     * const i32s = Int32Vector.from([1, 2, 3]);\n     * const f32s = Float32Vector.from([.1, .2, .3]);\n     * const table = Table.new({ i32: i32s, f32: f32s });\n     * assert(table.schema.fields[0].name === 'i32');\n     * ```\n     *\n     * It also accepts a a list of Vectors with an optional list of names or\n     * Fields for the resulting Schema. If the list is omitted or a name is\n     * missing, the numeric index of each Vector will be used as the name:\n     * ```ts\n     * const i32s = Int32Vector.from([1, 2, 3]);\n     * const f32s = Float32Vector.from([.1, .2, .3]);\n     * const table = Table.new([i32s, f32s], ['i32']);\n     * assert(table.schema.fields[0].name === 'i32');\n     * assert(table.schema.fields[1].name === '1');\n     * ```\n     *\n     * If the supplied arguments are Columns, `Table.new` will infer the Schema\n     * from the Columns:\n     * ```ts\n     * const i32s = Column.new('i32', Int32Vector.from([1, 2, 3]));\n     * const f32s = Column.new('f32', Float32Vector.from([.1, .2, .3]));\n     * const table = Table.new(i32s, f32s);\n     * assert(table.schema.fields[0].name === 'i32');\n     * assert(table.schema.fields[1].name === 'f32');\n     * ```\n     *\n     * If the supplied Vector or Column lengths are unequal, `Table.new` will\n     * extend the lengths of the shorter Columns, allocating additional bytes\n     * to represent the additional null slots. The memory required to allocate\n     * these additional bitmaps can be computed as:\n     * ```ts\n     * let additionalBytes = 0;\n     * for (let vec in shorter_vectors) {\n     *     additionalBytes += (((longestLength - vec.length) + 63) & ~63) >> 3;\n     * }\n     * ```\n     *\n     * For example, an additional null bitmap for one million null values would require\n     * 125,000 bytes (`((1e6 + 63) & ~63) >> 3`), or approx. `0.11MiB`\n     */\n    public static new<T extends { [key: string]: DataType } = any>(...columns: Columns<T>): Table<T>;\n    public static new<T extends VectorMap = any>(children: T): Table<{ [P in keyof T]: T[P]['type'] }>;\n    public static new<T extends { [key: string]: DataType } = any>(children: ChildData<T>, fields?: Fields<T>): Table<T>;\n    /** @nocollapse */\n    public static new(...cols: any[]) {\n        return new Table(...distributeColumnsIntoRecordBatches(selectColumnArgs(cols)));\n    }\n\n    constructor(batches: RecordBatch<T>[]);\n    constructor(...batches: RecordBatch<T>[]);\n    constructor(schema: Schema<T>, batches: RecordBatch<T>[]);\n    constructor(schema: Schema<T>, ...batches: RecordBatch<T>[]);\n    constructor(...args: any[]) {\n\n        let schema: Schema<T> = null!;\n\n        if (args[0] instanceof Schema) { schema = args.shift(); }\n\n        let chunks = selectArgs<RecordBatch<T>>(RecordBatch, args);\n\n        if (!schema && !(schema = chunks[0] && chunks[0].schema)) {\n            throw new TypeError('Table must be initialized with a Schema or at least one RecordBatch');\n        }\n\n        chunks[0] || (chunks[0] = new _InternalEmptyPlaceholderRecordBatch(schema));\n\n        super(new Struct(schema.fields), chunks);\n\n        this._schema = schema;\n        this._chunks = chunks;\n    }\n\n    protected _schema: Schema<T>;\n    // List of inner RecordBatches\n    protected _chunks: RecordBatch<T>[];\n    protected _children?: Column<T[keyof T]>[];\n\n    public get schema() { return this._schema; }\n    public get length() { return this._length; }\n    public get chunks() { return this._chunks; }\n    public get numCols() { return this._numChildren; }\n\n    public clone(chunks = this._chunks) {\n        return new Table<T>(this._schema, chunks);\n    }\n\n    public getColumn<R extends keyof T>(name: R): Column<T[R]> {\n        return this.getColumnAt(this.getColumnIndex(name)) as Column<T[R]>;\n    }\n    public getColumnAt<R extends DataType = any>(index: number): Column<R> | null {\n        return this.getChildAt(index);\n    }\n    public getColumnIndex<R extends keyof T>(name: R) {\n        return this._schema.fields.findIndex((f) => f.name === name);\n    }\n    public getChildAt<R extends DataType = any>(index: number): Column<R> | null {\n        if (index < 0 || index >= this.numChildren) { return null; }\n        let field: Field<R>, child: Column<R>;\n        const fields = (this._schema as Schema<any>).fields;\n        const columns = this._children || (this._children = []) as Column[];\n        if (child = columns[index]) { return child as Column<R>; }\n        if (field = fields[index]) {\n            const chunks = this._chunks\n                .map((chunk) => chunk.getChildAt<R>(index))\n                .filter((vec): vec is Vector<R> => vec != null);\n            if (chunks.length > 0) {\n                return (columns[index] = new Column<R>(field, chunks));\n            }\n        }\n        return null;\n    }\n\n    // @ts-ignore\n    public serialize(encoding = 'binary', stream = true) {\n        const Writer = !stream\n            ? RecordBatchFileWriter\n            : RecordBatchStreamWriter;\n        return Writer.writeAll(this).toUint8Array(true);\n    }\n    public count(): number {\n        return this._length;\n    }\n    public select<K extends keyof T = any>(...columnNames: K[]) {\n        const nameToIndex = this._schema.fields.reduce((m, f, i) => m.set(f.name as K, i), new Map<K, number>());\n        return this.selectAt(...columnNames.map((columnName) => nameToIndex.get(columnName)!).filter((x) => x > -1));\n    }\n    public selectAt<K extends T[keyof T] = any>(...columnIndices: number[]) {\n        const schema = this._schema.selectAt<K>(...columnIndices);\n        return new Table(schema, this._chunks.map(({ length, data: { childData } }) => {\n            return new RecordBatch(schema, length, columnIndices.map((i) => childData[i]).filter(Boolean));\n        }));\n    }\n    public assign<R extends { [key: string]: DataType } = any>(other: Table<R>) {\n\n        const fields = this._schema.fields;\n        const [indices, oldToNew] = other.schema.fields.reduce((memo, f2, newIdx) => {\n            const [indices, oldToNew] = memo;\n            const i = fields.findIndex((f) => f.name === f2.name);\n            ~i ? (oldToNew[i] = newIdx) : indices.push(newIdx);\n            return memo;\n        }, [[], []] as number[][]);\n\n        const schema = this._schema.assign(other.schema);\n        const columns = [\n            ...fields.map((_f, i, _fs, j = oldToNew[i]) =>\n                (j === undefined ? this.getColumnAt(i) : other.getColumnAt(j))!),\n            ...indices.map((i) => other.getColumnAt(i)!)\n        ].filter(Boolean) as Column<(T & R)[keyof T | keyof R]>[];\n\n        return new Table<T & R>(...distributeVectorsIntoRecordBatches<any>(schema, columns));\n    }\n}\n\nfunction tableFromIterable<T extends { [key: string]: DataType } = any, TNull = any>(input: VectorBuilderOptions<Struct<T>, TNull>) {\n    const { type } = input;\n    if (type instanceof Struct) {\n        return Table.fromStruct(StructVector.from(input as VectorBuilderOptions<Struct<T>, TNull>));\n    }\n    return null;\n}\n\nfunction tableFromAsyncIterable<T extends { [key: string]: DataType } = any, TNull = any>(input: VectorBuilderOptionsAsync<Struct<T>, TNull>) {\n    const { type } = input;\n    if (type instanceof Struct) {\n        return StructVector.from(input as VectorBuilderOptionsAsync<Struct<T>, TNull>).then((vector) => Table.fromStruct(vector));\n    }\n    return null;\n}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { Data } from './data';\nimport { Table } from './table';\nimport { Vector } from './vector';\nimport { Visitor } from './visitor';\nimport { Schema, Field } from './schema';\nimport { isIterable } from './util/compat';\nimport { Chunked } from './vector/chunked';\nimport { selectFieldArgs } from './util/args';\nimport { DataType, Struct, Dictionary } from './type';\nimport { ensureSameLengthData } from './util/recordbatch';\nimport { Clonable, Sliceable, Applicative } from './vector';\nimport { StructVector, VectorBuilderOptions, VectorBuilderOptionsAsync } from './vector/index';\n\ntype VectorMap = { [key: string]: Vector };\ntype Fields<T extends { [key: string]: DataType }> = (keyof T)[] | Field<T[keyof T]>[];\ntype ChildData<T extends { [key: string]: DataType }> = (Data<T[keyof T]> | Vector<T[keyof T]>)[];\n\nexport interface RecordBatch<T extends { [key: string]: DataType } = any> {\n    concat(...others: Vector<Struct<T>>[]): Table<T>;\n    slice(begin?: number, end?: number): RecordBatch<T>;\n    clone(data: Data<Struct<T>>, children?: Vector[]): RecordBatch<T>;\n}\n\nexport class RecordBatch<T extends { [key: string]: DataType } = any>\n    extends StructVector<T>\n    implements Clonable<RecordBatch<T>>,\n               Sliceable<RecordBatch<T>>,\n               Applicative<Struct<T>, Table<T>> {\n\n    public static from<T extends { [key: string]: DataType } = any, TNull = any>(options: VectorBuilderOptions<Struct<T>, TNull>): Table<T>;\n    public static from<T extends { [key: string]: DataType } = any, TNull = any>(options: VectorBuilderOptionsAsync<Struct<T>, TNull>): Promise<Table<T>>;\n    /** @nocollapse */\n    public static from<T extends { [key: string]: DataType } = any, TNull = any>(options: VectorBuilderOptions<Struct<T>, TNull> | VectorBuilderOptionsAsync<Struct<T>, TNull>) {\n        if (isIterable<(Struct<T>)['TValue'] | TNull>(options['values'])) {\n            return Table.from(options as VectorBuilderOptions<Struct<T>, TNull>);\n        }\n        return Table.from(options as VectorBuilderOptionsAsync<Struct<T>, TNull>);\n    }\n\n    public static new<T extends VectorMap = any>(children: T): RecordBatch<{ [P in keyof T]: T[P]['type'] }>;\n    public static new<T extends { [key: string]: DataType } = any>(children: ChildData<T>, fields?: Fields<T>): RecordBatch<T>;\n    /** @nocollapse */\n    public static new<T extends { [key: string]: DataType } = any>(...args: any[]) {\n        const [fs, xs] = selectFieldArgs<T>(args);\n        const vs = xs.filter((x): x is Vector<T[keyof T]> => x instanceof Vector);\n        return new RecordBatch(...ensureSameLengthData(new Schema<T>(fs), vs.map((x) => x.data)));\n    }\n\n    protected _schema: Schema;\n    protected _dictionaries?: Map<number, Vector>;\n\n    constructor(schema: Schema<T>, length: number, children: (Data | Vector)[]);\n    constructor(schema: Schema<T>, data: Data<Struct<T>>, children?: Vector[]);\n    constructor(...args: any[]) {\n        let data: Data<Struct<T>>;\n        let schema = args[0] as Schema<T>;\n        let children: Vector[] | undefined;\n        if (args[1] instanceof Data) {\n            [, data, children] = (args as [any, Data<Struct<T>>, Vector<T[keyof T]>[]?]);\n        } else {\n            const fields = schema.fields as Field<T[keyof T]>[];\n            const [, length, childData] = args as [any, number, Data<T[keyof T]>[]];\n            data = Data.Struct(new Struct<T>(fields), 0, length, 0, null, childData);\n        }\n        super(data, children);\n        this._schema = schema;\n    }\n\n    public clone(data: Data<Struct<T>>, children = this._children) {\n        return new RecordBatch<T>(this._schema, data, children);\n    }\n\n    public concat(...others: Vector<Struct<T>>[]): Table<T> {\n        const schema = this._schema, chunks = Chunked.flatten(this, ...others);\n        return new Table(schema, chunks.map(({ data }) => new RecordBatch(schema, data)));\n    }\n\n    public get schema() { return this._schema; }\n    public get numCols() { return this._schema.fields.length; }\n    public get dictionaries() {\n        return this._dictionaries || (this._dictionaries = DictionaryCollector.collect(this));\n    }\n\n    public select<K extends keyof T = any>(...columnNames: K[]) {\n        const nameToIndex = this._schema.fields.reduce((m, f, i) => m.set(f.name as K, i), new Map<K, number>());\n        return this.selectAt(...columnNames.map((columnName) => nameToIndex.get(columnName)!).filter((x) => x > -1));\n    }\n    public selectAt<K extends T[keyof T] = any>(...columnIndices: number[]) {\n        const schema = this._schema.selectAt(...columnIndices);\n        const childData = columnIndices.map((i) => this.data.childData[i]).filter(Boolean);\n        return new RecordBatch<{ [key: string]: K }>(schema, this.length, childData);\n    }\n}\n\n/**\n * An internal class used by the `RecordBatchReader` and `RecordBatchWriter`\n * implementations to differentiate between a stream with valid zero-length\n * RecordBatches, and a stream with a Schema message, but no RecordBatches.\n * @see https://github.com/apache/arrow/pull/4373\n * @ignore\n * @private\n */\n/* tslint:disable:class-name */\nexport class _InternalEmptyPlaceholderRecordBatch<T extends { [key: string]: DataType } = any> extends RecordBatch<T> {\n    constructor(schema: Schema<T>) {\n        super(schema, 0, schema.fields.map((f) => Data.new(f.type, 0, 0, 0)));\n    }\n}\n\n/** @ignore */\nclass DictionaryCollector extends Visitor {\n    public dictionaries = new Map<number, Vector>();\n    public static collect<T extends RecordBatch>(batch: T) {\n        return new DictionaryCollector().visit(\n            batch.data, new Struct(batch.schema.fields)\n        ).dictionaries;\n    }\n    public visit(data: Data, type: DataType) {\n        if (DataType.isDictionary(type)) {\n            return this.visitDictionary(data, type);\n        } else {\n            data.childData.forEach((child, i) =>\n                this.visit(child, type.children[i].type));\n        }\n        return this;\n    }\n    public visitDictionary(data: Data, type: Dictionary) {\n        const dictionary = data.dictionary;\n        if (dictionary && dictionary.length > 0) {\n            this.dictionaries.set(type.id, dictionary);\n        }\n        return this;\n    }\n}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { Vector } from '../vector';\nimport { DataType } from '../type';\nimport { MessageHeader } from '../enum';\nimport { Footer } from './metadata/file';\nimport { Schema, Field } from '../schema';\nimport streamAdapters from '../io/adapters';\nimport { Message } from './metadata/message';\nimport * as metadata from './metadata/message';\nimport { ArrayBufferViewInput } from '../util/buffer';\nimport { ByteStream, AsyncByteStream } from '../io/stream';\nimport { RandomAccessFile, AsyncRandomAccessFile } from '../io/file';\nimport { VectorLoader, JSONVectorLoader } from '../visitor/vectorloader';\nimport { RecordBatch, _InternalEmptyPlaceholderRecordBatch } from '../recordbatch';\nimport {\n    FileHandle,\n    ArrowJSONLike,\n    ITERATOR_DONE,\n    ReadableInterop,\n} from '../io/interfaces';\nimport {\n    MessageReader, AsyncMessageReader, JSONMessageReader,\n    checkForMagicArrowString, magicLength, magicAndPadding, magicX2AndPadding\n} from './message';\nimport {\n    isPromise,\n    isIterable, isAsyncIterable,\n    isIteratorResult, isArrowJSON,\n    isFileHandle, isFetchResponse,\n    isReadableDOMStream, isReadableNodeStream\n} from '../util/compat';\n\n/** @ignore */ export type FromArg0 = ArrowJSONLike;\n/** @ignore */ export type FromArg1 = PromiseLike<ArrowJSONLike>;\n/** @ignore */ export type FromArg2 = Iterable<ArrayBufferViewInput> | ArrayBufferViewInput;\n/** @ignore */ export type FromArg3 = PromiseLike<Iterable<ArrayBufferViewInput> | ArrayBufferViewInput>;\n/** @ignore */ export type FromArg4 = Response | NodeJS.ReadableStream | ReadableStream<ArrayBufferViewInput> | AsyncIterable<ArrayBufferViewInput>;\n/** @ignore */ export type FromArg5 = FileHandle | PromiseLike<FileHandle> | PromiseLike<FromArg4>;\n/** @ignore */ export type FromArgs = FromArg0 | FromArg1 | FromArg2 | FromArg3 | FromArg4 | FromArg5;\n\n/** @ignore */ type OpenOptions = { autoDestroy?: boolean; };\n/** @ignore */ type RecordBatchReaders<T extends { [key: string]: DataType } = any> = RecordBatchFileReader<T> | RecordBatchStreamReader<T>;\n/** @ignore */ type AsyncRecordBatchReaders<T extends { [key: string]: DataType } = any> = AsyncRecordBatchFileReader<T> | AsyncRecordBatchStreamReader<T>;\n/** @ignore */ type RecordBatchFileReaders<T extends { [key: string]: DataType } = any> = RecordBatchFileReader<T> | AsyncRecordBatchFileReader<T>;\n/** @ignore */ type RecordBatchStreamReaders<T extends { [key: string]: DataType } = any> = RecordBatchStreamReader<T> | AsyncRecordBatchStreamReader<T>;\n\nexport class RecordBatchReader<T extends { [key: string]: DataType } = any> extends ReadableInterop<RecordBatch<T>> {\n\n    protected _impl: RecordBatchReaderImpls<T>;\n    protected constructor(impl: RecordBatchReaderImpls<T>) {\n        super();\n        this._impl = impl;\n    }\n\n    public get closed() { return this._impl.closed; }\n    public get schema() { return this._impl.schema; }\n    public get autoDestroy() { return this._impl.autoDestroy; }\n    public get dictionaries() { return this._impl.dictionaries; }\n    public get numDictionaries() { return this._impl.numDictionaries; }\n    public get numRecordBatches() { return this._impl.numRecordBatches; }\n    public get footer() { return this._impl.isFile() ? this._impl.footer : null; }\n\n    public isSync(): this is RecordBatchReaders<T> { return this._impl.isSync(); }\n    public isAsync(): this is AsyncRecordBatchReaders<T> { return this._impl.isAsync(); }\n    public isFile(): this is RecordBatchFileReaders<T> { return this._impl.isFile(); }\n    public isStream(): this is RecordBatchStreamReaders<T> { return this._impl.isStream(); }\n\n    public next() {\n        return this._impl.next();\n    }\n    public throw(value?: any) {\n        return this._impl.throw(value);\n    }\n    public return(value?: any) {\n        return this._impl.return(value);\n    }\n    public cancel() {\n        return this._impl.cancel();\n    }\n    public reset(schema?: Schema<T> | null): this {\n        this._impl.reset(schema);\n        this._DOMStream = undefined;\n        this._nodeStream = undefined;\n        return this;\n    }\n    public open(options?: OpenOptions) {\n        const opening = this._impl.open(options);\n        return isPromise(opening) ? opening.then(() => this) : this;\n    }\n    public readRecordBatch(index: number): RecordBatch<T> | null | Promise<RecordBatch<T> | null> {\n        return this._impl.isFile() ? this._impl.readRecordBatch(index) : null;\n    }\n    public [Symbol.iterator](): IterableIterator<RecordBatch<T>> {\n        return (<IterableIterator<RecordBatch<T>>> this._impl)[Symbol.iterator]();\n    }\n    public [Symbol.asyncIterator](): AsyncIterableIterator<RecordBatch<T>> {\n        return (<AsyncIterableIterator<RecordBatch<T>>> this._impl)[Symbol.asyncIterator]();\n    }\n    public toDOMStream() {\n        return streamAdapters.toDOMStream<RecordBatch<T>>(\n            (this.isSync()\n                ? { [Symbol.iterator]: () => this } as Iterable<RecordBatch<T>>\n                : { [Symbol.asyncIterator]: () => this } as AsyncIterable<RecordBatch<T>>));\n    }\n    public toNodeStream() {\n        return streamAdapters.toNodeStream<RecordBatch<T>>(\n            (this.isSync()\n                ? { [Symbol.iterator]: () => this } as Iterable<RecordBatch<T>>\n                : { [Symbol.asyncIterator]: () => this } as AsyncIterable<RecordBatch<T>>),\n            { objectMode: true });\n    }\n\n    /** @nocollapse */\n    // @ts-ignore\n    public static throughNode(options?: import('stream').DuplexOptions & { autoDestroy: boolean }): import('stream').Duplex {\n        throw new Error(`\"throughNode\" not available in this environment`);\n    }\n    /** @nocollapse */\n    public static throughDOM<T extends { [key: string]: DataType }>(\n        // @ts-ignore\n        writableStrategy?: ByteLengthQueuingStrategy,\n        // @ts-ignore\n        readableStrategy?: { autoDestroy: boolean }\n    ): { writable: WritableStream<Uint8Array>, readable: ReadableStream<RecordBatch<T>> } {\n        throw new Error(`\"throughDOM\" not available in this environment`);\n    }\n\n    public static from<T extends RecordBatchReader>(source: T): T;\n    public static from<T extends { [key: string]: DataType } = any>(source: FromArg0): RecordBatchStreamReader<T>;\n    public static from<T extends { [key: string]: DataType } = any>(source: FromArg1): Promise<RecordBatchStreamReader<T>>;\n    public static from<T extends { [key: string]: DataType } = any>(source: FromArg2): RecordBatchFileReader<T> | RecordBatchStreamReader<T>;\n    public static from<T extends { [key: string]: DataType } = any>(source: FromArg3): Promise<RecordBatchFileReader<T> | RecordBatchStreamReader<T>>;\n    public static from<T extends { [key: string]: DataType } = any>(source: FromArg4): Promise<RecordBatchFileReader<T> | AsyncRecordBatchReaders<T>>;\n    public static from<T extends { [key: string]: DataType } = any>(source: FromArg5): Promise<AsyncRecordBatchFileReader<T> | AsyncRecordBatchStreamReader<T>>;\n    /** @nocollapse */\n    public static from<T extends { [key: string]: DataType } = any>(source: any) {\n        if (source instanceof RecordBatchReader) {\n            return source;\n        } else if (isArrowJSON(source)) {\n            return fromArrowJSON<T>(source);\n        } else if (isFileHandle(source)) {\n            return fromFileHandle<T>(source);\n        } else if (isPromise<any>(source)) {\n            return (async () => await RecordBatchReader.from<any>(await source))();\n        } else if (isFetchResponse(source) || isReadableDOMStream(source) || isReadableNodeStream(source) || isAsyncIterable(source)) {\n            return fromAsyncByteStream<T>(new AsyncByteStream(source));\n        }\n        return fromByteStream<T>(new ByteStream(source));\n    }\n\n    public static readAll<T extends RecordBatchReader>(source: T): T extends RecordBatchReaders ? IterableIterator<T> : AsyncIterableIterator<T>;\n    public static readAll<T extends { [key: string]: DataType } = any>(source: FromArg0): IterableIterator<RecordBatchStreamReader<T>>;\n    public static readAll<T extends { [key: string]: DataType } = any>(source: FromArg1): AsyncIterableIterator<RecordBatchStreamReader<T>>;\n    public static readAll<T extends { [key: string]: DataType } = any>(source: FromArg2): IterableIterator<RecordBatchFileReader<T> | RecordBatchStreamReader<T>>;\n    public static readAll<T extends { [key: string]: DataType } = any>(source: FromArg3): AsyncIterableIterator<RecordBatchFileReader<T> | RecordBatchStreamReader<T>>;\n    public static readAll<T extends { [key: string]: DataType } = any>(source: FromArg4): AsyncIterableIterator<RecordBatchFileReader<T> | AsyncRecordBatchReaders<T>>;\n    public static readAll<T extends { [key: string]: DataType } = any>(source: FromArg5): AsyncIterableIterator<AsyncRecordBatchFileReader<T> | AsyncRecordBatchStreamReader<T>>;\n    /** @nocollapse */\n    public static readAll<T extends { [key: string]: DataType } = any>(source: any) {\n        if (source instanceof RecordBatchReader) {\n            return source.isSync() ? readAllSync(source) : readAllAsync(source as AsyncRecordBatchReaders<T>);\n        } else if (isArrowJSON(source) || ArrayBuffer.isView(source) || isIterable<ArrayBufferViewInput>(source) || isIteratorResult(source)) {\n            return readAllSync<T>(source) as IterableIterator<RecordBatchReaders<T>>;\n        }\n        return readAllAsync<T>(source) as AsyncIterableIterator<RecordBatchReaders<T> | AsyncRecordBatchReaders<T>>;\n    }\n}\n\n//\n// Since TS is a structural type system, we define the following subclass stubs\n// so that concrete types exist to associate with with the interfaces below.\n//\n// The implementation for each RecordBatchReader is hidden away in the set of\n// `RecordBatchReaderImpl` classes in the second half of this file. This allows\n// us to export a single RecordBatchReader class, and swap out the impl based\n// on the io primitives or underlying arrow (JSON, file, or stream) at runtime.\n//\n// Async/await makes our job a bit harder, since it forces everything to be\n// either fully sync or fully async. This is why the logic for the reader impls\n// has been duplicated into both sync and async variants. Since the RBR\n// delegates to its impl, an RBR with an AsyncRecordBatchFileReaderImpl for\n// example will return async/await-friendly Promises, but one with a (sync)\n// RecordBatchStreamReaderImpl will always return values. Nothing should be\n// different about their logic, aside from the async handling. This is also why\n// this code looks highly structured, as it should be nearly identical and easy\n// to follow.\n//\n\n/** @ignore */\nexport class RecordBatchStreamReader<T extends { [key: string]: DataType } = any> extends RecordBatchReader<T> {\n    constructor(protected _impl: RecordBatchStreamReaderImpl<T>) { super (_impl); }\n    public [Symbol.iterator]() { return (this._impl as IterableIterator<RecordBatch<T>>)[Symbol.iterator](); }\n    public async *[Symbol.asyncIterator](): AsyncIterableIterator<RecordBatch<T>> { yield* this[Symbol.iterator](); }\n}\n/** @ignore */\nexport class AsyncRecordBatchStreamReader<T extends { [key: string]: DataType } = any> extends RecordBatchReader<T> {\n    constructor(protected _impl: AsyncRecordBatchStreamReaderImpl<T>) { super (_impl); }\n    public [Symbol.iterator](): IterableIterator<RecordBatch<T>> { throw new Error(`AsyncRecordBatchStreamReader is not Iterable`); }\n    public [Symbol.asyncIterator]() { return (this._impl as AsyncIterableIterator<RecordBatch<T>>)[Symbol.asyncIterator](); }\n}\n/** @ignore */\nexport class RecordBatchFileReader<T extends { [key: string]: DataType } = any> extends RecordBatchStreamReader<T> {\n    constructor(protected _impl: RecordBatchFileReaderImpl<T>) { super (_impl); }\n}\n/** @ignore */\nexport class AsyncRecordBatchFileReader<T extends { [key: string]: DataType } = any> extends AsyncRecordBatchStreamReader<T> {\n    constructor(protected _impl: AsyncRecordBatchFileReaderImpl<T>) { super (_impl); }\n}\n\n//\n// Now override the return types for each sync/async RecordBatchReader variant\n//\n\n/** @ignore */\nexport interface RecordBatchStreamReader<T extends { [key: string]: DataType } = any> extends RecordBatchReader<T> {\n    open(options?: OpenOptions | undefined): this;\n    cancel(): void;\n    throw(value?: any): IteratorResult<any>;\n    return(value?: any): IteratorResult<any>;\n    next(value?: any): IteratorResult<RecordBatch<T>>;\n}\n\n/** @ignore */\nexport interface AsyncRecordBatchStreamReader<T extends { [key: string]: DataType } = any> extends RecordBatchReader<T> {\n    open(options?: OpenOptions | undefined): Promise<this>;\n    cancel(): Promise<void>;\n    throw(value?: any): Promise<IteratorResult<any>>;\n    return(value?: any): Promise<IteratorResult<any>>;\n    next(value?: any): Promise<IteratorResult<RecordBatch<T>>>;\n}\n\n/** @ignore */\nexport interface RecordBatchFileReader<T extends { [key: string]: DataType } = any> extends RecordBatchStreamReader<T> {\n    footer: Footer;\n    readRecordBatch(index: number): RecordBatch<T> | null;\n}\n\n/** @ignore */\nexport interface AsyncRecordBatchFileReader<T extends { [key: string]: DataType } = any> extends AsyncRecordBatchStreamReader<T> {\n    footer: Footer;\n    readRecordBatch(index: number): Promise<RecordBatch<T> | null>;\n}\n\n/** @ignore */\ntype RecordBatchReaderImpls<T extends { [key: string]: DataType } = any> =\n     RecordBatchJSONReaderImpl<T> |\n     RecordBatchFileReaderImpl<T> |\n     RecordBatchStreamReaderImpl<T> |\n     AsyncRecordBatchFileReaderImpl<T> |\n     AsyncRecordBatchStreamReaderImpl<T>;\n\n/** @ignore */\ninterface RecordBatchReaderImpl<T extends { [key: string]: DataType } = any> {\n\n    closed: boolean;\n    schema: Schema<T>;\n    autoDestroy: boolean;\n    dictionaries: Map<number, Vector>;\n\n    isFile(): this is RecordBatchFileReaders<T>;\n    isStream(): this is RecordBatchStreamReaders<T>;\n    isSync(): this is RecordBatchReaders<T>;\n    isAsync(): this is AsyncRecordBatchReaders<T>;\n\n    reset(schema?: Schema<T> | null): this;\n}\n\n/** @ignore */\ninterface RecordBatchStreamReaderImpl<T extends { [key: string]: DataType } = any> extends RecordBatchReaderImpl<T> {\n\n    open(options?: OpenOptions): this;\n    cancel(): void;\n\n    throw(value?: any): IteratorResult<any>;\n    return(value?: any): IteratorResult<any>;\n    next(value?: any): IteratorResult<RecordBatch<T>>;\n\n    [Symbol.iterator](): IterableIterator<RecordBatch<T>>;\n}\n\n/** @ignore */\ninterface AsyncRecordBatchStreamReaderImpl<T extends { [key: string]: DataType } = any> extends RecordBatchReaderImpl<T> {\n\n    open(options?: OpenOptions): Promise<this>;\n    cancel(): Promise<void>;\n\n    throw(value?: any): Promise<IteratorResult<any>>;\n    return(value?: any): Promise<IteratorResult<any>>;\n    next(value?: any): Promise<IteratorResult<RecordBatch<T>>>;\n\n    [Symbol.asyncIterator](): AsyncIterableIterator<RecordBatch<T>>;\n}\n\n/** @ignore */\ninterface RecordBatchFileReaderImpl<T extends { [key: string]: DataType } = any> extends RecordBatchStreamReaderImpl<T> {\n    readRecordBatch(index: number): RecordBatch<T> | null;\n}\n\n/** @ignore */\ninterface AsyncRecordBatchFileReaderImpl<T extends { [key: string]: DataType } = any> extends AsyncRecordBatchStreamReaderImpl<T> {\n    readRecordBatch(index: number): Promise<RecordBatch<T> | null>;\n}\n\n/** @ignore */\nabstract class RecordBatchReaderImpl<T extends { [key: string]: DataType } = any> implements RecordBatchReaderImpl<T> {\n\n    // @ts-ignore\n    public schema: Schema;\n    public closed = false;\n    public autoDestroy = true;\n    public dictionaries: Map<number, Vector>;\n\n    protected _dictionaryIndex = 0;\n    protected _recordBatchIndex = 0;\n    public get numDictionaries() { return this._dictionaryIndex; }\n    public get numRecordBatches() { return this._recordBatchIndex; }\n\n    constructor(dictionaries = new Map<number, Vector>()) {\n        this.dictionaries = dictionaries;\n    }\n\n    public isSync(): this is RecordBatchReaders<T> { return false; }\n    public isAsync(): this is AsyncRecordBatchReaders<T> { return false; }\n    public isFile(): this is RecordBatchFileReaders<T> { return false; }\n    public isStream(): this is RecordBatchStreamReaders<T> { return false; }\n\n    public reset(schema?: Schema<T> | null) {\n        this._dictionaryIndex = 0;\n        this._recordBatchIndex = 0;\n        this.schema = <any> schema;\n        this.dictionaries = new Map();\n        return this;\n    }\n\n    protected _loadRecordBatch(header: metadata.RecordBatch, body: any) {\n        return new RecordBatch<T>(this.schema, header.length, this._loadVectors(header, body, this.schema.fields));\n    }\n    protected _loadDictionaryBatch(header: metadata.DictionaryBatch, body: any) {\n        const { id, isDelta, data } = header;\n        const { dictionaries, schema } = this;\n        const dictionary = dictionaries.get(id);\n        if (isDelta || !dictionary) {\n            const type = schema.dictionaries.get(id)!;\n            return (dictionary && isDelta ? dictionary.concat(\n                Vector.new(this._loadVectors(data, body, [type])[0])) :\n                Vector.new(this._loadVectors(data, body, [type])[0])) as Vector;\n        }\n        return dictionary;\n    }\n    protected _loadVectors(header: metadata.RecordBatch, body: any, types: (Field | DataType)[]) {\n        return new VectorLoader(body, header.nodes, header.buffers, this.dictionaries).visitMany(types);\n    }\n}\n\n/** @ignore */\nclass RecordBatchStreamReaderImpl<T extends { [key: string]: DataType } = any> extends RecordBatchReaderImpl<T> implements IterableIterator<RecordBatch<T>> {\n\n    protected _reader: MessageReader;\n    protected _handle: ByteStream | ArrowJSONLike;\n\n    constructor(source: ByteStream | ArrowJSONLike, dictionaries?: Map<number, Vector>) {\n        super(dictionaries);\n        this._reader = !isArrowJSON(source)\n            ? new MessageReader(this._handle = source)\n            : new JSONMessageReader(this._handle = source);\n    }\n\n    public isSync(): this is RecordBatchReaders<T> { return true; }\n    public isStream(): this is RecordBatchStreamReaders<T> { return true; }\n    public [Symbol.iterator](): IterableIterator<RecordBatch<T>> {\n        return this as IterableIterator<RecordBatch<T>>;\n    }\n    public cancel() {\n        if (!this.closed && (this.closed = true)) {\n            this.reset()._reader.return();\n            this._reader = <any> null;\n            this.dictionaries = <any> null;\n        }\n    }\n    public open(options?: OpenOptions) {\n        if (!this.closed) {\n            this.autoDestroy = shouldAutoDestroy(this, options);\n            if (!(this.schema || (this.schema = this._reader.readSchema()!))) {\n                this.cancel();\n            }\n        }\n        return this;\n    }\n    public throw(value?: any): IteratorResult<any> {\n        if (!this.closed && this.autoDestroy && (this.closed = true)) {\n            return this.reset()._reader.throw(value);\n        }\n        return ITERATOR_DONE;\n    }\n    public return(value?: any): IteratorResult<any> {\n        if (!this.closed && this.autoDestroy && (this.closed = true)) {\n            return this.reset()._reader.return(value);\n        }\n        return ITERATOR_DONE;\n    }\n    public next(): IteratorResult<RecordBatch<T>> {\n        if (this.closed) { return ITERATOR_DONE; }\n        let message: Message | null, { _reader: reader } = this;\n        while (message = this._readNextMessageAndValidate()) {\n            if (message.isSchema()) {\n                this.reset(message.header());\n            } else if (message.isRecordBatch()) {\n                this._recordBatchIndex++;\n                const header = message.header();\n                const buffer = reader.readMessageBody(message.bodyLength);\n                const recordBatch = this._loadRecordBatch(header, buffer);\n                return { done: false, value: recordBatch };\n            } else if (message.isDictionaryBatch()) {\n                this._dictionaryIndex++;\n                const header = message.header();\n                const buffer = reader.readMessageBody(message.bodyLength);\n                const vector = this._loadDictionaryBatch(header, buffer);\n                this.dictionaries.set(header.id, vector);\n            }\n        }\n        if (this.schema && this._recordBatchIndex === 0) {\n            this._recordBatchIndex++;\n            return { done: false, value: new _InternalEmptyPlaceholderRecordBatch<T>(this.schema) };\n        }\n        return this.return();\n    }\n    protected _readNextMessageAndValidate<T extends MessageHeader>(type?: T | null) {\n        return this._reader.readMessage<T>(type);\n    }\n}\n\n/** @ignore */\nclass AsyncRecordBatchStreamReaderImpl<T extends { [key: string]: DataType } = any> extends RecordBatchReaderImpl<T> implements AsyncIterableIterator<RecordBatch<T>> {\n\n    protected _handle: AsyncByteStream;\n    protected _reader: AsyncMessageReader;\n\n    constructor(source: AsyncByteStream, dictionaries?: Map<number, Vector>) {\n        super(dictionaries);\n        this._reader = new AsyncMessageReader(this._handle = source);\n    }\n    public isAsync(): this is AsyncRecordBatchReaders<T> { return true; }\n    public isStream(): this is RecordBatchStreamReaders<T> { return true; }\n    public [Symbol.asyncIterator](): AsyncIterableIterator<RecordBatch<T>> {\n        return this as AsyncIterableIterator<RecordBatch<T>>;\n    }\n    public async cancel() {\n        if (!this.closed && (this.closed = true)) {\n            await this.reset()._reader.return();\n            this._reader = <any> null;\n            this.dictionaries = <any> null;\n        }\n    }\n    public async open(options?: OpenOptions) {\n        if (!this.closed) {\n            this.autoDestroy = shouldAutoDestroy(this, options);\n            if (!(this.schema || (this.schema = (await this._reader.readSchema())!))) {\n                await this.cancel();\n            }\n        }\n        return this;\n    }\n    public async throw(value?: any): Promise<IteratorResult<any>> {\n        if (!this.closed && this.autoDestroy && (this.closed = true)) {\n            return await this.reset()._reader.throw(value);\n        }\n        return ITERATOR_DONE;\n    }\n    public async return(value?: any): Promise<IteratorResult<any>> {\n        if (!this.closed && this.autoDestroy && (this.closed = true)) {\n            return await this.reset()._reader.return(value);\n        }\n        return ITERATOR_DONE;\n    }\n    public async next() {\n        if (this.closed) { return ITERATOR_DONE; }\n        let message: Message | null, { _reader: reader } = this;\n        while (message = await this._readNextMessageAndValidate()) {\n            if (message.isSchema()) {\n                await this.reset(message.header());\n            } else if (message.isRecordBatch()) {\n                this._recordBatchIndex++;\n                const header = message.header();\n                const buffer = await reader.readMessageBody(message.bodyLength);\n                const recordBatch = this._loadRecordBatch(header, buffer);\n                return { done: false, value: recordBatch };\n            } else if (message.isDictionaryBatch()) {\n                this._dictionaryIndex++;\n                const header = message.header();\n                const buffer = await reader.readMessageBody(message.bodyLength);\n                const vector = this._loadDictionaryBatch(header, buffer);\n                this.dictionaries.set(header.id, vector);\n            }\n        }\n        if (this.schema && this._recordBatchIndex === 0) {\n            this._recordBatchIndex++;\n            return { done: false, value: new _InternalEmptyPlaceholderRecordBatch<T>(this.schema) };\n        }\n        return await this.return();\n    }\n    protected async _readNextMessageAndValidate<T extends MessageHeader>(type?: T | null) {\n        return await this._reader.readMessage<T>(type);\n    }\n}\n\n/** @ignore */\nclass RecordBatchFileReaderImpl<T extends { [key: string]: DataType } = any> extends RecordBatchStreamReaderImpl<T> {\n\n    // @ts-ignore\n    protected _footer?: Footer;\n    // @ts-ignore\n    protected _handle: RandomAccessFile;\n    public get footer() { return this._footer!; }\n    public get numDictionaries() { return this._footer ? this._footer.numDictionaries : 0; }\n    public get numRecordBatches() { return this._footer ? this._footer.numRecordBatches : 0; }\n\n    constructor(source: RandomAccessFile | ArrayBufferViewInput, dictionaries?: Map<number, Vector>) {\n        super(source instanceof RandomAccessFile ? source : new RandomAccessFile(source), dictionaries);\n    }\n    public isSync(): this is RecordBatchReaders<T> { return true; }\n    public isFile(): this is RecordBatchFileReaders<T> { return true; }\n    public open(options?: OpenOptions) {\n        if (!this.closed && !this._footer) {\n            this.schema = (this._footer = this._readFooter()).schema;\n            for (const block of this._footer.dictionaryBatches()) {\n                block && this._readDictionaryBatch(this._dictionaryIndex++);\n            }\n        }\n        return super.open(options);\n    }\n    public readRecordBatch(index: number) {\n        if (this.closed) { return null; }\n        if (!this._footer) { this.open(); }\n        const block = this._footer && this._footer.getRecordBatch(index);\n        if (block && this._handle.seek(block.offset)) {\n            const message = this._reader.readMessage(MessageHeader.RecordBatch);\n            if (message && message.isRecordBatch()) {\n                const header = message.header();\n                const buffer = this._reader.readMessageBody(message.bodyLength);\n                const recordBatch = this._loadRecordBatch(header, buffer);\n                return recordBatch;\n            }\n        }\n        return null;\n    }\n    protected _readDictionaryBatch(index: number) {\n        const block = this._footer && this._footer.getDictionaryBatch(index);\n        if (block && this._handle.seek(block.offset)) {\n            const message = this._reader.readMessage(MessageHeader.DictionaryBatch);\n            if (message && message.isDictionaryBatch()) {\n                const header = message.header();\n                const buffer = this._reader.readMessageBody(message.bodyLength);\n                const vector = this._loadDictionaryBatch(header, buffer);\n                this.dictionaries.set(header.id, vector);\n            }\n        }\n    }\n    protected _readFooter() {\n        const { _handle } = this;\n        const offset = _handle.size - magicAndPadding;\n        const length = _handle.readInt32(offset);\n        const buffer = _handle.readAt(offset - length, length);\n        return Footer.decode(buffer);\n    }\n    protected _readNextMessageAndValidate<T extends MessageHeader>(type?: T | null): Message<T> | null {\n        if (!this._footer) { this.open(); }\n        if (this._footer && this._recordBatchIndex < this.numRecordBatches) {\n            const block = this._footer && this._footer.getRecordBatch(this._recordBatchIndex);\n            if (block && this._handle.seek(block.offset)) {\n                return this._reader.readMessage(type);\n            }\n        }\n        return null;\n    }\n}\n\n/** @ignore */\nclass AsyncRecordBatchFileReaderImpl<T extends { [key: string]: DataType } = any> extends AsyncRecordBatchStreamReaderImpl<T>\n    implements AsyncRecordBatchFileReaderImpl<T> {\n\n    protected _footer?: Footer;\n    // @ts-ignore\n    protected _handle: AsyncRandomAccessFile;\n    public get footer() { return this._footer!; }\n    public get numDictionaries() { return this._footer ? this._footer.numDictionaries : 0; }\n    public get numRecordBatches() { return this._footer ? this._footer.numRecordBatches : 0; }\n\n    constructor(source: FileHandle, byteLength?: number, dictionaries?: Map<number, Vector>);\n    constructor(source: FileHandle | AsyncRandomAccessFile, dictionaries?: Map<number, Vector>);\n    constructor(source: FileHandle | AsyncRandomAccessFile, ...rest: any[]) {\n        const byteLength = typeof rest[0] !== 'number' ? <number> rest.shift() : undefined;\n        const dictionaries = rest[0] instanceof Map ? <Map<number, Vector>> rest.shift() : undefined;\n        super(source instanceof AsyncRandomAccessFile ? source : new AsyncRandomAccessFile(source, byteLength), dictionaries);\n    }\n    public isFile(): this is RecordBatchFileReaders<T> { return true; }\n    public isAsync(): this is AsyncRecordBatchReaders<T> { return true; }\n    public async open(options?: OpenOptions) {\n        if (!this.closed && !this._footer) {\n            this.schema = (this._footer = await this._readFooter()).schema;\n            for (const block of this._footer.dictionaryBatches()) {\n                block && await this._readDictionaryBatch(this._dictionaryIndex++);\n            }\n        }\n        return await super.open(options);\n    }\n    public async readRecordBatch(index: number) {\n        if (this.closed) { return null; }\n        if (!this._footer) { await this.open(); }\n        const block = this._footer && this._footer.getRecordBatch(index);\n        if (block && (await this._handle.seek(block.offset))) {\n            const message = await this._reader.readMessage(MessageHeader.RecordBatch);\n            if (message && message.isRecordBatch()) {\n                const header = message.header();\n                const buffer = await this._reader.readMessageBody(message.bodyLength);\n                const recordBatch = this._loadRecordBatch(header, buffer);\n                return recordBatch;\n            }\n        }\n        return null;\n    }\n    protected async _readDictionaryBatch(index: number) {\n        const block = this._footer && this._footer.getDictionaryBatch(index);\n        if (block && (await this._handle.seek(block.offset))) {\n            const message = await this._reader.readMessage(MessageHeader.DictionaryBatch);\n            if (message && message.isDictionaryBatch()) {\n                const header = message.header();\n                const buffer = await this._reader.readMessageBody(message.bodyLength);\n                const vector = this._loadDictionaryBatch(header, buffer);\n                this.dictionaries.set(header.id, vector);\n            }\n        }\n    }\n    protected async _readFooter() {\n        const { _handle } = this;\n        _handle._pending && await _handle._pending;\n        const offset = _handle.size - magicAndPadding;\n        const length = await _handle.readInt32(offset);\n        const buffer = await _handle.readAt(offset - length, length);\n        return Footer.decode(buffer);\n    }\n    protected async _readNextMessageAndValidate<T extends MessageHeader>(type?: T | null): Promise<Message<T> | null> {\n        if (!this._footer) { await this.open(); }\n        if (this._footer && this._recordBatchIndex < this.numRecordBatches) {\n            const block = this._footer.getRecordBatch(this._recordBatchIndex);\n            if (block && await this._handle.seek(block.offset)) {\n                return await this._reader.readMessage(type);\n            }\n        }\n        return null;\n    }\n}\n\n/** @ignore */\nclass RecordBatchJSONReaderImpl<T extends { [key: string]: DataType } = any> extends RecordBatchStreamReaderImpl<T> {\n    constructor(source: ArrowJSONLike, dictionaries?: Map<number, Vector>) {\n        super(source, dictionaries);\n    }\n    protected _loadVectors(header: metadata.RecordBatch, body: any, types: (Field | DataType)[]) {\n        return new JSONVectorLoader(body, header.nodes, header.buffers, this.dictionaries).visitMany(types);\n    }\n}\n\n//\n// Define some helper functions and static implementations down here. There's\n// a bit of branching in the static methods that can lead to the same routines\n// being executed, so we've broken those out here for readability.\n//\n\n/** @ignore */\nfunction shouldAutoDestroy(self: { autoDestroy: boolean }, options?: OpenOptions) {\n    return options && (typeof options['autoDestroy'] === 'boolean') ? options['autoDestroy'] : self['autoDestroy'];\n}\n\n/** @ignore */\nfunction* readAllSync<T extends { [key: string]: DataType } = any>(source: RecordBatchReaders<T> | FromArg0 | FromArg2) {\n    const reader = RecordBatchReader.from<T>(<any> source) as RecordBatchReaders<T>;\n    try {\n        if (!reader.open({ autoDestroy: false }).closed) {\n            do { yield reader; } while (!(reader.reset().open()).closed);\n        }\n    } finally { reader.cancel(); }\n}\n\n/** @ignore */\nasync function* readAllAsync<T extends { [key: string]: DataType } = any>(source: AsyncRecordBatchReaders<T> | FromArg1 | FromArg3 | FromArg4 | FromArg5) {\n    const reader = await RecordBatchReader.from<T>(<any> source) as RecordBatchReader<T>;\n    try {\n        if (!(await reader.open({ autoDestroy: false })).closed) {\n            do { yield reader; } while (!(await reader.reset().open()).closed);\n        }\n    } finally { await reader.cancel(); }\n}\n\n/** @ignore */\nfunction fromArrowJSON<T extends { [key: string]: DataType }>(source: ArrowJSONLike) {\n    return new RecordBatchStreamReader(new RecordBatchJSONReaderImpl<T>(source));\n}\n\n/** @ignore */\nfunction fromByteStream<T extends { [key: string]: DataType }>(source: ByteStream) {\n    const bytes = source.peek((magicLength + 7) & ~7);\n    return bytes && bytes.byteLength >= 4 ? !checkForMagicArrowString(bytes)\n        ? new RecordBatchStreamReader(new RecordBatchStreamReaderImpl<T>(source))\n        : new RecordBatchFileReader(new RecordBatchFileReaderImpl<T>(source.read()))\n        : new RecordBatchStreamReader(new RecordBatchStreamReaderImpl<T>(function*(): any {}()));\n}\n\n/** @ignore */\nasync function fromAsyncByteStream<T extends { [key: string]: DataType }>(source: AsyncByteStream) {\n    const bytes = await source.peek((magicLength + 7) & ~7);\n    return bytes && bytes.byteLength >= 4 ? !checkForMagicArrowString(bytes)\n        ? new AsyncRecordBatchStreamReader(new AsyncRecordBatchStreamReaderImpl<T>(source))\n        : new RecordBatchFileReader(new RecordBatchFileReaderImpl<T>(await source.read()))\n        : new AsyncRecordBatchStreamReader(new AsyncRecordBatchStreamReaderImpl<T>(async function*(): any {}()));\n}\n\n/** @ignore */\nasync function fromFileHandle<T extends { [key: string]: DataType }>(source: FileHandle) {\n    const { size } = await source.stat();\n    const file = new AsyncRandomAccessFile(source, size);\n    if (size >= magicX2AndPadding) {\n        if (checkForMagicArrowString(await file.readAt(0, (magicLength + 7) & ~7))) {\n            return new AsyncRecordBatchFileReader(new AsyncRecordBatchFileReaderImpl<T>(file));\n        }\n    }\n    return new AsyncRecordBatchStreamReader(new AsyncRecordBatchStreamReaderImpl<T>(file));\n}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { DataType } from '../../type';\nimport { Vector } from '../../vector';\nimport { VectorType as V } from '../../interfaces';\nimport { Builder, BuilderOptions } from '../../builder/index';\n\n/** @ignore */\nexport interface BuilderTransformOptions<T extends DataType = any, TNull = any> extends BuilderOptions<T, TNull> {\n    queueingStrategy?: 'bytes' | 'count';\n    dictionaryHashFunction?: (value: any) => string | number;\n    readableStrategy?: { highWaterMark?: number, size?: any, type?: 'bytes'; };\n    writableStrategy?: { highWaterMark?: number, size?: any, type?: 'bytes'; };\n    valueToChildTypeId?: (builder: Builder<T, TNull>, value: any, offset: number) => number;\n}\n\n/** @ignore */\nexport function builderThroughDOMStream<T extends DataType = any, TNull = any>(options: BuilderTransformOptions<T, TNull>) {\n    return new BuilderTransform(options);\n}\n\n/** @ignore */\nexport class BuilderTransform<T extends DataType = any, TNull = any> {\n\n    public readable: ReadableStream<V<T>>;\n    public writable: WritableStream<T['TValue'] | TNull>;\n    public _controller: ReadableStreamDefaultController<V<T>> | null;\n\n    private _numChunks = 0;\n    private _finished = false;\n    private _bufferedSize = 0;\n    private _builder: Builder<T, TNull>;\n    private _getSize: (builder: Builder<T, TNull>) => number;\n\n    constructor(options: BuilderTransformOptions<T, TNull>) {\n\n        // Access properties by string indexers to defeat closure compiler\n\n        const {\n            ['readableStrategy']: readableStrategy,\n            ['writableStrategy']: writableStrategy,\n            ['queueingStrategy']: queueingStrategy = 'count',\n            ...builderOptions\n        } = options;\n\n        this._controller = null;\n        this._builder = Builder.new<T, TNull>(builderOptions);\n        this._getSize = queueingStrategy !== 'bytes' ? chunkLength : chunkByteLength;\n\n        const { ['highWaterMark']: readableHighWaterMark = queueingStrategy === 'bytes' ? 2 ** 14 : 1000 } = { ...readableStrategy };\n        const { ['highWaterMark']: writableHighWaterMark = queueingStrategy === 'bytes' ? 2 ** 14 : 1000 } = { ...writableStrategy };\n\n        this['readable'] = new ReadableStream<V<T>>({\n            ['cancel']: ()  => { this._builder.clear(); },\n            ['pull']: (c) => { this._maybeFlush(this._builder, this._controller = c); },\n            ['start']: (c) => { this._maybeFlush(this._builder, this._controller = c); },\n        }, {\n            'highWaterMark': readableHighWaterMark,\n            'size': queueingStrategy !== 'bytes' ? chunkLength : chunkByteLength,\n        });\n\n        this['writable'] = new WritableStream({\n            ['abort']: () => { this._builder.clear(); },\n            ['write']: () => { this._maybeFlush(this._builder, this._controller); },\n            ['close']: () => { this._maybeFlush(this._builder.finish(), this._controller); },\n        }, {\n            'highWaterMark': writableHighWaterMark,\n            'size': (value: T['TValue'] | TNull) => this._writeValueAndReturnChunkSize(value),\n        });\n    }\n\n    private _writeValueAndReturnChunkSize(value: T['TValue'] | TNull) {\n        const bufferedSize = this._bufferedSize;\n        this._bufferedSize = this._getSize(this._builder.append(value));\n        return this._bufferedSize - bufferedSize;\n    }\n\n    private _maybeFlush(builder: Builder<T, TNull>, controller: ReadableStreamDefaultController<V<T>> | null) {\n        if (controller === null) { return; }\n        if (this._bufferedSize >= controller.desiredSize!) {\n            ++this._numChunks && this._enqueue(controller, builder.toVector());\n        }\n        if (builder.finished) {\n            if (builder.length > 0 || this._numChunks === 0) {\n                ++this._numChunks && this._enqueue(controller, builder.toVector());\n            }\n            if (!this._finished && (this._finished = true)) {\n                this._enqueue(controller, null);\n            }\n        }\n    }\n\n    private _enqueue(controller: ReadableStreamDefaultController<V<T>>, chunk: V<T> | null) {\n        this._bufferedSize = 0;\n        this._controller = null;\n        chunk === null ? controller.close() : controller.enqueue(chunk);\n    }\n}\n\n/** @ignore */ const chunkLength = <T extends DataType = any>(chunk: Vector<T> | Builder<T>) => chunk.length;\n/** @ignore */ const chunkByteLength = <T extends DataType = any>(chunk: Vector<T> | Builder<T>) => chunk.byteLength;\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { Vector } from '../vector';\nimport { RecordBatch } from '../recordbatch';\nimport { DictionaryVector } from '../vector/dictionary';\n\n/** @ignore */\nexport type ValueFunc<T> = (idx: number, cols: RecordBatch) => T | null;\n/** @ignore */\nexport type PredicateFunc = (idx: number, cols: RecordBatch) => boolean;\n\n/** @ignore */\nexport abstract class Value<T> {\n    eq(other: Value<T> | T): Predicate {\n        if (!(other instanceof Value)) { other = new Literal(other); }\n        return new Equals(this, other);\n    }\n    le(other: Value<T> | T): Predicate {\n        if (!(other instanceof Value)) { other = new Literal(other); }\n        return new LTeq(this, other);\n    }\n    ge(other: Value<T> | T): Predicate {\n        if (!(other instanceof Value)) { other = new Literal(other); }\n        return new GTeq(this, other);\n    }\n    lt(other: Value<T> | T): Predicate {\n        return new Not(this.ge(other));\n    }\n    gt(other: Value<T> | T): Predicate {\n        return new Not(this.le(other));\n    }\n    ne(other: Value<T> | T): Predicate {\n        return new Not(this.eq(other));\n    }\n}\n\n/** @ignore */\nexport class Literal<T= any> extends Value<T> {\n    constructor(public v: T) { super(); }\n}\n\n/** @ignore */\nexport class Col<T= any> extends Value<T> {\n    // @ts-ignore\n    public vector: Vector;\n    // @ts-ignore\n    public colidx: number;\n\n    constructor(public name: string) { super(); }\n    bind(batch: RecordBatch): (idx: number, batch?: RecordBatch) => any {\n        if (!this.colidx) {\n            // Assume column index doesn't change between calls to bind\n            //this.colidx = cols.findIndex(v => v.name.indexOf(this.name) != -1);\n            this.colidx = -1;\n            const fields = batch.schema.fields;\n            for (let idx = -1; ++idx < fields.length;) {\n                if (fields[idx].name === this.name) {\n                    this.colidx = idx;\n                    break;\n                }\n            }\n            if (this.colidx < 0) { throw new Error(`Failed to bind Col \"${this.name}\"`); }\n        }\n\n        const vec = this.vector = batch.getChildAt(this.colidx)!;\n        return (idx: number) => vec.get(idx);\n    }\n}\n\n/** @ignore */\nexport abstract class Predicate {\n    abstract bind(batch: RecordBatch): PredicateFunc;\n    and(...expr: Predicate[]): And { return new And(this, ...expr); }\n    or(...expr: Predicate[]): Or { return new Or(this, ...expr); }\n    not(): Predicate { return new Not(this); }\n}\n\n/** @ignore */\nexport abstract class ComparisonPredicate<T= any> extends Predicate {\n    constructor(public readonly left: Value<T>, public readonly right: Value<T>) {\n        super();\n    }\n\n    bind(batch: RecordBatch) {\n        if (this.left instanceof Literal) {\n            if (this.right instanceof Literal) {\n                return this._bindLitLit(batch, this.left, this.right);\n            } else { // right is a Col\n\n                return this._bindLitCol(batch, this.left, this.right as Col);\n            }\n        } else { // left is a Col\n            if (this.right instanceof Literal) {\n                return this._bindColLit(batch, this.left as Col, this.right);\n            } else { // right is a Col\n                return this._bindColCol(batch, this.left as Col, this.right as Col);\n            }\n        }\n    }\n\n    protected abstract _bindLitLit(batch: RecordBatch, left: Literal, right: Literal): PredicateFunc;\n    protected abstract _bindColCol(batch: RecordBatch, left: Col, right: Col): PredicateFunc;\n    protected abstract _bindColLit(batch: RecordBatch, col: Col, lit: Literal): PredicateFunc;\n    protected abstract _bindLitCol(batch: RecordBatch, lit: Literal, col: Col): PredicateFunc;\n}\n\n/** @ignore */\nexport abstract class CombinationPredicate extends Predicate {\n    readonly children: Predicate[];\n    constructor(...children: Predicate[]) {\n        super();\n        this.children = children;\n    }\n}\n// add children to prototype so it doesn't get mangled in es2015/umd\n(<any> CombinationPredicate.prototype).children = Object.freeze([]); // freeze for safety\n\n/** @ignore */\nexport class And extends CombinationPredicate {\n    constructor(...children: Predicate[]) {\n        // Flatten any Ands\n        children = children.reduce((accum: Predicate[], p: Predicate): Predicate[] => {\n            return accum.concat(p instanceof And ? p.children : p);\n        }, []);\n        super(...children);\n    }\n    bind(batch: RecordBatch) {\n        const bound = this.children.map((p) => p.bind(batch));\n        return (idx: number, batch: RecordBatch) => bound.every((p) => p(idx, batch));\n    }\n}\n\n/** @ignore */\nexport class Or extends CombinationPredicate {\n    constructor(...children: Predicate[]) {\n        // Flatten any Ors\n        children = children.reduce((accum: Predicate[], p: Predicate): Predicate[] => {\n            return accum.concat(p instanceof Or ? p.children : p);\n        }, []);\n        super(...children);\n    }\n    bind(batch: RecordBatch) {\n        const bound = this.children.map((p) => p.bind(batch));\n        return (idx: number, batch: RecordBatch) => bound.some((p) => p(idx, batch));\n    }\n}\n\n/** @ignore */\nexport class Equals extends ComparisonPredicate {\n    // Helpers used to cache dictionary reverse lookups between calls to bind\n    private lastDictionary: Vector|undefined;\n    private lastKey: number|undefined;\n\n    protected _bindLitLit(_batch: RecordBatch, left: Literal, right: Literal): PredicateFunc {\n        const rtrn: boolean = left.v == right.v;\n        return () => rtrn;\n    }\n\n    protected _bindColCol(batch: RecordBatch, left: Col, right: Col): PredicateFunc {\n        const left_func = left.bind(batch);\n        const right_func = right.bind(batch);\n        return (idx: number, batch: RecordBatch) => left_func(idx, batch) == right_func(idx, batch);\n    }\n\n    protected _bindColLit(batch: RecordBatch, col: Col, lit: Literal): PredicateFunc {\n        const col_func = col.bind(batch);\n        if (col.vector instanceof DictionaryVector) {\n            let key: any;\n            const vector = col.vector as DictionaryVector;\n            if (vector.dictionary !== this.lastDictionary) {\n                key = vector.reverseLookup(lit.v);\n                this.lastDictionary = vector.dictionary;\n                this.lastKey = key;\n            } else {\n                key = this.lastKey;\n            }\n\n            if (key === -1) {\n                // the value doesn't exist in the dictionary - always return\n                // false\n                // TODO: special-case of PredicateFunc that encapsulates this\n                // \"always false\" behavior. That way filtering operations don't\n                // have to bother checking\n                return () => false;\n            } else {\n                return (idx: number) => {\n                    return vector.getKey(idx) === key;\n                };\n            }\n        } else {\n            return (idx: number, cols: RecordBatch) => col_func(idx, cols) == lit.v;\n        }\n    }\n\n    protected _bindLitCol(batch: RecordBatch, lit: Literal, col: Col) {\n        // Equals is commutative\n        return this._bindColLit(batch, col, lit);\n    }\n}\n\n/** @ignore */\nexport class LTeq extends ComparisonPredicate {\n    protected _bindLitLit(_batch: RecordBatch, left: Literal, right: Literal): PredicateFunc {\n        const rtrn: boolean = left.v <= right.v;\n        return () => rtrn;\n    }\n\n    protected _bindColCol(batch: RecordBatch, left: Col, right: Col): PredicateFunc {\n        const left_func = left.bind(batch);\n        const right_func = right.bind(batch);\n        return (idx: number, cols: RecordBatch) => left_func(idx, cols) <= right_func(idx, cols);\n    }\n\n    protected _bindColLit(batch: RecordBatch, col: Col, lit: Literal): PredicateFunc {\n        const col_func = col.bind(batch);\n        return (idx: number, cols: RecordBatch) => col_func(idx, cols) <= lit.v;\n    }\n\n    protected _bindLitCol(batch: RecordBatch, lit: Literal, col: Col) {\n        const col_func = col.bind(batch);\n        return (idx: number, cols: RecordBatch) => lit.v <= col_func(idx, cols);\n    }\n}\n\n/** @ignore */\nexport class GTeq extends ComparisonPredicate {\n    protected _bindLitLit(_batch: RecordBatch, left: Literal, right: Literal): PredicateFunc {\n        const rtrn: boolean = left.v >= right.v;\n        return () => rtrn;\n    }\n\n    protected _bindColCol(batch: RecordBatch, left: Col, right: Col): PredicateFunc {\n        const left_func = left.bind(batch);\n        const right_func = right.bind(batch);\n        return (idx: number, cols: RecordBatch) => left_func(idx, cols) >= right_func(idx, cols);\n    }\n\n    protected _bindColLit(batch: RecordBatch, col: Col, lit: Literal): PredicateFunc {\n        const col_func = col.bind(batch);\n        return (idx: number, cols: RecordBatch) => col_func(idx, cols) >= lit.v;\n    }\n\n    protected _bindLitCol(batch: RecordBatch, lit: Literal, col: Col) {\n        const col_func = col.bind(batch);\n        return (idx: number, cols: RecordBatch) => lit.v >= col_func(idx, cols);\n    }\n}\n\n/** @ignore */\nexport class Not extends Predicate {\n    constructor(public readonly child: Predicate) {\n        super();\n    }\n\n    bind(batch: RecordBatch) {\n        const func = this.child.bind(batch);\n        return (idx: number, batch: RecordBatch) => !func(idx, batch);\n    }\n}\n\n/** @ignore */\nexport class CustomPredicate extends Predicate {\n    constructor(private next: PredicateFunc, private bind_: (batch: RecordBatch) => void) {\n        super();\n    }\n\n    bind(batch: RecordBatch) {\n        this.bind_(batch);\n        return this.next;\n    }\n}\n\nexport function lit(v: any): Value<any> { return new Literal(v); }\nexport function col(n: string): Col<any> { return new Col(n); }\nexport function and(...p: Predicate[]): And { return new And(...p); }\nexport function or(...p: Predicate[]): Or { return new Or(...p); }\nexport function custom(next: PredicateFunc, bind: (batch: RecordBatch) => void) {\n    return new CustomPredicate(next, bind);\n}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { Table } from '../table';\nimport { Vector } from '../vector';\nimport { IntVector } from '../vector/int';\nimport { Field, Schema } from '../schema';\nimport { Predicate, Col } from './predicate';\nimport { RecordBatch } from '../recordbatch';\nimport { VectorType as V } from '../interfaces';\nimport { DataType, Int, Struct, Dictionary } from '../type';\n\n/** @ignore */\nexport type BindFunc = (batch: RecordBatch) => void;\n/** @ignore */\nexport type NextFunc = (idx: number, batch: RecordBatch) => void;\n\nTable.prototype.countBy = function(this: Table, name: Col | string) { return new DataFrame(this.chunks).countBy(name); };\nTable.prototype.scan = function(this: Table, next: NextFunc, bind?: BindFunc) { return new DataFrame(this.chunks).scan(next, bind); };\nTable.prototype.scanReverse = function(this: Table, next: NextFunc, bind?: BindFunc) { return new DataFrame(this.chunks).scanReverse(next, bind); };\nTable.prototype.filter = function(this: Table, predicate: Predicate): FilteredDataFrame { return new DataFrame(this.chunks).filter(predicate); };\n\nexport class DataFrame<T extends { [key: string]: DataType } = any> extends Table<T> {\n    public filter(predicate: Predicate): FilteredDataFrame<T> {\n        return new FilteredDataFrame<T>(this.chunks, predicate);\n    }\n    public scan(next: NextFunc, bind?: BindFunc) {\n        const batches = this.chunks, numBatches = batches.length;\n        for (let batchIndex = -1; ++batchIndex < numBatches;) {\n            // load batches\n            const batch = batches[batchIndex];\n            if (bind) { bind(batch); }\n            // yield all indices\n            for (let index = -1, numRows = batch.length; ++index < numRows;) {\n                next(index, batch);\n            }\n        }\n    }\n    public scanReverse(next: NextFunc, bind?: BindFunc) {\n        const batches = this.chunks, numBatches = batches.length;\n        for (let batchIndex = numBatches; --batchIndex >= 0;) {\n            // load batches\n            const batch = batches[batchIndex];\n            if (bind) { bind(batch); }\n            // yield all indices\n            for (let index = batch.length; --index >= 0;) {\n                next(index, batch);\n            }\n        }\n    }\n    public countBy(name: Col | string) {\n        const batches = this.chunks, numBatches = batches.length;\n        const count_by = typeof name === 'string' ? new Col(name) : name as Col;\n        // Assume that all dictionary batches are deltas, which means that the\n        // last record batch has the most complete dictionary\n        count_by.bind(batches[numBatches - 1]);\n        const vector = count_by.vector as V<Dictionary>;\n        if (!DataType.isDictionary(vector.type)) {\n            throw new Error('countBy currently only supports dictionary-encoded columns');\n        }\n\n        const countByteLength = Math.ceil(Math.log(vector.length) / Math.log(256));\n        const CountsArrayType = countByteLength == 4 ? Uint32Array :\n                                countByteLength >= 2 ? Uint16Array : Uint8Array;\n\n        const counts = new CountsArrayType(vector.dictionary.length);\n        for (let batchIndex = -1; ++batchIndex < numBatches;) {\n            // load batches\n            const batch = batches[batchIndex];\n            // rebind the countBy Col\n            count_by.bind(batch);\n            const keys = (count_by.vector as V<Dictionary>).indices;\n            // yield all indices\n            for (let index = -1, numRows = batch.length; ++index < numRows;) {\n                let key = keys.get(index);\n                if (key !== null) { counts[key]++; }\n            }\n        }\n        return new CountByResult(vector.dictionary, IntVector.from(counts));\n    }\n}\n\n/** @ignore */\nexport class CountByResult<T extends DataType = any, TCount extends Int = Int> extends Table<{ values: T,  counts: TCount }> {\n    constructor(values: Vector<T>, counts: V<TCount>) {\n        type R = { values: T, counts: TCount };\n        const schema = new Schema<R>([\n            new Field('values', values.type),\n            new Field('counts', counts.type)\n        ]);\n        super(new RecordBatch<R>(schema, counts.length, [values, counts]));\n    }\n    public toJSON(): Object {\n        const values = this.getColumnAt(0)!;\n        const counts = this.getColumnAt(1)!;\n        const result = {} as { [k: string]: number | null };\n        for (let i = -1; ++i < this.length;) {\n            result[values.get(i)] = counts.get(i);\n        }\n        return result;\n    }\n}\n\n/** @ignore */\nexport class FilteredDataFrame<T extends { [key: string]: DataType } = any> extends DataFrame<T> {\n    private _predicate: Predicate;\n    constructor (batches: RecordBatch<T>[], predicate: Predicate) {\n        super(batches);\n        this._predicate = predicate;\n    }\n    public scan(next: NextFunc, bind?: BindFunc) {\n        // inlined version of this:\n        // this.parent.scan((idx, columns) => {\n        //     if (this.predicate(idx, columns)) next(idx, columns);\n        // });\n        const batches = this._chunks;\n        const numBatches = batches.length;\n        for (let batchIndex = -1; ++batchIndex < numBatches;) {\n            // load batches\n            const batch = batches[batchIndex];\n            const predicate = this._predicate.bind(batch);\n            let isBound = false;\n            // yield all indices\n            for (let index = -1, numRows = batch.length; ++index < numRows;) {\n                if (predicate(index, batch)) {\n                    // bind batches lazily - if predicate doesn't match anything\n                    // in the batch we don't need to call bind on the batch\n                    if (bind && !isBound) {\n                        bind(batch);\n                        isBound = true;\n                    }\n                    next(index, batch);\n                }\n            }\n        }\n    }\n    public scanReverse(next: NextFunc, bind?: BindFunc) {\n        const batches = this._chunks;\n        const numBatches = batches.length;\n        for (let batchIndex = numBatches; --batchIndex >= 0;) {\n            // load batches\n            const batch = batches[batchIndex];\n            const predicate = this._predicate.bind(batch);\n            let isBound = false;\n            // yield all indices\n            for (let index = batch.length; --index >= 0;) {\n                if (predicate(index, batch)) {\n                    // bind batches lazily - if predicate doesn't match anything\n                    // in the batch we don't need to call bind on the batch\n                    if (bind && !isBound) {\n                        bind(batch);\n                        isBound = true;\n                    }\n                    next(index, batch);\n                }\n            }\n        }\n    }\n    public count(): number {\n        // inlined version of this:\n        // let sum = 0;\n        // this.parent.scan((idx, columns) => {\n        //     if (this.predicate(idx, columns)) ++sum;\n        // });\n        // return sum;\n        let sum = 0;\n        const batches = this._chunks;\n        const numBatches = batches.length;\n        for (let batchIndex = -1; ++batchIndex < numBatches;) {\n            // load batches\n            const batch = batches[batchIndex];\n            const predicate = this._predicate.bind(batch);\n            // yield all indices\n            for (let index = -1, numRows = batch.length; ++index < numRows;) {\n                if (predicate(index, batch)) { ++sum; }\n            }\n        }\n        return sum;\n    }\n    public *[Symbol.iterator](): IterableIterator<Struct<T>['TValue']> {\n        // inlined version of this:\n        // this.parent.scan((idx, columns) => {\n        //     if (this.predicate(idx, columns)) next(idx, columns);\n        // });\n        const batches = this._chunks;\n        const numBatches = batches.length;\n        for (let batchIndex = -1; ++batchIndex < numBatches;) {\n            // load batches\n            const batch = batches[batchIndex];\n            // TODO: bind batches lazily\n            // If predicate doesn't match anything in the batch we don't need\n            // to bind the callback\n            const predicate = this._predicate.bind(batch);\n            // yield all indices\n            for (let index = -1, numRows = batch.length; ++index < numRows;) {\n                if (predicate(index, batch)) { yield batch.get(index) as any; }\n            }\n        }\n    }\n    public filter(predicate: Predicate): FilteredDataFrame<T> {\n        return new FilteredDataFrame<T>(\n            this._chunks,\n            this._predicate.and(predicate)\n        );\n    }\n    public countBy(name: Col | string) {\n        const batches = this._chunks, numBatches = batches.length;\n        const count_by = typeof name === 'string' ? new Col(name) : name as Col;\n        // Assume that all dictionary batches are deltas, which means that the\n        // last record batch has the most complete dictionary\n        count_by.bind(batches[numBatches - 1]);\n        const vector = count_by.vector as V<Dictionary>;\n        if (!DataType.isDictionary(vector.type)) {\n            throw new Error('countBy currently only supports dictionary-encoded columns');\n        }\n\n        const countByteLength = Math.ceil(Math.log(vector.length) / Math.log(256));\n        const CountsArrayType = countByteLength == 4 ? Uint32Array :\n                                countByteLength >= 2 ? Uint16Array : Uint8Array;\n\n        const counts = new CountsArrayType(vector.dictionary.length);\n\n        for (let batchIndex = -1; ++batchIndex < numBatches;) {\n            // load batches\n            const batch = batches[batchIndex];\n            const predicate = this._predicate.bind(batch);\n            // rebind the countBy Col\n            count_by.bind(batch);\n            const keys = (count_by.vector as V<Dictionary>).indices;\n            // yield all indices\n            for (let index = -1, numRows = batch.length; ++index < numRows;) {\n                let key = keys.get(index);\n                if (key !== null && predicate(index, batch)) { counts[key]++; }\n            }\n        }\n        return new CountByResult(vector.dictionary, IntVector.from(counts));\n    }\n}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nexport { ArrowType, DateUnit, IntervalUnit, MessageHeader, MetadataVersion, Precision, TimeUnit, Type, UnionMode, BufferType } from './enum';\nexport { Data } from './data';\nexport {\n    DataType,\n    Null,\n    Bool,\n    Int, Int8, Int16, Int32, Int64, Uint8, Uint16, Uint32, Uint64,\n    Float, Float16, Float32, Float64,\n    Utf8,\n    Binary,\n    FixedSizeBinary,\n    Date_, DateDay, DateMillisecond,\n    Timestamp, TimestampSecond, TimestampMillisecond, TimestampMicrosecond, TimestampNanosecond,\n    Time, TimeSecond, TimeMillisecond, TimeMicrosecond, TimeNanosecond,\n    Decimal,\n    List,\n    Struct,\n    Union, DenseUnion, SparseUnion,\n    Dictionary,\n    Interval, IntervalDayTime, IntervalYearMonth,\n    FixedSizeList,\n    Map_,\n} from './type';\n\nexport { Table } from './table';\nexport { Column } from './column';\nexport { Visitor } from './visitor';\nexport { Schema, Field } from './schema';\nexport {\n    Vector,\n    BaseVector,\n    BinaryVector,\n    BoolVector,\n    Chunked,\n    DateVector, DateDayVector, DateMillisecondVector,\n    DecimalVector,\n    DictionaryVector,\n    FixedSizeBinaryVector,\n    FixedSizeListVector,\n    FloatVector, Float16Vector, Float32Vector, Float64Vector,\n    IntervalVector, IntervalDayTimeVector, IntervalYearMonthVector,\n    IntVector, Int8Vector, Int16Vector, Int32Vector, Int64Vector, Uint8Vector, Uint16Vector, Uint32Vector, Uint64Vector,\n    ListVector,\n    MapVector,\n    NullVector,\n    StructVector,\n    TimestampVector, TimestampSecondVector, TimestampMillisecondVector, TimestampMicrosecondVector, TimestampNanosecondVector,\n    TimeVector, TimeSecondVector, TimeMillisecondVector, TimeMicrosecondVector, TimeNanosecondVector,\n    UnionVector, DenseUnionVector, SparseUnionVector,\n    Utf8Vector,\n} from './vector/index';\n\nexport {\n    Builder,\n    BinaryBuilder,\n    BoolBuilder,\n    DateBuilder, DateDayBuilder, DateMillisecondBuilder,\n    DecimalBuilder,\n    DictionaryBuilder,\n    FixedSizeBinaryBuilder,\n    FixedSizeListBuilder,\n    FloatBuilder, Float16Builder, Float32Builder, Float64Builder,\n    IntervalBuilder, IntervalDayTimeBuilder, IntervalYearMonthBuilder,\n    IntBuilder, Int8Builder, Int16Builder, Int32Builder, Int64Builder, Uint8Builder, Uint16Builder, Uint32Builder, Uint64Builder,\n    ListBuilder,\n    MapBuilder,\n    NullBuilder,\n    StructBuilder,\n    TimestampBuilder, TimestampSecondBuilder, TimestampMillisecondBuilder, TimestampMicrosecondBuilder, TimestampNanosecondBuilder,\n    TimeBuilder, TimeSecondBuilder, TimeMillisecondBuilder, TimeMicrosecondBuilder, TimeNanosecondBuilder,\n    UnionBuilder, DenseUnionBuilder, SparseUnionBuilder,\n    Utf8Builder,\n} from './builder/index';\n\nexport { ByteStream, AsyncByteStream, AsyncByteQueue, ReadableSource, WritableSink } from './io/stream';\nexport { RecordBatchReader, RecordBatchFileReader, RecordBatchStreamReader, AsyncRecordBatchFileReader, AsyncRecordBatchStreamReader } from './ipc/reader';\nexport { RecordBatchWriter, RecordBatchFileWriter, RecordBatchStreamWriter, RecordBatchJSONWriter } from './ipc/writer';\nexport { MessageReader, AsyncMessageReader, JSONMessageReader } from './ipc/message';\nexport { Message } from './ipc/metadata/message';\nexport { RecordBatch } from './recordbatch';\nexport { ArrowJSONLike, FileHandle, Readable, Writable, ReadableWritable, ReadableDOMStreamOptions } from './io/interfaces';\nexport { DataFrame, FilteredDataFrame, CountByResult, BindFunc, NextFunc } from './compute/dataframe';\n\nimport * as util_bn_ from './util/bn';\nimport * as util_int_ from './util/int';\nimport * as util_bit_ from './util/bit';\nimport * as util_math_ from './util/math';\nimport * as util_buffer_ from './util/buffer';\nimport * as util_vector_ from './util/vector';\nimport * as predicate from './compute/predicate';\n\nexport { predicate };\n/** @ignore */\nexport const util = {\n    ...util_bn_,\n    ...util_int_,\n    ...util_bit_,\n    ...util_math_,\n    ...util_buffer_,\n    ...util_vector_\n};\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport streamAdapters from './io/adapters';\nimport { Builder } from './builder/index';\nimport { RecordBatchReader } from './ipc/reader';\nimport { RecordBatchWriter } from './ipc/writer';\nimport { toDOMStream } from './io/whatwg/iterable';\nimport { builderThroughDOMStream } from './io/whatwg/builder';\nimport { recordBatchReaderThroughDOMStream } from './io/whatwg/reader';\nimport { recordBatchWriterThroughDOMStream } from './io/whatwg/writer';\n\nstreamAdapters.toDOMStream = toDOMStream;\nBuilder['throughDOM'] = builderThroughDOMStream;\nRecordBatchReader['throughDOM'] = recordBatchReaderThroughDOMStream;\nRecordBatchWriter['throughDOM'] = recordBatchWriterThroughDOMStream;\n\nexport {\n    ArrowType, DateUnit, IntervalUnit, MessageHeader, MetadataVersion, Precision, TimeUnit, Type, UnionMode, BufferType,\n    Data,\n    DataType,\n    Null,\n    Bool,\n    Int, Int8, Int16, Int32, Int64, Uint8, Uint16, Uint32, Uint64,\n    Float, Float16, Float32, Float64,\n    Utf8,\n    Binary,\n    FixedSizeBinary,\n    Date_, DateDay, DateMillisecond,\n    Timestamp, TimestampSecond, TimestampMillisecond, TimestampMicrosecond, TimestampNanosecond,\n    Time, TimeSecond, TimeMillisecond, TimeMicrosecond, TimeNanosecond,\n    Decimal,\n    List,\n    Struct,\n    Union, DenseUnion, SparseUnion,\n    Dictionary,\n    Interval, IntervalDayTime, IntervalYearMonth,\n    FixedSizeList,\n    Map_,\n    Table,\n    Column,\n    Schema, Field,\n    Visitor,\n    Vector,\n    BaseVector,\n    BinaryVector,\n    BoolVector,\n    Chunked,\n    DateVector, DateDayVector, DateMillisecondVector,\n    DecimalVector,\n    DictionaryVector,\n    FixedSizeBinaryVector,\n    FixedSizeListVector,\n    FloatVector, Float16Vector, Float32Vector, Float64Vector,\n    IntervalVector, IntervalDayTimeVector, IntervalYearMonthVector,\n    IntVector, Int8Vector, Int16Vector, Int32Vector, Int64Vector, Uint8Vector, Uint16Vector, Uint32Vector, Uint64Vector,\n    ListVector,\n    MapVector,\n    NullVector,\n    StructVector,\n    TimestampVector, TimestampSecondVector, TimestampMillisecondVector, TimestampMicrosecondVector, TimestampNanosecondVector,\n    TimeVector, TimeSecondVector, TimeMillisecondVector, TimeMicrosecondVector, TimeNanosecondVector,\n    UnionVector, DenseUnionVector, SparseUnionVector,\n    Utf8Vector,\n    ByteStream, AsyncByteStream, AsyncByteQueue, ReadableSource, WritableSink,\n    RecordBatchReader, RecordBatchFileReader, RecordBatchStreamReader, AsyncRecordBatchFileReader, AsyncRecordBatchStreamReader,\n    RecordBatchWriter, RecordBatchFileWriter, RecordBatchStreamWriter, RecordBatchJSONWriter,\n    MessageReader, AsyncMessageReader, JSONMessageReader,\n    Message,\n    RecordBatch,\n    ArrowJSONLike, FileHandle, Readable, Writable, ReadableWritable, ReadableDOMStreamOptions,\n    DataFrame, FilteredDataFrame, CountByResult, BindFunc, NextFunc,\n    predicate,\n    util,\n    Builder,\n    BinaryBuilder,\n    BoolBuilder,\n    DateBuilder, DateDayBuilder, DateMillisecondBuilder,\n    DecimalBuilder,\n    DictionaryBuilder,\n    FixedSizeBinaryBuilder,\n    FixedSizeListBuilder,\n    FloatBuilder, Float16Builder, Float32Builder, Float64Builder,\n    IntervalBuilder, IntervalDayTimeBuilder, IntervalYearMonthBuilder,\n    IntBuilder, Int8Builder, Int16Builder, Int32Builder, Int64Builder, Uint8Builder, Uint16Builder, Uint32Builder, Uint64Builder,\n    ListBuilder,\n    MapBuilder,\n    NullBuilder,\n    StructBuilder,\n    TimestampBuilder, TimestampSecondBuilder, TimestampMillisecondBuilder, TimestampMicrosecondBuilder, TimestampNanosecondBuilder,\n    TimeBuilder, TimeSecondBuilder, TimeMillisecondBuilder, TimeMicrosecondBuilder, TimeNanosecondBuilder,\n    UnionBuilder, DenseUnionBuilder, SparseUnionBuilder,\n    Utf8Builder,\n} from './Arrow';\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { toUint8Array } from '../../util/buffer';\nimport { ReadableDOMStreamOptions } from '../../io/interfaces';\nimport { isIterable, isAsyncIterable } from '../../util/compat';\n\n/** @ignore */\nexport function toDOMStream<T>(source: Iterable<T> | AsyncIterable<T>, options?: ReadableDOMStreamOptions): ReadableStream<T> {\n    if (isAsyncIterable<T>(source)) { return asyncIterableAsReadableDOMStream(source, options); }\n    if (isIterable<T>(source)) { return iterableAsReadableDOMStream(source, options); }\n    /* istanbul ignore next */\n    throw new Error(`toDOMStream() must be called with an Iterable or AsyncIterable`);\n}\n\n/** @ignore */\nfunction iterableAsReadableDOMStream<T>(source: Iterable<T>, options?: ReadableDOMStreamOptions) {\n\n    let it: Iterator<T> | null = null;\n    const bm = (options && options.type === 'bytes') || false;\n    const hwm = options && options.highWaterMark || (2 ** 24);\n\n    return new ReadableStream<T>({\n        ...options as any,\n        start(controller) { next(controller, it || (it = source[Symbol.iterator]())); },\n        pull(controller) { it ? (next(controller, it)) : controller.close(); },\n        cancel() { (it && (it.return && it.return()) || true) && (it = null); }\n    }, { highWaterMark: bm ? hwm : undefined, ...options });\n\n    function next(controller: ReadableStreamDefaultController<T>, it: Iterator<T>) {\n        let buf: Uint8Array;\n        let r: IteratorResult<T> | null = null;\n        let size = controller.desiredSize || null;\n        while (!(r = it.next(bm ? size : null)).done) {\n            if (ArrayBuffer.isView(r.value) && (buf = toUint8Array(r.value))) {\n                size != null && bm && (size = size - buf.byteLength + 1);\n                r.value = <any> buf;\n            }\n            controller.enqueue(r.value);\n            if (size != null && --size <= 0) { return; }\n        }\n        controller.close();\n    }\n}\n\n/** @ignore */\nfunction asyncIterableAsReadableDOMStream<T>(source: AsyncIterable<T>, options?: ReadableDOMStreamOptions) {\n\n    let it: AsyncIterator<T> | null = null;\n    const bm = (options && options.type === 'bytes') || false;\n    const hwm = options && options.highWaterMark || (2 ** 24);\n\n    return new ReadableStream<T>({\n        ...options as any,\n        async start(controller) { await next(controller, it || (it = source[Symbol.asyncIterator]())); },\n        async pull(controller) { it ? (await next(controller, it)) : controller.close(); },\n        async cancel() { (it && (it.return && await it.return()) || true) && (it = null); },\n    }, { highWaterMark: bm ? hwm : undefined, ...options });\n\n    async function next(controller: ReadableStreamDefaultController<T>, it: AsyncIterator<T>) {\n        let buf: Uint8Array;\n        let r: IteratorResult<T> | null = null;\n        let size = controller.desiredSize || null;\n        while (!(r = await it.next(bm ? size : null)).done) {\n            if (ArrayBuffer.isView(r.value) && (buf = toUint8Array(r.value))) {\n                size != null && bm && (size = size - buf.byteLength + 1);\n                r.value = <any> buf;\n            }\n            controller.enqueue(r.value);\n            if (size != null && --size <= 0) { return; }\n        }\n        controller.close();\n    }\n}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { DataType } from '../../type';\nimport { RecordBatch } from '../../recordbatch';\nimport { AsyncByteQueue } from '../../io/stream';\nimport { RecordBatchReader } from '../../ipc/reader';\n\n/** @ignore */\nexport function recordBatchReaderThroughDOMStream<T extends { [key: string]: DataType } = any>(writableStrategy?: ByteLengthQueuingStrategy, readableStrategy?: { autoDestroy: boolean }) {\n\n    const queue = new AsyncByteQueue();\n    let reader: RecordBatchReader<T> | null = null;\n\n    const readable = new ReadableStream<RecordBatch<T>>({\n        async cancel() { await queue.close(); },\n        async start(controller) { await next(controller, reader || (reader = await open())); },\n        async pull(controller) { reader ? await next(controller, reader) : controller.close(); }\n    });\n\n    return { writable: new WritableStream(queue, { 'highWaterMark': 2 ** 14, ...writableStrategy }), readable };\n\n    async function open() {\n        return await (await RecordBatchReader.from<T>(queue)).open(readableStrategy);\n    }\n\n    async function next(controller: ReadableStreamDefaultController<RecordBatch<T>>, reader: RecordBatchReader<T>) {\n        let size = controller.desiredSize;\n        let r: IteratorResult<RecordBatch<T>> | null = null;\n        while (!(r = await reader.next()).done) {\n            controller.enqueue(r.value);\n            if (size != null && --size <= 0) {\n                return;\n            }\n        }\n        controller.close();\n    }\n}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { DataType } from '../../type';\nimport { RecordBatch } from '../../recordbatch';\nimport { AsyncByteStream } from '../../io/stream';\nimport { RecordBatchWriter } from '../../ipc/writer';\n\n/** @ignore */\nexport function recordBatchWriterThroughDOMStream<T extends { [key: string]: DataType } = any>(\n    this: typeof RecordBatchWriter,\n    writableStrategy?: QueuingStrategy<RecordBatch<T>> & { autoDestroy: boolean },\n    readableStrategy?: { highWaterMark?: number, size?: any }\n) {\n\n    const writer = new this<T>(writableStrategy);\n    const reader = new AsyncByteStream(writer);\n    const readable = new ReadableStream({\n        type: 'bytes',\n        async cancel() { await reader.cancel(); },\n        async pull(controller) { await next(controller); },\n        async start(controller) { await next(controller); },\n    }, { 'highWaterMark': 2 ** 14, ...readableStrategy });\n\n    return { writable: new WritableStream(writer, writableStrategy), readable };\n\n    async function next(controller: ReadableStreamDefaultController<Uint8Array>) {\n        let buf: Uint8Array | null = null;\n        let size = controller.desiredSize;\n        while (buf = await reader.read(size || null)) {\n            controller.enqueue(buf);\n            if (size != null && (size -= buf.byteLength) <= 0) { return; }\n        }\n        controller.close();\n    }\n}\n","/**\n * @license\n * Copyright 2018-2021 Streamlit Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { Table, Type } from \"apache-arrow\";\nvar ArrowTable = /** @class */ (function () {\n    function ArrowTable(dataBuffer, indexBuffer, columnsBuffer, styler) {\n        var _this = this;\n        this.getCell = function (rowIndex, columnIndex) {\n            var isBlankCell = rowIndex < _this.headerRows && columnIndex < _this.headerColumns;\n            var isIndexCell = rowIndex >= _this.headerRows && columnIndex < _this.headerColumns;\n            var isColumnsCell = rowIndex < _this.headerRows && columnIndex >= _this.headerColumns;\n            if (isBlankCell) {\n                var classNames = [\"blank\"];\n                if (columnIndex > 0) {\n                    classNames.push(\"level\" + rowIndex);\n                }\n                return {\n                    type: \"blank\",\n                    classNames: classNames.join(\" \"),\n                    content: \"\"\n                };\n            }\n            else if (isColumnsCell) {\n                var dataColumnIndex = columnIndex - _this.headerColumns;\n                var classNames = [\n                    \"col_heading\",\n                    \"level\" + rowIndex,\n                    \"col\" + dataColumnIndex\n                ];\n                return {\n                    type: \"columns\",\n                    classNames: classNames.join(\" \"),\n                    content: _this.getContent(_this.columnsTable, dataColumnIndex, rowIndex)\n                };\n            }\n            else if (isIndexCell) {\n                var dataRowIndex = rowIndex - _this.headerRows;\n                var classNames = [\n                    \"row_heading\",\n                    \"level\" + columnIndex,\n                    \"row\" + dataRowIndex\n                ];\n                return {\n                    type: \"index\",\n                    id: \"T_\" + _this.uuid + \"level\" + columnIndex + \"_row\" + dataRowIndex,\n                    classNames: classNames.join(\" \"),\n                    content: _this.getContent(_this.indexTable, dataRowIndex, columnIndex)\n                };\n            }\n            else {\n                var dataRowIndex = rowIndex - _this.headerRows;\n                var dataColumnIndex = columnIndex - _this.headerColumns;\n                var classNames = [\n                    \"data\",\n                    \"row\" + dataRowIndex,\n                    \"col\" + dataColumnIndex\n                ];\n                var content = _this.styler\n                    ? _this.getContent(_this.styler.displayValuesTable, dataRowIndex, dataColumnIndex)\n                    : _this.getContent(_this.dataTable, dataRowIndex, dataColumnIndex);\n                return {\n                    type: \"data\",\n                    id: \"T_\" + _this.uuid + \"row\" + dataRowIndex + \"_col\" + dataColumnIndex,\n                    classNames: classNames.join(\" \"),\n                    content: content\n                };\n            }\n        };\n        this.getContent = function (table, rowIndex, columnIndex) {\n            var column = table.getColumnAt(columnIndex);\n            if (column === null) {\n                return \"\";\n            }\n            var columnTypeId = _this.getColumnTypeId(table, columnIndex);\n            switch (columnTypeId) {\n                case Type.Timestamp: {\n                    return _this.nanosToDate(column.get(rowIndex));\n                }\n                default: {\n                    return column.get(rowIndex);\n                }\n            }\n        };\n        this.dataTable = Table.from(dataBuffer);\n        this.indexTable = Table.from(indexBuffer);\n        this.columnsTable = Table.from(columnsBuffer);\n        this.styler = styler\n            ? {\n                caption: styler.caption,\n                displayValuesTable: Table.from(styler.displayValues),\n                styles: styler.styles,\n                uuid: styler.uuid\n            }\n            : undefined;\n    }\n    Object.defineProperty(ArrowTable.prototype, \"rows\", {\n        get: function () {\n            return this.indexTable.length + this.columnsTable.numCols;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ArrowTable.prototype, \"columns\", {\n        get: function () {\n            return this.indexTable.numCols + this.columnsTable.length;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ArrowTable.prototype, \"headerRows\", {\n        get: function () {\n            return this.rows - this.dataRows;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ArrowTable.prototype, \"headerColumns\", {\n        get: function () {\n            return this.columns - this.dataColumns;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ArrowTable.prototype, \"dataRows\", {\n        get: function () {\n            return this.dataTable.length;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ArrowTable.prototype, \"dataColumns\", {\n        get: function () {\n            return this.dataTable.numCols;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ArrowTable.prototype, \"uuid\", {\n        get: function () {\n            return this.styler && this.styler.uuid;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ArrowTable.prototype, \"caption\", {\n        get: function () {\n            return this.styler && this.styler.caption;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ArrowTable.prototype, \"styles\", {\n        get: function () {\n            return this.styler && this.styler.styles;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ArrowTable.prototype, \"table\", {\n        get: function () {\n            return this.dataTable;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ArrowTable.prototype, \"index\", {\n        get: function () {\n            return this.indexTable;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ArrowTable.prototype, \"columnTable\", {\n        get: function () {\n            return this.columnsTable;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Serialize arrow table.\n     */\n    ArrowTable.prototype.serialize = function () {\n        return {\n            data: this.dataTable.serialize(),\n            index: this.indexTable.serialize(),\n            columns: this.columnsTable.serialize()\n        };\n    };\n    /**\n     * Returns apache-arrow specific typeId of column.\n     */\n    ArrowTable.prototype.getColumnTypeId = function (table, columnIndex) {\n        return table.schema.fields[columnIndex].type.typeId;\n    };\n    ArrowTable.prototype.nanosToDate = function (nanos) {\n        return new Date(nanos / 1e6);\n    };\n    return ArrowTable;\n}());\nexport { ArrowTable };\n","/**\n * @license\n * Copyright 2018-2021 Streamlit Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\n// Safari doesn't support the EventTarget class, so we use a shim.\nimport { EventTarget } from \"event-target-shim\";\nimport { ArrowTable } from \"./ArrowTable\";\n/** Messages from Component -> Streamlit */\nvar ComponentMessageType;\n(function (ComponentMessageType) {\n    // A component sends this message when it's ready to receive messages\n    // from Streamlit. Streamlit won't send any messages until it gets this.\n    // Data: { apiVersion: number }\n    ComponentMessageType[\"COMPONENT_READY\"] = \"streamlit:componentReady\";\n    // The component has a new widget value. Send it back to Streamlit, which\n    // will then re-run the app.\n    // Data: { value: any }\n    ComponentMessageType[\"SET_COMPONENT_VALUE\"] = \"streamlit:setComponentValue\";\n    // The component has a new height for its iframe.\n    // Data: { height: number }\n    ComponentMessageType[\"SET_FRAME_HEIGHT\"] = \"streamlit:setFrameHeight\";\n})(ComponentMessageType || (ComponentMessageType = {}));\n/**\n * Streamlit communication API.\n *\n * Components can send data to Streamlit via the functions defined here,\n * and receive data from Streamlit via the `events` property.\n */\nvar Streamlit = /** @class */ (function () {\n    function Streamlit() {\n    }\n    /**\n     * The Streamlit component API version we're targetting.\n     * There's currently only 1!\n     */\n    Streamlit.API_VERSION = 1;\n    Streamlit.RENDER_EVENT = \"streamlit:render\";\n    /** Dispatches events received from Streamlit. */\n    Streamlit.events = new EventTarget();\n    Streamlit.registeredMessageListener = false;\n    /**\n     * Tell Streamlit that the component is ready to start receiving data.\n     * Streamlit will defer emitting RENDER events until it receives the\n     * COMPONENT_READY message.\n     */\n    Streamlit.setComponentReady = function () {\n        if (!Streamlit.registeredMessageListener) {\n            // Register for message events if we haven't already\n            window.addEventListener(\"message\", Streamlit.onMessageEvent);\n            Streamlit.registeredMessageListener = true;\n        }\n        Streamlit.sendBackMsg(ComponentMessageType.COMPONENT_READY, {\n            apiVersion: Streamlit.API_VERSION\n        });\n    };\n    /**\n     * Report the component's height to Streamlit.\n     * This should be called every time the component changes its DOM - that is,\n     * when it's first loaded, and any time it updates.\n     */\n    Streamlit.setFrameHeight = function (height) {\n        if (height === undefined) {\n            // `height` is optional. If undefined, it defaults to scrollHeight,\n            // which is the entire height of the element minus its border,\n            // scrollbar, and margin.\n            height = document.body.scrollHeight;\n        }\n        if (height === Streamlit.lastFrameHeight) {\n            // Don't bother updating if our height hasn't changed.\n            return;\n        }\n        Streamlit.lastFrameHeight = height;\n        Streamlit.sendBackMsg(ComponentMessageType.SET_FRAME_HEIGHT, { height: height });\n    };\n    /**\n     * Set the component's value. This value will be returned to the Python\n     * script, and the script will be re-run.\n     *\n     * For example:\n     *\n     * JavaScript:\n     * Streamlit.setComponentValue(\"ahoy!\")\n     *\n     * Python:\n     * value = st.my_component(...)\n     * st.write(value) # -> \"ahoy!\"\n     *\n     * The value must be an ArrowTable, a typed array, an ArrayBuffer, or be\n     * serializable to JSON.\n     */\n    Streamlit.setComponentValue = function (value) {\n        var dataType;\n        if (value instanceof ArrowTable) {\n            dataType = \"dataframe\";\n            value = value.serialize();\n        }\n        else if (isTypedArray(value)) {\n            // All typed arrays get sent as Uint8Array, because that's what our\n            // protobuf library uses for the \"bytes\" field type.\n            dataType = \"bytes\";\n            value = new Uint8Array(value.buffer);\n        }\n        else if (value instanceof ArrayBuffer) {\n            dataType = \"bytes\";\n            value = new Uint8Array(value);\n        }\n        else {\n            dataType = \"json\";\n        }\n        Streamlit.sendBackMsg(ComponentMessageType.SET_COMPONENT_VALUE, {\n            value: value,\n            dataType: dataType\n        });\n    };\n    /** Receive a ForwardMsg from the Streamlit app */\n    Streamlit.onMessageEvent = function (event) {\n        var type = event.data[\"type\"];\n        switch (type) {\n            case Streamlit.RENDER_EVENT:\n                Streamlit.onRenderMessage(event.data);\n                break;\n        }\n    };\n    /**\n     * Handle an untyped Streamlit render event and redispatch it as a\n     * StreamlitRenderEvent.\n     */\n    Streamlit.onRenderMessage = function (data) {\n        var args = data[\"args\"];\n        if (args == null) {\n            console.error(\"Got null args in onRenderMessage. This should never happen\");\n            args = {};\n        }\n        // Parse our dataframe arguments with arrow, and merge them into our args dict\n        var dataframeArgs = data[\"dfs\"] && data[\"dfs\"].length > 0\n            ? Streamlit.argsDataframeToObject(data[\"dfs\"])\n            : {};\n        args = __assign(__assign({}, args), dataframeArgs);\n        var disabled = Boolean(data[\"disabled\"]);\n        var theme = data[\"theme\"];\n        if (theme) {\n            _injectTheme(theme);\n        }\n        // Dispatch a render event!\n        var eventData = { disabled: disabled, args: args, theme: theme };\n        var event = new CustomEvent(Streamlit.RENDER_EVENT, {\n            detail: eventData\n        });\n        Streamlit.events.dispatchEvent(event);\n    };\n    Streamlit.argsDataframeToObject = function (argsDataframe) {\n        var argsDataframeArrow = argsDataframe.map(function (_a) {\n            var key = _a.key, value = _a.value;\n            return [key, Streamlit.toArrowTable(value)];\n        });\n        return Object.fromEntries(argsDataframeArrow);\n    };\n    Streamlit.toArrowTable = function (df) {\n        var _a = df.data, data = _a.data, index = _a.index, columns = _a.columns, styler = _a.styler;\n        return new ArrowTable(data, index, columns, styler);\n    };\n    /** Post a message to the Streamlit app. */\n    Streamlit.sendBackMsg = function (type, data) {\n        window.parent.postMessage(__assign({ isStreamlitMessage: true, type: type }, data), \"*\");\n    };\n    return Streamlit;\n}());\nexport { Streamlit };\nvar _injectTheme = function (theme) {\n    var style = document.createElement(\"style\");\n    document.head.appendChild(style);\n    style.innerHTML = \"\\n    :root {\\n      --primary-color: \" + theme.primaryColor + \";\\n      --background-color: \" + theme.backgroundColor + \";\\n      --secondary-background-color: \" + theme.secondaryBackgroundColor + \";\\n      --text-color: \" + theme.textColor + \";\\n      --font: \" + theme.font + \";\\n    }\\n\\n    body {\\n      background-color: var(--background-color);\\n      color: var(--text-color);\\n    }\\n  \";\n};\n/** True if the value is a TypedArray. */\nfunction isTypedArray(value) {\n    var isBigIntArray = false;\n    try {\n        isBigIntArray =\n            value instanceof BigInt64Array || value instanceof BigUint64Array;\n    }\n    catch (e) {\n        // Ignore cause Safari does not support this\n        // https://caniuse.com/mdn-javascript_builtins_bigint64array\n    }\n    return (value instanceof Int8Array ||\n        value instanceof Uint8Array ||\n        value instanceof Uint8ClampedArray ||\n        value instanceof Int16Array ||\n        value instanceof Uint16Array ||\n        value instanceof Int32Array ||\n        value instanceof Uint32Array ||\n        value instanceof Float32Array ||\n        value instanceof Float64Array ||\n        isBigIntArray);\n}\n","/**\n * @license\n * Copyright 2018-2021 Streamlit Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport hoistNonReactStatics from \"hoist-non-react-statics\";\nimport React from \"react\";\nimport { Streamlit } from \"./streamlit\";\n/**\n * Optional Streamlit React-based component base class.\n *\n * You are not required to extend this base class to create a Streamlit\n * component. If you decide not to extend it, you should implement the\n * `componentDidMount` and `componentDidUpdate` functions in your own class,\n * so that your plugin properly resizes.\n */\nvar StreamlitComponentBase = /** @class */ (function (_super) {\n    __extends(StreamlitComponentBase, _super);\n    function StreamlitComponentBase() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    StreamlitComponentBase.prototype.componentDidMount = function () {\n        // After we're rendered for the first time, tell Streamlit that our height\n        // has changed.\n        Streamlit.setFrameHeight();\n    };\n    StreamlitComponentBase.prototype.componentDidUpdate = function () {\n        // After we're updated, tell Streamlit that our height may have changed.\n        Streamlit.setFrameHeight();\n    };\n    return StreamlitComponentBase;\n}(React.PureComponent));\nexport { StreamlitComponentBase };\n/**\n * Wrapper for React-based Streamlit components.\n *\n * Bootstraps the communication interface between Streamlit and the component.\n */\nexport function withStreamlitConnection(WrappedComponent) {\n    var ComponentWrapper = /** @class */ (function (_super) {\n        __extends(ComponentWrapper, _super);\n        function ComponentWrapper(props) {\n            var _this = _super.call(this, props) || this;\n            _this.componentDidMount = function () {\n                // Set up event listeners, and signal to Streamlit that we're ready.\n                // We won't render the component until we receive the first RENDER_EVENT.\n                Streamlit.events.addEventListener(Streamlit.RENDER_EVENT, _this.onRenderEvent);\n                Streamlit.setComponentReady();\n            };\n            _this.componentDidUpdate = function () {\n                // If our child threw an error, we display it in render(). In this\n                // case, the child won't be mounted and therefore won't call\n                // `setFrameHeight` on its own. We do it here so that the rendered\n                // error will be visible.\n                if (_this.state.componentError != null) {\n                    Streamlit.setFrameHeight();\n                }\n            };\n            _this.componentWillUnmount = function () {\n                Streamlit.events.removeEventListener(Streamlit.RENDER_EVENT, _this.onRenderEvent);\n            };\n            /**\n             * Streamlit is telling this component to redraw.\n             * We save the render data in State, so that it can be passed to the\n             * component in our own render() function.\n             */\n            _this.onRenderEvent = function (event) {\n                // Update our state with the newest render data\n                var renderEvent = event;\n                _this.setState({ renderData: renderEvent.detail });\n            };\n            _this.render = function () {\n                // If our wrapped component threw an error, display it.\n                if (_this.state.componentError != null) {\n                    return (React.createElement(\"div\", null,\n                        React.createElement(\"h1\", null, \"Component Error\"),\n                        React.createElement(\"span\", null, _this.state.componentError.message)));\n                }\n                // Don't render until we've gotten our first RENDER_EVENT from Streamlit.\n                if (_this.state.renderData == null) {\n                    return null;\n                }\n                return (React.createElement(WrappedComponent, { width: window.innerWidth, disabled: _this.state.renderData.disabled, args: _this.state.renderData.args, theme: _this.state.renderData.theme }));\n            };\n            _this.state = {\n                renderData: undefined,\n                componentError: undefined\n            };\n            return _this;\n        }\n        /**\n         * Error boundary function. This will be called if our wrapped\n         * component throws an error. We store the caught error in our state,\n         * and display it in the next render().\n         */\n        ComponentWrapper.getDerivedStateFromError = function (error) {\n            return { componentError: error };\n        };\n        return ComponentWrapper;\n    }(React.PureComponent));\n    return hoistNonReactStatics(ComponentWrapper, WrappedComponent);\n}\n","'use strict';\n\nvar reactIs = require('react-is');\n\n/**\n * Copyright 2015, Yahoo! Inc.\n * Copyrights licensed under the New BSD License. See the accompanying LICENSE file for terms.\n */\nvar REACT_STATICS = {\n  childContextTypes: true,\n  contextType: true,\n  contextTypes: true,\n  defaultProps: true,\n  displayName: true,\n  getDefaultProps: true,\n  getDerivedStateFromError: true,\n  getDerivedStateFromProps: true,\n  mixins: true,\n  propTypes: true,\n  type: true\n};\nvar KNOWN_STATICS = {\n  name: true,\n  length: true,\n  prototype: true,\n  caller: true,\n  callee: true,\n  arguments: true,\n  arity: true\n};\nvar FORWARD_REF_STATICS = {\n  '$$typeof': true,\n  render: true,\n  defaultProps: true,\n  displayName: true,\n  propTypes: true\n};\nvar MEMO_STATICS = {\n  '$$typeof': true,\n  compare: true,\n  defaultProps: true,\n  displayName: true,\n  propTypes: true,\n  type: true\n};\nvar TYPE_STATICS = {};\nTYPE_STATICS[reactIs.ForwardRef] = FORWARD_REF_STATICS;\nTYPE_STATICS[reactIs.Memo] = MEMO_STATICS;\n\nfunction getStatics(component) {\n  // React v16.11 and below\n  if (reactIs.isMemo(component)) {\n    return MEMO_STATICS;\n  } // React v16.12 and above\n\n\n  return TYPE_STATICS[component['$$typeof']] || REACT_STATICS;\n}\n\nvar defineProperty = Object.defineProperty;\nvar getOwnPropertyNames = Object.getOwnPropertyNames;\nvar getOwnPropertySymbols = Object.getOwnPropertySymbols;\nvar getOwnPropertyDescriptor = Object.getOwnPropertyDescriptor;\nvar getPrototypeOf = Object.getPrototypeOf;\nvar objectPrototype = Object.prototype;\nfunction hoistNonReactStatics(targetComponent, sourceComponent, blacklist) {\n  if (typeof sourceComponent !== 'string') {\n    // don't hoist over string (html) components\n    if (objectPrototype) {\n      var inheritedComponent = getPrototypeOf(sourceComponent);\n\n      if (inheritedComponent && inheritedComponent !== objectPrototype) {\n        hoistNonReactStatics(targetComponent, inheritedComponent, blacklist);\n      }\n    }\n\n    var keys = getOwnPropertyNames(sourceComponent);\n\n    if (getOwnPropertySymbols) {\n      keys = keys.concat(getOwnPropertySymbols(sourceComponent));\n    }\n\n    var targetStatics = getStatics(targetComponent);\n    var sourceStatics = getStatics(sourceComponent);\n\n    for (var i = 0; i < keys.length; ++i) {\n      var key = keys[i];\n\n      if (!KNOWN_STATICS[key] && !(blacklist && blacklist[key]) && !(sourceStatics && sourceStatics[key]) && !(targetStatics && targetStatics[key])) {\n        var descriptor = getOwnPropertyDescriptor(sourceComponent, key);\n\n        try {\n          // Avoid failures from read-only properties\n          defineProperty(targetComponent, key, descriptor);\n        } catch (e) {}\n      }\n    }\n  }\n\n  return targetComponent;\n}\n\nmodule.exports = hoistNonReactStatics;\n","// Some functions take a variable number of arguments, or a few expected\n// arguments at the beginning and then a variable number of values to operate\n// on. This helper accumulates all remaining arguments past the function’s\n// argument length (or an explicit `startIndex`), into an array that becomes\n// the last argument. Similar to ES6’s \"rest parameter\".\nexport default function restArguments(func, startIndex) {\n  startIndex = startIndex == null ? func.length - 1 : +startIndex;\n  return function() {\n    var length = Math.max(arguments.length - startIndex, 0),\n        rest = Array(length),\n        index = 0;\n    for (; index < length; index++) {\n      rest[index] = arguments[index + startIndex];\n    }\n    switch (startIndex) {\n      case 0: return func.call(this, rest);\n      case 1: return func.call(this, arguments[0], rest);\n      case 2: return func.call(this, arguments[0], arguments[1], rest);\n    }\n    var args = Array(startIndex + 1);\n    for (index = 0; index < startIndex; index++) {\n      args[index] = arguments[index];\n    }\n    args[startIndex] = rest;\n    return func.apply(this, args);\n  };\n}\n","// Is a given variable an object?\nexport default function isObject(obj) {\n  var type = typeof obj;\n  return type === 'function' || (type === 'object' && !!obj);\n}\n","// Is a given value equal to null?\nexport default function isNull(obj) {\n  return obj === null;\n}\n","// Is a given variable undefined?\nexport default function isUndefined(obj) {\n  return obj === void 0;\n}\n","import { toString } from './_setup.js';\n\n// Is a given value a boolean?\nexport default function isBoolean(obj) {\n  return obj === true || obj === false || toString.call(obj) === '[object Boolean]';\n}\n","// Is a given value a DOM element?\nexport default function isElement(obj) {\n  return !!(obj && obj.nodeType === 1);\n}\n","import { toString } from './_setup.js';\n\n// Internal function for creating a `toString`-based type tester.\nexport default function tagTester(name) {\n  var tag = '[object ' + name + ']';\n  return function(obj) {\n    return toString.call(obj) === tag;\n  };\n}\n","import tagTester from './_tagTester.js';\n\nexport default tagTester('String');\n","import tagTester from './_tagTester.js';\n\nexport default tagTester('Number');\n","import tagTester from './_tagTester.js';\n\nexport default tagTester('Date');\n","import tagTester from './_tagTester.js';\n\nexport default tagTester('RegExp');\n","import tagTester from './_tagTester.js';\n\nexport default tagTester('Error');\n","import tagTester from './_tagTester.js';\n\nexport default tagTester('Symbol');\n","import tagTester from './_tagTester.js';\n\nexport default tagTester('ArrayBuffer');\n","import tagTester from './_tagTester.js';\nimport { root } from './_setup.js';\n\nvar isFunction = tagTester('Function');\n\n// Optimize `isFunction` if appropriate. Work around some `typeof` bugs in old\n// v8, IE 11 (#1621), Safari 8 (#1929), and PhantomJS (#2236).\nvar nodelist = root.document && root.document.childNodes;\nif (typeof /./ != 'function' && typeof Int8Array != 'object' && typeof nodelist != 'function') {\n  isFunction = function(obj) {\n    return typeof obj == 'function' || false;\n  };\n}\n\nexport default isFunction;\n","import tagTester from './_tagTester.js';\n\nexport default tagTester('Object');\n","import { supportsDataView } from './_setup.js';\nimport hasObjectTag from './_hasObjectTag.js';\n\n// In IE 10 - Edge 13, `DataView` has string tag `'[object Object]'`.\n// In IE 11, the most common among them, this problem also applies to\n// `Map`, `WeakMap` and `Set`.\nexport var hasStringTagBug = (\n      supportsDataView && hasObjectTag(new DataView(new ArrayBuffer(8)))\n    ),\n    isIE11 = (typeof Map !== 'undefined' && hasObjectTag(new Map));\n","import tagTester from './_tagTester.js';\nimport isFunction from './isFunction.js';\nimport isArrayBuffer from './isArrayBuffer.js';\nimport { hasStringTagBug } from './_stringTagBug.js';\n\nvar isDataView = tagTester('DataView');\n\n// In IE 10 - Edge 13, we need a different heuristic\n// to determine whether an object is a `DataView`.\nfunction ie10IsDataView(obj) {\n  return obj != null && isFunction(obj.getInt8) && isArrayBuffer(obj.buffer);\n}\n\nexport default (hasStringTagBug ? ie10IsDataView : isDataView);\n","import { nativeIsArray } from './_setup.js';\nimport tagTester from './_tagTester.js';\n\n// Is a given value an array?\n// Delegates to ECMA5's native `Array.isArray`.\nexport default nativeIsArray || tagTester('Array');\n","import { hasOwnProperty } from './_setup.js';\n\n// Internal function to check whether `key` is an own property name of `obj`.\nexport default function has(obj, key) {\n  return obj != null && hasOwnProperty.call(obj, key);\n}\n","import tagTester from './_tagTester.js';\nimport has from './_has.js';\n\nvar isArguments = tagTester('Arguments');\n\n// Define a fallback version of the method in browsers (ahem, IE < 9), where\n// there isn't any inspectable \"Arguments\" type.\n(function() {\n  if (!isArguments(arguments)) {\n    isArguments = function(obj) {\n      return has(obj, 'callee');\n    };\n  }\n}());\n\nexport default isArguments;\n","import { _isFinite } from './_setup.js';\nimport isSymbol from './isSymbol.js';\n\n// Is a given object a finite number?\nexport default function isFinite(obj) {\n  return !isSymbol(obj) && _isFinite(obj) && !isNaN(parseFloat(obj));\n}\n","import { _isNaN } from './_setup.js';\nimport isNumber from './isNumber.js';\n\n// Is the given value `NaN`?\nexport default function isNaN(obj) {\n  return isNumber(obj) && _isNaN(obj);\n}\n","// Predicate-generating function. Often useful outside of Underscore.\nexport default function constant(value) {\n  return function() {\n    return value;\n  };\n}\n","import { MAX_ARRAY_INDEX } from './_setup.js';\n\n// Common internal logic for `isArrayLike` and `isBufferLike`.\nexport default function createSizePropertyCheck(getSizeProperty) {\n  return function(collection) {\n    var sizeProperty = getSizeProperty(collection);\n    return typeof sizeProperty == 'number' && sizeProperty >= 0 && sizeProperty <= MAX_ARRAY_INDEX;\n  }\n}\n","// Internal helper to generate a function to obtain property `key` from `obj`.\nexport default function shallowProperty(key) {\n  return function(obj) {\n    return obj == null ? void 0 : obj[key];\n  };\n}\n","import shallowProperty from './_shallowProperty.js';\n\n// Internal helper to obtain the `byteLength` property of an object.\nexport default shallowProperty('byteLength');\n","import createSizePropertyCheck from './_createSizePropertyCheck.js';\nimport getByteLength from './_getByteLength.js';\n\n// Internal helper to determine whether we should spend extensive checks against\n// `ArrayBuffer` et al.\nexport default createSizePropertyCheck(getByteLength);\n","import { supportsArrayBuffer, nativeIsView, toString } from './_setup.js';\nimport isDataView from './isDataView.js';\nimport constant from './constant.js';\nimport isBufferLike from './_isBufferLike.js';\n\n// Is a given value a typed array?\nvar typedArrayPattern = /\\[object ((I|Ui)nt(8|16|32)|Float(32|64)|Uint8Clamped|Big(I|Ui)nt64)Array\\]/;\nfunction isTypedArray(obj) {\n  // `ArrayBuffer.isView` is the most future-proof, so use it when available.\n  // Otherwise, fall back on the above regular expression.\n  return nativeIsView ? (nativeIsView(obj) && !isDataView(obj)) :\n                isBufferLike(obj) && typedArrayPattern.test(toString.call(obj));\n}\n\nexport default supportsArrayBuffer ? isTypedArray : constant(false);\n","import shallowProperty from './_shallowProperty.js';\n\n// Internal helper to obtain the `length` property of an object.\nexport default shallowProperty('length');\n","import { nonEnumerableProps, ObjProto } from './_setup.js';\nimport isFunction from './isFunction.js';\nimport has from './_has.js';\n\n// Internal helper to create a simple lookup structure.\n// `collectNonEnumProps` used to depend on `_.contains`, but this led to\n// circular imports. `emulatedSet` is a one-off solution that only works for\n// arrays of strings.\nfunction emulatedSet(keys) {\n  var hash = {};\n  for (var l = keys.length, i = 0; i < l; ++i) hash[keys[i]] = true;\n  return {\n    contains: function(key) { return hash[key] === true; },\n    push: function(key) {\n      hash[key] = true;\n      return keys.push(key);\n    }\n  };\n}\n\n// Internal helper. Checks `keys` for the presence of keys in IE < 9 that won't\n// be iterated by `for key in ...` and thus missed. Extends `keys` in place if\n// needed.\nexport default function collectNonEnumProps(obj, keys) {\n  keys = emulatedSet(keys);\n  var nonEnumIdx = nonEnumerableProps.length;\n  var constructor = obj.constructor;\n  var proto = (isFunction(constructor) && constructor.prototype) || ObjProto;\n\n  // Constructor is a special case.\n  var prop = 'constructor';\n  if (has(obj, prop) && !keys.contains(prop)) keys.push(prop);\n\n  while (nonEnumIdx--) {\n    prop = nonEnumerableProps[nonEnumIdx];\n    if (prop in obj && obj[prop] !== proto[prop] && !keys.contains(prop)) {\n      keys.push(prop);\n    }\n  }\n}\n","import isObject from './isObject.js';\nimport { nativeKeys, hasEnumBug } from './_setup.js';\nimport has from './_has.js';\nimport collectNonEnumProps from './_collectNonEnumProps.js';\n\n// Retrieve the names of an object's own properties.\n// Delegates to **ECMAScript 5**'s native `Object.keys`.\nexport default function keys(obj) {\n  if (!isObject(obj)) return [];\n  if (nativeKeys) return nativeKeys(obj);\n  var keys = [];\n  for (var key in obj) if (has(obj, key)) keys.push(key);\n  // Ahem, IE < 9.\n  if (hasEnumBug) collectNonEnumProps(obj, keys);\n  return keys;\n}\n","import getLength from './_getLength.js';\nimport isArray from './isArray.js';\nimport isString from './isString.js';\nimport isArguments from './isArguments.js';\nimport keys from './keys.js';\n\n// Is a given array, string, or object empty?\n// An \"empty\" object has no enumerable own-properties.\nexport default function isEmpty(obj) {\n  if (obj == null) return true;\n  // Skip the more expensive `toString`-based type checks if `obj` has no\n  // `.length`.\n  var length = getLength(obj);\n  if (typeof length == 'number' && (\n    isArray(obj) || isString(obj) || isArguments(obj)\n  )) return length === 0;\n  return getLength(keys(obj)) === 0;\n}\n","import keys from './keys.js';\n\n// Returns whether an object has a given set of `key:value` pairs.\nexport default function isMatch(object, attrs) {\n  var _keys = keys(attrs), length = _keys.length;\n  if (object == null) return !length;\n  var obj = Object(object);\n  for (var i = 0; i < length; i++) {\n    var key = _keys[i];\n    if (attrs[key] !== obj[key] || !(key in obj)) return false;\n  }\n  return true;\n}\n","import { VERSION } from './_setup.js';\n\n// If Underscore is called as a function, it returns a wrapped object that can\n// be used OO-style. This wrapper holds altered versions of all functions added\n// through `_.mixin`. Wrapped objects may be chained.\nexport default function _(obj) {\n  if (obj instanceof _) return obj;\n  if (!(this instanceof _)) return new _(obj);\n  this._wrapped = obj;\n}\n\n_.VERSION = VERSION;\n\n// Extracts the result from a wrapped and chained object.\n_.prototype.value = function() {\n  return this._wrapped;\n};\n\n// Provide unwrapping proxies for some methods used in engine operations\n// such as arithmetic and JSON stringification.\n_.prototype.valueOf = _.prototype.toJSON = _.prototype.value;\n\n_.prototype.toString = function() {\n  return String(this._wrapped);\n};\n","import getByteLength from './_getByteLength.js';\n\n// Internal function to wrap or shallow-copy an ArrayBuffer,\n// typed array or DataView to a new view, reusing the buffer.\nexport default function toBufferView(bufferSource) {\n  return new Uint8Array(\n    bufferSource.buffer || bufferSource,\n    bufferSource.byteOffset || 0,\n    getByteLength(bufferSource)\n  );\n}\n","import _ from './underscore.js';\nimport { toString, SymbolProto } from './_setup.js';\nimport getByteLength from './_getByteLength.js';\nimport isTypedArray from './isTypedArray.js';\nimport isFunction from './isFunction.js';\nimport { hasStringTagBug }  from './_stringTagBug.js';\nimport isDataView from './isDataView.js';\nimport keys from './keys.js';\nimport has from './_has.js';\nimport toBufferView from './_toBufferView.js';\n\n// We use this string twice, so give it a name for minification.\nvar tagDataView = '[object DataView]';\n\n// Internal recursive comparison function for `_.isEqual`.\nfunction eq(a, b, aStack, bStack) {\n  // Identical objects are equal. `0 === -0`, but they aren't identical.\n  // See the [Harmony `egal` proposal](https://wiki.ecmascript.org/doku.php?id=harmony:egal).\n  if (a === b) return a !== 0 || 1 / a === 1 / b;\n  // `null` or `undefined` only equal to itself (strict comparison).\n  if (a == null || b == null) return false;\n  // `NaN`s are equivalent, but non-reflexive.\n  if (a !== a) return b !== b;\n  // Exhaust primitive checks\n  var type = typeof a;\n  if (type !== 'function' && type !== 'object' && typeof b != 'object') return false;\n  return deepEq(a, b, aStack, bStack);\n}\n\n// Internal recursive comparison function for `_.isEqual`.\nfunction deepEq(a, b, aStack, bStack) {\n  // Unwrap any wrapped objects.\n  if (a instanceof _) a = a._wrapped;\n  if (b instanceof _) b = b._wrapped;\n  // Compare `[[Class]]` names.\n  var className = toString.call(a);\n  if (className !== toString.call(b)) return false;\n  // Work around a bug in IE 10 - Edge 13.\n  if (hasStringTagBug && className == '[object Object]' && isDataView(a)) {\n    if (!isDataView(b)) return false;\n    className = tagDataView;\n  }\n  switch (className) {\n    // These types are compared by value.\n    case '[object RegExp]':\n      // RegExps are coerced to strings for comparison (Note: '' + /a/i === '/a/i')\n    case '[object String]':\n      // Primitives and their corresponding object wrappers are equivalent; thus, `\"5\"` is\n      // equivalent to `new String(\"5\")`.\n      return '' + a === '' + b;\n    case '[object Number]':\n      // `NaN`s are equivalent, but non-reflexive.\n      // Object(NaN) is equivalent to NaN.\n      if (+a !== +a) return +b !== +b;\n      // An `egal` comparison is performed for other numeric values.\n      return +a === 0 ? 1 / +a === 1 / b : +a === +b;\n    case '[object Date]':\n    case '[object Boolean]':\n      // Coerce dates and booleans to numeric primitive values. Dates are compared by their\n      // millisecond representations. Note that invalid dates with millisecond representations\n      // of `NaN` are not equivalent.\n      return +a === +b;\n    case '[object Symbol]':\n      return SymbolProto.valueOf.call(a) === SymbolProto.valueOf.call(b);\n    case '[object ArrayBuffer]':\n    case tagDataView:\n      // Coerce to typed array so we can fall through.\n      return deepEq(toBufferView(a), toBufferView(b), aStack, bStack);\n  }\n\n  var areArrays = className === '[object Array]';\n  if (!areArrays && isTypedArray(a)) {\n      var byteLength = getByteLength(a);\n      if (byteLength !== getByteLength(b)) return false;\n      if (a.buffer === b.buffer && a.byteOffset === b.byteOffset) return true;\n      areArrays = true;\n  }\n  if (!areArrays) {\n    if (typeof a != 'object' || typeof b != 'object') return false;\n\n    // Objects with different constructors are not equivalent, but `Object`s or `Array`s\n    // from different frames are.\n    var aCtor = a.constructor, bCtor = b.constructor;\n    if (aCtor !== bCtor && !(isFunction(aCtor) && aCtor instanceof aCtor &&\n                             isFunction(bCtor) && bCtor instanceof bCtor)\n                        && ('constructor' in a && 'constructor' in b)) {\n      return false;\n    }\n  }\n  // Assume equality for cyclic structures. The algorithm for detecting cyclic\n  // structures is adapted from ES 5.1 section 15.12.3, abstract operation `JO`.\n\n  // Initializing stack of traversed objects.\n  // It's done here since we only need them for objects and arrays comparison.\n  aStack = aStack || [];\n  bStack = bStack || [];\n  var length = aStack.length;\n  while (length--) {\n    // Linear search. Performance is inversely proportional to the number of\n    // unique nested structures.\n    if (aStack[length] === a) return bStack[length] === b;\n  }\n\n  // Add the first object to the stack of traversed objects.\n  aStack.push(a);\n  bStack.push(b);\n\n  // Recursively compare objects and arrays.\n  if (areArrays) {\n    // Compare array lengths to determine if a deep comparison is necessary.\n    length = a.length;\n    if (length !== b.length) return false;\n    // Deep compare the contents, ignoring non-numeric properties.\n    while (length--) {\n      if (!eq(a[length], b[length], aStack, bStack)) return false;\n    }\n  } else {\n    // Deep compare objects.\n    var _keys = keys(a), key;\n    length = _keys.length;\n    // Ensure that both objects contain the same number of properties before comparing deep equality.\n    if (keys(b).length !== length) return false;\n    while (length--) {\n      // Deep compare each member\n      key = _keys[length];\n      if (!(has(b, key) && eq(a[key], b[key], aStack, bStack))) return false;\n    }\n  }\n  // Remove the first object from the stack of traversed objects.\n  aStack.pop();\n  bStack.pop();\n  return true;\n}\n\n// Perform a deep comparison to check if two objects are equal.\nexport default function isEqual(a, b) {\n  return eq(a, b);\n}\n","import isObject from './isObject.js';\nimport { hasEnumBug } from './_setup.js';\nimport collectNonEnumProps from './_collectNonEnumProps.js';\n\n// Retrieve all the enumerable property names of an object.\nexport default function allKeys(obj) {\n  if (!isObject(obj)) return [];\n  var keys = [];\n  for (var key in obj) keys.push(key);\n  // Ahem, IE < 9.\n  if (hasEnumBug) collectNonEnumProps(obj, keys);\n  return keys;\n}\n","import getLength from './_getLength.js';\nimport isFunction from './isFunction.js';\nimport allKeys from './allKeys.js';\n\n// Since the regular `Object.prototype.toString` type tests don't work for\n// some types in IE 11, we use a fingerprinting heuristic instead, based\n// on the methods. It's not great, but it's the best we got.\n// The fingerprint method lists are defined below.\nexport function ie11fingerprint(methods) {\n  var length = getLength(methods);\n  return function(obj) {\n    if (obj == null) return false;\n    // `Map`, `WeakMap` and `Set` have no enumerable keys.\n    var keys = allKeys(obj);\n    if (getLength(keys)) return false;\n    for (var i = 0; i < length; i++) {\n      if (!isFunction(obj[methods[i]])) return false;\n    }\n    // If we are testing against `WeakMap`, we need to ensure that\n    // `obj` doesn't have a `forEach` method in order to distinguish\n    // it from a regular `Map`.\n    return methods !== weakMapMethods || !isFunction(obj[forEachName]);\n  };\n}\n\n// In the interest of compact minification, we write\n// each string in the fingerprints only once.\nvar forEachName = 'forEach',\n    hasName = 'has',\n    commonInit = ['clear', 'delete'],\n    mapTail = ['get', hasName, 'set'];\n\n// `Map`, `WeakMap` and `Set` each have slightly different\n// combinations of the above sublists.\nexport var mapMethods = commonInit.concat(forEachName, mapTail),\n    weakMapMethods = commonInit.concat(mapTail),\n    setMethods = ['add'].concat(commonInit, forEachName, hasName);\n","import tagTester from './_tagTester.js';\nimport { isIE11 } from './_stringTagBug.js';\nimport { ie11fingerprint, mapMethods }  from './_methodFingerprint.js';\n\nexport default isIE11 ? ie11fingerprint(mapMethods) : tagTester('Map');\n","import tagTester from './_tagTester.js';\nimport { isIE11 } from './_stringTagBug.js';\nimport { ie11fingerprint, weakMapMethods }  from './_methodFingerprint.js';\n\nexport default isIE11 ? ie11fingerprint(weakMapMethods) : tagTester('WeakMap');\n","import tagTester from './_tagTester.js';\nimport { isIE11 } from './_stringTagBug.js';\nimport { ie11fingerprint, setMethods }  from './_methodFingerprint.js';\n\nexport default isIE11 ? ie11fingerprint(setMethods) : tagTester('Set');\n","import tagTester from './_tagTester.js';\n\nexport default tagTester('WeakSet');\n","import keys from './keys.js';\n\n// Retrieve the values of an object's properties.\nexport default function values(obj) {\n  var _keys = keys(obj);\n  var length = _keys.length;\n  var values = Array(length);\n  for (var i = 0; i < length; i++) {\n    values[i] = obj[_keys[i]];\n  }\n  return values;\n}\n","import keys from './keys.js';\n\n// Convert an object into a list of `[key, value]` pairs.\n// The opposite of `_.object` with one argument.\nexport default function pairs(obj) {\n  var _keys = keys(obj);\n  var length = _keys.length;\n  var pairs = Array(length);\n  for (var i = 0; i < length; i++) {\n    pairs[i] = [_keys[i], obj[_keys[i]]];\n  }\n  return pairs;\n}\n","import keys from './keys.js';\n\n// Invert the keys and values of an object. The values must be serializable.\nexport default function invert(obj) {\n  var result = {};\n  var _keys = keys(obj);\n  for (var i = 0, length = _keys.length; i < length; i++) {\n    result[obj[_keys[i]]] = _keys[i];\n  }\n  return result;\n}\n","import isFunction from './isFunction.js';\n\n// Return a sorted list of the function names available on the object.\nexport default function functions(obj) {\n  var names = [];\n  for (var key in obj) {\n    if (isFunction(obj[key])) names.push(key);\n  }\n  return names.sort();\n}\n","// An internal function for creating assigner functions.\nexport default function createAssigner(keysFunc, defaults) {\n  return function(obj) {\n    var length = arguments.length;\n    if (defaults) obj = Object(obj);\n    if (length < 2 || obj == null) return obj;\n    for (var index = 1; index < length; index++) {\n      var source = arguments[index],\n          keys = keysFunc(source),\n          l = keys.length;\n      for (var i = 0; i < l; i++) {\n        var key = keys[i];\n        if (!defaults || obj[key] === void 0) obj[key] = source[key];\n      }\n    }\n    return obj;\n  };\n}\n","import createAssigner from './_createAssigner.js';\nimport allKeys from './allKeys.js';\n\n// Extend a given object with all the properties in passed-in object(s).\nexport default createAssigner(allKeys);\n","import createAssigner from './_createAssigner.js';\nimport keys from './keys.js';\n\n// Assigns a given object with all the own properties in the passed-in\n// object(s).\n// (https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Object/assign)\nexport default createAssigner(keys);\n","import createAssigner from './_createAssigner.js';\nimport allKeys from './allKeys.js';\n\n// Fill in a given object with default properties.\nexport default createAssigner(allKeys, true);\n","import isObject from './isObject.js';\nimport { nativeCreate } from './_setup.js';\n\n// Create a naked function reference for surrogate-prototype-swapping.\nfunction ctor() {\n  return function(){};\n}\n\n// An internal function for creating a new object that inherits from another.\nexport default function baseCreate(prototype) {\n  if (!isObject(prototype)) return {};\n  if (nativeCreate) return nativeCreate(prototype);\n  var Ctor = ctor();\n  Ctor.prototype = prototype;\n  var result = new Ctor;\n  Ctor.prototype = null;\n  return result;\n}\n","import baseCreate from './_baseCreate.js';\nimport extendOwn from './extendOwn.js';\n\n// Creates an object that inherits from the given prototype object.\n// If additional properties are provided then they will be added to the\n// created object.\nexport default function create(prototype, props) {\n  var result = baseCreate(prototype);\n  if (props) extendOwn(result, props);\n  return result;\n}\n","import isObject from './isObject.js';\nimport isArray from './isArray.js';\nimport extend from './extend.js';\n\n// Create a (shallow-cloned) duplicate of an object.\nexport default function clone(obj) {\n  if (!isObject(obj)) return obj;\n  return isArray(obj) ? obj.slice() : extend({}, obj);\n}\n","// Invokes `interceptor` with the `obj` and then returns `obj`.\n// The primary purpose of this method is to \"tap into\" a method chain, in\n// order to perform operations on intermediate results within the chain.\nexport default function tap(obj, interceptor) {\n  interceptor(obj);\n  return obj;\n}\n","import _ from './underscore.js';\nimport isArray from './isArray.js';\n\n// Normalize a (deep) property `path` to array.\n// Like `_.iteratee`, this function can be customized.\nexport default function toPath(path) {\n  return isArray(path) ? path : [path];\n}\n_.toPath = toPath;\n","import _ from './underscore.js';\nimport './toPath.js';\n\n// Internal wrapper for `_.toPath` to enable minification.\n// Similar to `cb` for `_.iteratee`.\nexport default function toPath(path) {\n  return _.toPath(path);\n}\n","// Internal function to obtain a nested property in `obj` along `path`.\nexport default function deepGet(obj, path) {\n  var length = path.length;\n  for (var i = 0; i < length; i++) {\n    if (obj == null) return void 0;\n    obj = obj[path[i]];\n  }\n  return length ? obj : void 0;\n}\n","import toPath from './_toPath.js';\nimport deepGet from './_deepGet.js';\nimport isUndefined from './isUndefined.js';\n\n// Get the value of the (deep) property on `path` from `object`.\n// If any property in `path` does not exist or if the value is\n// `undefined`, return `defaultValue` instead.\n// The `path` is normalized through `_.toPath`.\nexport default function get(object, path, defaultValue) {\n  var value = deepGet(object, toPath(path));\n  return isUndefined(value) ? defaultValue : value;\n}\n","import _has from './_has.js';\nimport toPath from './_toPath.js';\n\n// Shortcut function for checking if an object has a given property directly on\n// itself (in other words, not on a prototype). Unlike the internal `has`\n// function, this public version can also traverse nested properties.\nexport default function has(obj, path) {\n  path = toPath(path);\n  var length = path.length;\n  for (var i = 0; i < length; i++) {\n    var key = path[i];\n    if (!_has(obj, key)) return false;\n    obj = obj[key];\n  }\n  return !!length;\n}\n","// Keep the identity function around for default iteratees.\nexport default function identity(value) {\n  return value;\n}\n","import extendOwn from './extendOwn.js';\nimport isMatch from './isMatch.js';\n\n// Returns a predicate for checking whether an object has a given set of\n// `key:value` pairs.\nexport default function matcher(attrs) {\n  attrs = extendOwn({}, attrs);\n  return function(obj) {\n    return isMatch(obj, attrs);\n  };\n}\n","import deepGet from './_deepGet.js';\nimport toPath from './_toPath.js';\n\n// Creates a function that, when passed an object, will traverse that object’s\n// properties down the given `path`, specified as an array of keys or indices.\nexport default function property(path) {\n  path = toPath(path);\n  return function(obj) {\n    return deepGet(obj, path);\n  };\n}\n","// Internal function that returns an efficient (for current engines) version\n// of the passed-in callback, to be repeatedly applied in other Underscore\n// functions.\nexport default function optimizeCb(func, context, argCount) {\n  if (context === void 0) return func;\n  switch (argCount == null ? 3 : argCount) {\n    case 1: return function(value) {\n      return func.call(context, value);\n    };\n    // The 2-argument case is omitted because we’re not using it.\n    case 3: return function(value, index, collection) {\n      return func.call(context, value, index, collection);\n    };\n    case 4: return function(accumulator, value, index, collection) {\n      return func.call(context, accumulator, value, index, collection);\n    };\n  }\n  return function() {\n    return func.apply(context, arguments);\n  };\n}\n","import identity from './identity.js';\nimport isFunction from './isFunction.js';\nimport isObject from './isObject.js';\nimport isArray from './isArray.js';\nimport matcher from './matcher.js';\nimport property from './property.js';\nimport optimizeCb from './_optimizeCb.js';\n\n// An internal function to generate callbacks that can be applied to each\n// element in a collection, returning the desired result — either `_.identity`,\n// an arbitrary callback, a property matcher, or a property accessor.\nexport default function baseIteratee(value, context, argCount) {\n  if (value == null) return identity;\n  if (isFunction(value)) return optimizeCb(value, context, argCount);\n  if (isObject(value) && !isArray(value)) return matcher(value);\n  return property(value);\n}\n","import _ from './underscore.js';\nimport baseIteratee from './_baseIteratee.js';\n\n// External wrapper for our callback generator. Users may customize\n// `_.iteratee` if they want additional predicate/iteratee shorthand styles.\n// This abstraction hides the internal-only `argCount` argument.\nexport default function iteratee(value, context) {\n  return baseIteratee(value, context, Infinity);\n}\n_.iteratee = iteratee;\n","import _ from './underscore.js';\nimport baseIteratee from './_baseIteratee.js';\nimport iteratee from './iteratee.js';\n\n// The function we call internally to generate a callback. It invokes\n// `_.iteratee` if overridden, otherwise `baseIteratee`.\nexport default function cb(value, context, argCount) {\n  if (_.iteratee !== iteratee) return _.iteratee(value, context);\n  return baseIteratee(value, context, argCount);\n}\n","import cb from './_cb.js';\nimport keys from './keys.js';\n\n// Returns the results of applying the `iteratee` to each element of `obj`.\n// In contrast to `_.map` it returns an object.\nexport default function mapObject(obj, iteratee, context) {\n  iteratee = cb(iteratee, context);\n  var _keys = keys(obj),\n      length = _keys.length,\n      results = {};\n  for (var index = 0; index < length; index++) {\n    var currentKey = _keys[index];\n    results[currentKey] = iteratee(obj[currentKey], currentKey, obj);\n  }\n  return results;\n}\n","// Predicate-generating function. Often useful outside of Underscore.\nexport default function noop(){}\n","import noop from './noop.js';\nimport get from './get.js';\n\n// Generates a function for a given object that returns a given property.\nexport default function propertyOf(obj) {\n  if (obj == null) return noop;\n  return function(path) {\n    return get(obj, path);\n  };\n}\n","import optimizeCb from './_optimizeCb.js';\n\n// Run a function **n** times.\nexport default function times(n, iteratee, context) {\n  var accum = Array(Math.max(0, n));\n  iteratee = optimizeCb(iteratee, context, 1);\n  for (var i = 0; i < n; i++) accum[i] = iteratee(i);\n  return accum;\n}\n","// Return a random integer between `min` and `max` (inclusive).\nexport default function random(min, max) {\n  if (max == null) {\n    max = min;\n    min = 0;\n  }\n  return min + Math.floor(Math.random() * (max - min + 1));\n}\n","// A (possibly faster) way to get the current timestamp as an integer.\nexport default Date.now || function() {\n  return new Date().getTime();\n};\n","import keys from './keys.js';\n\n// Internal helper to generate functions for escaping and unescaping strings\n// to/from HTML interpolation.\nexport default function createEscaper(map) {\n  var escaper = function(match) {\n    return map[match];\n  };\n  // Regexes for identifying a key that needs to be escaped.\n  var source = '(?:' + keys(map).join('|') + ')';\n  var testRegexp = RegExp(source);\n  var replaceRegexp = RegExp(source, 'g');\n  return function(string) {\n    string = string == null ? '' : '' + string;\n    return testRegexp.test(string) ? string.replace(replaceRegexp, escaper) : string;\n  };\n}\n","// Internal list of HTML entities for escaping.\nexport default {\n  '&': '&amp;',\n  '<': '&lt;',\n  '>': '&gt;',\n  '\"': '&quot;',\n  \"'\": '&#x27;',\n  '`': '&#x60;'\n};\n","import createEscaper from './_createEscaper.js';\nimport escapeMap from './_escapeMap.js';\n\n// Function for escaping strings to HTML interpolation.\nexport default createEscaper(escapeMap);\n","import createEscaper from './_createEscaper.js';\nimport unescapeMap from './_unescapeMap.js';\n\n// Function for unescaping strings from HTML interpolation.\nexport default createEscaper(unescapeMap);\n","import invert from './invert.js';\nimport escapeMap from './_escapeMap.js';\n\n// Internal list of HTML entities for unescaping.\nexport default invert(escapeMap);\n","import _ from './underscore.js';\n\n// By default, Underscore uses ERB-style template delimiters. Change the\n// following template settings to use alternative delimiters.\nexport default _.templateSettings = {\n  evaluate: /<%([\\s\\S]+?)%>/g,\n  interpolate: /<%=([\\s\\S]+?)%>/g,\n  escape: /<%-([\\s\\S]+?)%>/g\n};\n","import defaults from './defaults.js';\nimport _ from './underscore.js';\nimport './templateSettings.js';\n\n// When customizing `_.templateSettings`, if you don't want to define an\n// interpolation, evaluation or escaping regex, we need one that is\n// guaranteed not to match.\nvar noMatch = /(.)^/;\n\n// Certain characters need to be escaped so that they can be put into a\n// string literal.\nvar escapes = {\n  \"'\": \"'\",\n  '\\\\': '\\\\',\n  '\\r': 'r',\n  '\\n': 'n',\n  '\\u2028': 'u2028',\n  '\\u2029': 'u2029'\n};\n\nvar escapeRegExp = /\\\\|'|\\r|\\n|\\u2028|\\u2029/g;\n\nfunction escapeChar(match) {\n  return '\\\\' + escapes[match];\n}\n\n// In order to prevent third-party code injection through\n// `_.templateSettings.variable`, we test it against the following regular\n// expression. It is intentionally a bit more liberal than just matching valid\n// identifiers, but still prevents possible loopholes through defaults or\n// destructuring assignment.\nvar bareIdentifier = /^\\s*(\\w|\\$)+\\s*$/;\n\n// JavaScript micro-templating, similar to John Resig's implementation.\n// Underscore templating handles arbitrary delimiters, preserves whitespace,\n// and correctly escapes quotes within interpolated code.\n// NB: `oldSettings` only exists for backwards compatibility.\nexport default function template(text, settings, oldSettings) {\n  if (!settings && oldSettings) settings = oldSettings;\n  settings = defaults({}, settings, _.templateSettings);\n\n  // Combine delimiters into one regular expression via alternation.\n  var matcher = RegExp([\n    (settings.escape || noMatch).source,\n    (settings.interpolate || noMatch).source,\n    (settings.evaluate || noMatch).source\n  ].join('|') + '|$', 'g');\n\n  // Compile the template source, escaping string literals appropriately.\n  var index = 0;\n  var source = \"__p+='\";\n  text.replace(matcher, function(match, escape, interpolate, evaluate, offset) {\n    source += text.slice(index, offset).replace(escapeRegExp, escapeChar);\n    index = offset + match.length;\n\n    if (escape) {\n      source += \"'+\\n((__t=(\" + escape + \"))==null?'':_.escape(__t))+\\n'\";\n    } else if (interpolate) {\n      source += \"'+\\n((__t=(\" + interpolate + \"))==null?'':__t)+\\n'\";\n    } else if (evaluate) {\n      source += \"';\\n\" + evaluate + \"\\n__p+='\";\n    }\n\n    // Adobe VMs need the match returned to produce the correct offset.\n    return match;\n  });\n  source += \"';\\n\";\n\n  var argument = settings.variable;\n  if (argument) {\n    // Insure against third-party code injection. (CVE-2021-23358)\n    if (!bareIdentifier.test(argument)) throw new Error(\n      'variable is not a bare identifier: ' + argument\n    );\n  } else {\n    // If a variable is not specified, place data values in local scope.\n    source = 'with(obj||{}){\\n' + source + '}\\n';\n    argument = 'obj';\n  }\n\n  source = \"var __t,__p='',__j=Array.prototype.join,\" +\n    \"print=function(){__p+=__j.call(arguments,'');};\\n\" +\n    source + 'return __p;\\n';\n\n  var render;\n  try {\n    render = new Function(argument, '_', source);\n  } catch (e) {\n    e.source = source;\n    throw e;\n  }\n\n  var template = function(data) {\n    return render.call(this, data, _);\n  };\n\n  // Provide the compiled source as a convenience for precompilation.\n  template.source = 'function(' + argument + '){\\n' + source + '}';\n\n  return template;\n}\n","import isFunction from './isFunction.js';\nimport toPath from './_toPath.js';\n\n// Traverses the children of `obj` along `path`. If a child is a function, it\n// is invoked with its parent as context. Returns the value of the final\n// child, or `fallback` if any child is undefined.\nexport default function result(obj, path, fallback) {\n  path = toPath(path);\n  var length = path.length;\n  if (!length) {\n    return isFunction(fallback) ? fallback.call(obj) : fallback;\n  }\n  for (var i = 0; i < length; i++) {\n    var prop = obj == null ? void 0 : obj[path[i]];\n    if (prop === void 0) {\n      prop = fallback;\n      i = length; // Ensure we don't continue iterating.\n    }\n    obj = isFunction(prop) ? prop.call(obj) : prop;\n  }\n  return obj;\n}\n","// Generate a unique integer id (unique within the entire client session).\n// Useful for temporary DOM ids.\nvar idCounter = 0;\nexport default function uniqueId(prefix) {\n  var id = ++idCounter + '';\n  return prefix ? prefix + id : id;\n}\n","import _ from './underscore.js';\n\n// Start chaining a wrapped Underscore object.\nexport default function chain(obj) {\n  var instance = _(obj);\n  instance._chain = true;\n  return instance;\n}\n","import baseCreate from './_baseCreate.js';\nimport isObject from './isObject.js';\n\n// Internal function to execute `sourceFunc` bound to `context` with optional\n// `args`. Determines whether to execute a function as a constructor or as a\n// normal function.\nexport default function executeBound(sourceFunc, boundFunc, context, callingContext, args) {\n  if (!(callingContext instanceof boundFunc)) return sourceFunc.apply(context, args);\n  var self = baseCreate(sourceFunc.prototype);\n  var result = sourceFunc.apply(self, args);\n  if (isObject(result)) return result;\n  return self;\n}\n","import restArguments from './restArguments.js';\nimport executeBound from './_executeBound.js';\nimport _ from './underscore.js';\n\n// Partially apply a function by creating a version that has had some of its\n// arguments pre-filled, without changing its dynamic `this` context. `_` acts\n// as a placeholder by default, allowing any combination of arguments to be\n// pre-filled. Set `_.partial.placeholder` for a custom placeholder argument.\nvar partial = restArguments(function(func, boundArgs) {\n  var placeholder = partial.placeholder;\n  var bound = function() {\n    var position = 0, length = boundArgs.length;\n    var args = Array(length);\n    for (var i = 0; i < length; i++) {\n      args[i] = boundArgs[i] === placeholder ? arguments[position++] : boundArgs[i];\n    }\n    while (position < arguments.length) args.push(arguments[position++]);\n    return executeBound(func, bound, this, this, args);\n  };\n  return bound;\n});\n\npartial.placeholder = _;\nexport default partial;\n","import restArguments from './restArguments.js';\nimport isFunction from './isFunction.js';\nimport executeBound from './_executeBound.js';\n\n// Create a function bound to a given object (assigning `this`, and arguments,\n// optionally).\nexport default restArguments(function(func, context, args) {\n  if (!isFunction(func)) throw new TypeError('Bind must be called on a function');\n  var bound = restArguments(function(callArgs) {\n    return executeBound(func, bound, context, this, args.concat(callArgs));\n  });\n  return bound;\n});\n","import createSizePropertyCheck from './_createSizePropertyCheck.js';\nimport getLength from './_getLength.js';\n\n// Internal helper for collection methods to determine whether a collection\n// should be iterated as an array or as an object.\n// Related: https://people.mozilla.org/~jorendorff/es6-draft.html#sec-tolength\n// Avoids a very nasty iOS 8 JIT bug on ARM-64. #2094\nexport default createSizePropertyCheck(getLength);\n","import getLength from './_getLength.js';\nimport isArrayLike from './_isArrayLike.js';\nimport isArray from './isArray.js';\nimport isArguments from './isArguments.js';\n\n// Internal implementation of a recursive `flatten` function.\nexport default function flatten(input, depth, strict, output) {\n  output = output || [];\n  if (!depth && depth !== 0) {\n    depth = Infinity;\n  } else if (depth <= 0) {\n    return output.concat(input);\n  }\n  var idx = output.length;\n  for (var i = 0, length = getLength(input); i < length; i++) {\n    var value = input[i];\n    if (isArrayLike(value) && (isArray(value) || isArguments(value))) {\n      // Flatten current level of array or arguments object.\n      if (depth > 1) {\n        flatten(value, depth - 1, strict, output);\n        idx = output.length;\n      } else {\n        var j = 0, len = value.length;\n        while (j < len) output[idx++] = value[j++];\n      }\n    } else if (!strict) {\n      output[idx++] = value;\n    }\n  }\n  return output;\n}\n","import restArguments from './restArguments.js';\nimport flatten from './_flatten.js';\nimport bind from './bind.js';\n\n// Bind a number of an object's methods to that object. Remaining arguments\n// are the method names to be bound. Useful for ensuring that all callbacks\n// defined on an object belong to it.\nexport default restArguments(function(obj, keys) {\n  keys = flatten(keys, false, false);\n  var index = keys.length;\n  if (index < 1) throw new Error('bindAll must be passed function names');\n  while (index--) {\n    var key = keys[index];\n    obj[key] = bind(obj[key], obj);\n  }\n  return obj;\n});\n","import has from './_has.js';\n\n// Memoize an expensive function by storing its results.\nexport default function memoize(func, hasher) {\n  var memoize = function(key) {\n    var cache = memoize.cache;\n    var address = '' + (hasher ? hasher.apply(this, arguments) : key);\n    if (!has(cache, address)) cache[address] = func.apply(this, arguments);\n    return cache[address];\n  };\n  memoize.cache = {};\n  return memoize;\n}\n","import restArguments from './restArguments.js';\n\n// Delays a function for the given number of milliseconds, and then calls\n// it with the arguments supplied.\nexport default restArguments(function(func, wait, args) {\n  return setTimeout(function() {\n    return func.apply(null, args);\n  }, wait);\n});\n","import partial from './partial.js';\nimport delay from './delay.js';\nimport _ from './underscore.js';\n\n// Defers a function, scheduling it to run after the current call stack has\n// cleared.\nexport default partial(delay, _, 1);\n","import now from './now.js';\n\n// Returns a function, that, when invoked, will only be triggered at most once\n// during a given window of time. Normally, the throttled function will run\n// as much as it can, without ever going more than once per `wait` duration;\n// but if you'd like to disable the execution on the leading edge, pass\n// `{leading: false}`. To disable execution on the trailing edge, ditto.\nexport default function throttle(func, wait, options) {\n  var timeout, context, args, result;\n  var previous = 0;\n  if (!options) options = {};\n\n  var later = function() {\n    previous = options.leading === false ? 0 : now();\n    timeout = null;\n    result = func.apply(context, args);\n    if (!timeout) context = args = null;\n  };\n\n  var throttled = function() {\n    var _now = now();\n    if (!previous && options.leading === false) previous = _now;\n    var remaining = wait - (_now - previous);\n    context = this;\n    args = arguments;\n    if (remaining <= 0 || remaining > wait) {\n      if (timeout) {\n        clearTimeout(timeout);\n        timeout = null;\n      }\n      previous = _now;\n      result = func.apply(context, args);\n      if (!timeout) context = args = null;\n    } else if (!timeout && options.trailing !== false) {\n      timeout = setTimeout(later, remaining);\n    }\n    return result;\n  };\n\n  throttled.cancel = function() {\n    clearTimeout(timeout);\n    previous = 0;\n    timeout = context = args = null;\n  };\n\n  return throttled;\n}\n","import restArguments from './restArguments.js';\nimport now from './now.js';\n\n// When a sequence of calls of the returned function ends, the argument\n// function is triggered. The end of a sequence is defined by the `wait`\n// parameter. If `immediate` is passed, the argument function will be\n// triggered at the beginning of the sequence instead of at the end.\nexport default function debounce(func, wait, immediate) {\n  var timeout, previous, args, result, context;\n\n  var later = function() {\n    var passed = now() - previous;\n    if (wait > passed) {\n      timeout = setTimeout(later, wait - passed);\n    } else {\n      timeout = null;\n      if (!immediate) result = func.apply(context, args);\n      // This check is needed because `func` can recursively invoke `debounced`.\n      if (!timeout) args = context = null;\n    }\n  };\n\n  var debounced = restArguments(function(_args) {\n    context = this;\n    args = _args;\n    previous = now();\n    if (!timeout) {\n      timeout = setTimeout(later, wait);\n      if (immediate) result = func.apply(context, args);\n    }\n    return result;\n  });\n\n  debounced.cancel = function() {\n    clearTimeout(timeout);\n    timeout = args = context = null;\n  };\n\n  return debounced;\n}\n","import partial from './partial.js';\n\n// Returns the first function passed as an argument to the second,\n// allowing you to adjust arguments, run code before and after, and\n// conditionally execute the original function.\nexport default function wrap(func, wrapper) {\n  return partial(wrapper, func);\n}\n","// Returns a negated version of the passed-in predicate.\nexport default function negate(predicate) {\n  return function() {\n    return !predicate.apply(this, arguments);\n  };\n}\n","// Returns a function that is the composition of a list of functions, each\n// consuming the return value of the function that follows.\nexport default function compose() {\n  var args = arguments;\n  var start = args.length - 1;\n  return function() {\n    var i = start;\n    var result = args[start].apply(this, arguments);\n    while (i--) result = args[i].call(this, result);\n    return result;\n  };\n}\n","// Returns a function that will only be executed on and after the Nth call.\nexport default function after(times, func) {\n  return function() {\n    if (--times < 1) {\n      return func.apply(this, arguments);\n    }\n  };\n}\n","// Returns a function that will only be executed up to (but not including) the\n// Nth call.\nexport default function before(times, func) {\n  var memo;\n  return function() {\n    if (--times > 0) {\n      memo = func.apply(this, arguments);\n    }\n    if (times <= 1) func = null;\n    return memo;\n  };\n}\n","import partial from './partial.js';\nimport before from './before.js';\n\n// Returns a function that will be executed at most one time, no matter how\n// often you call it. Useful for lazy initialization.\nexport default partial(before, 2);\n","import cb from './_cb.js';\nimport keys from './keys.js';\n\n// Returns the first key on an object that passes a truth test.\nexport default function findKey(obj, predicate, context) {\n  predicate = cb(predicate, context);\n  var _keys = keys(obj), key;\n  for (var i = 0, length = _keys.length; i < length; i++) {\n    key = _keys[i];\n    if (predicate(obj[key], key, obj)) return key;\n  }\n}\n","import cb from './_cb.js';\nimport getLength from './_getLength.js';\n\n// Internal function to generate `_.findIndex` and `_.findLastIndex`.\nexport default function createPredicateIndexFinder(dir) {\n  return function(array, predicate, context) {\n    predicate = cb(predicate, context);\n    var length = getLength(array);\n    var index = dir > 0 ? 0 : length - 1;\n    for (; index >= 0 && index < length; index += dir) {\n      if (predicate(array[index], index, array)) return index;\n    }\n    return -1;\n  };\n}\n","import createPredicateIndexFinder from './_createPredicateIndexFinder.js';\n\n// Returns the first index on an array-like that passes a truth test.\nexport default createPredicateIndexFinder(1);\n","import createPredicateIndexFinder from './_createPredicateIndexFinder.js';\n\n// Returns the last index on an array-like that passes a truth test.\nexport default createPredicateIndexFinder(-1);\n","import cb from './_cb.js';\nimport getLength from './_getLength.js';\n\n// Use a comparator function to figure out the smallest index at which\n// an object should be inserted so as to maintain order. Uses binary search.\nexport default function sortedIndex(array, obj, iteratee, context) {\n  iteratee = cb(iteratee, context, 1);\n  var value = iteratee(obj);\n  var low = 0, high = getLength(array);\n  while (low < high) {\n    var mid = Math.floor((low + high) / 2);\n    if (iteratee(array[mid]) < value) low = mid + 1; else high = mid;\n  }\n  return low;\n}\n","import getLength from './_getLength.js';\nimport { slice } from './_setup.js';\nimport isNaN from './isNaN.js';\n\n// Internal function to generate the `_.indexOf` and `_.lastIndexOf` functions.\nexport default function createIndexFinder(dir, predicateFind, sortedIndex) {\n  return function(array, item, idx) {\n    var i = 0, length = getLength(array);\n    if (typeof idx == 'number') {\n      if (dir > 0) {\n        i = idx >= 0 ? idx : Math.max(idx + length, i);\n      } else {\n        length = idx >= 0 ? Math.min(idx + 1, length) : idx + length + 1;\n      }\n    } else if (sortedIndex && idx && length) {\n      idx = sortedIndex(array, item);\n      return array[idx] === item ? idx : -1;\n    }\n    if (item !== item) {\n      idx = predicateFind(slice.call(array, i, length), isNaN);\n      return idx >= 0 ? idx + i : -1;\n    }\n    for (idx = dir > 0 ? i : length - 1; idx >= 0 && idx < length; idx += dir) {\n      if (array[idx] === item) return idx;\n    }\n    return -1;\n  };\n}\n","import sortedIndex from './sortedIndex.js';\nimport findIndex from './findIndex.js';\nimport createIndexFinder from './_createIndexFinder.js';\n\n// Return the position of the first occurrence of an item in an array,\n// or -1 if the item is not included in the array.\n// If the array is large and already in sort order, pass `true`\n// for **isSorted** to use binary search.\nexport default createIndexFinder(1, findIndex, sortedIndex);\n","import findLastIndex from './findLastIndex.js';\nimport createIndexFinder from './_createIndexFinder.js';\n\n// Return the position of the last occurrence of an item in an array,\n// or -1 if the item is not included in the array.\nexport default createIndexFinder(-1, findLastIndex);\n","import isArrayLike from './_isArrayLike.js';\nimport findIndex from './findIndex.js';\nimport findKey from './findKey.js';\n\n// Return the first value which passes a truth test.\nexport default function find(obj, predicate, context) {\n  var keyFinder = isArrayLike(obj) ? findIndex : findKey;\n  var key = keyFinder(obj, predicate, context);\n  if (key !== void 0 && key !== -1) return obj[key];\n}\n","import find from './find.js';\nimport matcher from './matcher.js';\n\n// Convenience version of a common use case of `_.find`: getting the first\n// object containing specific `key:value` pairs.\nexport default function findWhere(obj, attrs) {\n  return find(obj, matcher(attrs));\n}\n","import optimizeCb from './_optimizeCb.js';\nimport isArrayLike from './_isArrayLike.js';\nimport keys from './keys.js';\n\n// The cornerstone for collection functions, an `each`\n// implementation, aka `forEach`.\n// Handles raw objects in addition to array-likes. Treats all\n// sparse array-likes as if they were dense.\nexport default function each(obj, iteratee, context) {\n  iteratee = optimizeCb(iteratee, context);\n  var i, length;\n  if (isArrayLike(obj)) {\n    for (i = 0, length = obj.length; i < length; i++) {\n      iteratee(obj[i], i, obj);\n    }\n  } else {\n    var _keys = keys(obj);\n    for (i = 0, length = _keys.length; i < length; i++) {\n      iteratee(obj[_keys[i]], _keys[i], obj);\n    }\n  }\n  return obj;\n}\n","import cb from './_cb.js';\nimport isArrayLike from './_isArrayLike.js';\nimport keys from './keys.js';\n\n// Return the results of applying the iteratee to each element.\nexport default function map(obj, iteratee, context) {\n  iteratee = cb(iteratee, context);\n  var _keys = !isArrayLike(obj) && keys(obj),\n      length = (_keys || obj).length,\n      results = Array(length);\n  for (var index = 0; index < length; index++) {\n    var currentKey = _keys ? _keys[index] : index;\n    results[index] = iteratee(obj[currentKey], currentKey, obj);\n  }\n  return results;\n}\n","import isArrayLike from './_isArrayLike.js';\nimport keys from './keys.js';\nimport optimizeCb from './_optimizeCb.js';\n\n// Internal helper to create a reducing function, iterating left or right.\nexport default function createReduce(dir) {\n  // Wrap code that reassigns argument variables in a separate function than\n  // the one that accesses `arguments.length` to avoid a perf hit. (#1991)\n  var reducer = function(obj, iteratee, memo, initial) {\n    var _keys = !isArrayLike(obj) && keys(obj),\n        length = (_keys || obj).length,\n        index = dir > 0 ? 0 : length - 1;\n    if (!initial) {\n      memo = obj[_keys ? _keys[index] : index];\n      index += dir;\n    }\n    for (; index >= 0 && index < length; index += dir) {\n      var currentKey = _keys ? _keys[index] : index;\n      memo = iteratee(memo, obj[currentKey], currentKey, obj);\n    }\n    return memo;\n  };\n\n  return function(obj, iteratee, memo, context) {\n    var initial = arguments.length >= 3;\n    return reducer(obj, optimizeCb(iteratee, context, 4), memo, initial);\n  };\n}\n","import createReduce from './_createReduce.js';\n\n// **Reduce** builds up a single result from a list of values, aka `inject`,\n// or `foldl`.\nexport default createReduce(1);\n","import createReduce from './_createReduce.js';\n\n// The right-associative version of reduce, also known as `foldr`.\nexport default createReduce(-1);\n","import cb from './_cb.js';\nimport each from './each.js';\n\n// Return all the elements that pass a truth test.\nexport default function filter(obj, predicate, context) {\n  var results = [];\n  predicate = cb(predicate, context);\n  each(obj, function(value, index, list) {\n    if (predicate(value, index, list)) results.push(value);\n  });\n  return results;\n}\n","import filter from './filter.js';\nimport negate from './negate.js';\nimport cb from './_cb.js';\n\n// Return all the elements for which a truth test fails.\nexport default function reject(obj, predicate, context) {\n  return filter(obj, negate(cb(predicate)), context);\n}\n","import cb from './_cb.js';\nimport isArrayLike from './_isArrayLike.js';\nimport keys from './keys.js';\n\n// Determine whether all of the elements pass a truth test.\nexport default function every(obj, predicate, context) {\n  predicate = cb(predicate, context);\n  var _keys = !isArrayLike(obj) && keys(obj),\n      length = (_keys || obj).length;\n  for (var index = 0; index < length; index++) {\n    var currentKey = _keys ? _keys[index] : index;\n    if (!predicate(obj[currentKey], currentKey, obj)) return false;\n  }\n  return true;\n}\n","import cb from './_cb.js';\nimport isArrayLike from './_isArrayLike.js';\nimport keys from './keys.js';\n\n// Determine if at least one element in the object passes a truth test.\nexport default function some(obj, predicate, context) {\n  predicate = cb(predicate, context);\n  var _keys = !isArrayLike(obj) && keys(obj),\n      length = (_keys || obj).length;\n  for (var index = 0; index < length; index++) {\n    var currentKey = _keys ? _keys[index] : index;\n    if (predicate(obj[currentKey], currentKey, obj)) return true;\n  }\n  return false;\n}\n","import isArrayLike from './_isArrayLike.js';\nimport values from './values.js';\nimport indexOf from './indexOf.js';\n\n// Determine if the array or object contains a given item (using `===`).\nexport default function contains(obj, item, fromIndex, guard) {\n  if (!isArrayLike(obj)) obj = values(obj);\n  if (typeof fromIndex != 'number' || guard) fromIndex = 0;\n  return indexOf(obj, item, fromIndex) >= 0;\n}\n","import restArguments from './restArguments.js';\nimport isFunction from './isFunction.js';\nimport map from './map.js';\nimport deepGet from './_deepGet.js';\nimport toPath from './_toPath.js';\n\n// Invoke a method (with arguments) on every item in a collection.\nexport default restArguments(function(obj, path, args) {\n  var contextPath, func;\n  if (isFunction(path)) {\n    func = path;\n  } else {\n    path = toPath(path);\n    contextPath = path.slice(0, -1);\n    path = path[path.length - 1];\n  }\n  return map(obj, function(context) {\n    var method = func;\n    if (!method) {\n      if (contextPath && contextPath.length) {\n        context = deepGet(context, contextPath);\n      }\n      if (context == null) return void 0;\n      method = context[path];\n    }\n    return method == null ? method : method.apply(context, args);\n  });\n});\n","import map from './map.js';\nimport property from './property.js';\n\n// Convenience version of a common use case of `_.map`: fetching a property.\nexport default function pluck(obj, key) {\n  return map(obj, property(key));\n}\n","import filter from './filter.js';\nimport matcher from './matcher.js';\n\n// Convenience version of a common use case of `_.filter`: selecting only\n// objects containing specific `key:value` pairs.\nexport default function where(obj, attrs) {\n  return filter(obj, matcher(attrs));\n}\n","import isArrayLike from './_isArrayLike.js';\nimport values from './values.js';\nimport cb from './_cb.js';\nimport each from './each.js';\n\n// Return the maximum element (or element-based computation).\nexport default function max(obj, iteratee, context) {\n  var result = -Infinity, lastComputed = -Infinity,\n      value, computed;\n  if (iteratee == null || (typeof iteratee == 'number' && typeof obj[0] != 'object' && obj != null)) {\n    obj = isArrayLike(obj) ? obj : values(obj);\n    for (var i = 0, length = obj.length; i < length; i++) {\n      value = obj[i];\n      if (value != null && value > result) {\n        result = value;\n      }\n    }\n  } else {\n    iteratee = cb(iteratee, context);\n    each(obj, function(v, index, list) {\n      computed = iteratee(v, index, list);\n      if (computed > lastComputed || (computed === -Infinity && result === -Infinity)) {\n        result = v;\n        lastComputed = computed;\n      }\n    });\n  }\n  return result;\n}\n","import isArrayLike from './_isArrayLike.js';\nimport values from './values.js';\nimport cb from './_cb.js';\nimport each from './each.js';\n\n// Return the minimum element (or element-based computation).\nexport default function min(obj, iteratee, context) {\n  var result = Infinity, lastComputed = Infinity,\n      value, computed;\n  if (iteratee == null || (typeof iteratee == 'number' && typeof obj[0] != 'object' && obj != null)) {\n    obj = isArrayLike(obj) ? obj : values(obj);\n    for (var i = 0, length = obj.length; i < length; i++) {\n      value = obj[i];\n      if (value != null && value < result) {\n        result = value;\n      }\n    }\n  } else {\n    iteratee = cb(iteratee, context);\n    each(obj, function(v, index, list) {\n      computed = iteratee(v, index, list);\n      if (computed < lastComputed || (computed === Infinity && result === Infinity)) {\n        result = v;\n        lastComputed = computed;\n      }\n    });\n  }\n  return result;\n}\n","import isArray from './isArray.js';\nimport { slice } from './_setup.js';\nimport isString from './isString.js';\nimport isArrayLike from './_isArrayLike.js';\nimport map from './map.js';\nimport identity from './identity.js';\nimport values from './values.js';\n\n// Safely create a real, live array from anything iterable.\nvar reStrSymbol = /[^\\ud800-\\udfff]|[\\ud800-\\udbff][\\udc00-\\udfff]|[\\ud800-\\udfff]/g;\nexport default function toArray(obj) {\n  if (!obj) return [];\n  if (isArray(obj)) return slice.call(obj);\n  if (isString(obj)) {\n    // Keep surrogate pair characters together.\n    return obj.match(reStrSymbol);\n  }\n  if (isArrayLike(obj)) return map(obj, identity);\n  return values(obj);\n}\n","import isArrayLike from './_isArrayLike.js';\nimport values from './values.js';\nimport getLength from './_getLength.js';\nimport random from './random.js';\nimport toArray from './toArray.js';\n\n// Sample **n** random values from a collection using the modern version of the\n// [Fisher-Yates shuffle](https://en.wikipedia.org/wiki/Fisher–Yates_shuffle).\n// If **n** is not specified, returns a single random element.\n// The internal `guard` argument allows it to work with `_.map`.\nexport default function sample(obj, n, guard) {\n  if (n == null || guard) {\n    if (!isArrayLike(obj)) obj = values(obj);\n    return obj[random(obj.length - 1)];\n  }\n  var sample = toArray(obj);\n  var length = getLength(sample);\n  n = Math.max(Math.min(n, length), 0);\n  var last = length - 1;\n  for (var index = 0; index < n; index++) {\n    var rand = random(index, last);\n    var temp = sample[index];\n    sample[index] = sample[rand];\n    sample[rand] = temp;\n  }\n  return sample.slice(0, n);\n}\n","import sample from './sample.js';\n\n// Shuffle a collection.\nexport default function shuffle(obj) {\n  return sample(obj, Infinity);\n}\n","import cb from './_cb.js';\nimport pluck from './pluck.js';\nimport map from './map.js';\n\n// Sort the object's values by a criterion produced by an iteratee.\nexport default function sortBy(obj, iteratee, context) {\n  var index = 0;\n  iteratee = cb(iteratee, context);\n  return pluck(map(obj, function(value, key, list) {\n    return {\n      value: value,\n      index: index++,\n      criteria: iteratee(value, key, list)\n    };\n  }).sort(function(left, right) {\n    var a = left.criteria;\n    var b = right.criteria;\n    if (a !== b) {\n      if (a > b || a === void 0) return 1;\n      if (a < b || b === void 0) return -1;\n    }\n    return left.index - right.index;\n  }), 'value');\n}\n","import cb from './_cb.js';\nimport each from './each.js';\n\n// An internal function used for aggregate \"group by\" operations.\nexport default function group(behavior, partition) {\n  return function(obj, iteratee, context) {\n    var result = partition ? [[], []] : {};\n    iteratee = cb(iteratee, context);\n    each(obj, function(value, index) {\n      var key = iteratee(value, index, obj);\n      behavior(result, value, key);\n    });\n    return result;\n  };\n}\n","import group from './_group.js';\nimport has from './_has.js';\n\n// Groups the object's values by a criterion. Pass either a string attribute\n// to group by, or a function that returns the criterion.\nexport default group(function(result, value, key) {\n  if (has(result, key)) result[key].push(value); else result[key] = [value];\n});\n","import group from './_group.js';\n\n// Indexes the object's values by a criterion, similar to `_.groupBy`, but for\n// when you know that your index values will be unique.\nexport default group(function(result, value, key) {\n  result[key] = value;\n});\n","import group from './_group.js';\nimport has from './_has.js';\n\n// Counts instances of an object that group by a certain criterion. Pass\n// either a string attribute to count by, or a function that returns the\n// criterion.\nexport default group(function(result, value, key) {\n  if (has(result, key)) result[key]++; else result[key] = 1;\n});\n","import group from './_group.js';\n\n// Split a collection into two arrays: one whose elements all pass the given\n// truth test, and one whose elements all do not pass the truth test.\nexport default group(function(result, value, pass) {\n  result[pass ? 0 : 1].push(value);\n}, true);\n","import isArrayLike from './_isArrayLike.js';\nimport keys from './keys.js';\n\n// Return the number of elements in a collection.\nexport default function size(obj) {\n  if (obj == null) return 0;\n  return isArrayLike(obj) ? obj.length : keys(obj).length;\n}\n","// Internal `_.pick` helper function to determine whether `key` is an enumerable\n// property name of `obj`.\nexport default function keyInObj(value, key, obj) {\n  return key in obj;\n}\n","import restArguments from './restArguments.js';\nimport isFunction from './isFunction.js';\nimport optimizeCb from './_optimizeCb.js';\nimport allKeys from './allKeys.js';\nimport keyInObj from './_keyInObj.js';\nimport flatten from './_flatten.js';\n\n// Return a copy of the object only containing the allowed properties.\nexport default restArguments(function(obj, keys) {\n  var result = {}, iteratee = keys[0];\n  if (obj == null) return result;\n  if (isFunction(iteratee)) {\n    if (keys.length > 1) iteratee = optimizeCb(iteratee, keys[1]);\n    keys = allKeys(obj);\n  } else {\n    iteratee = keyInObj;\n    keys = flatten(keys, false, false);\n    obj = Object(obj);\n  }\n  for (var i = 0, length = keys.length; i < length; i++) {\n    var key = keys[i];\n    var value = obj[key];\n    if (iteratee(value, key, obj)) result[key] = value;\n  }\n  return result;\n});\n","import restArguments from './restArguments.js';\nimport isFunction from './isFunction.js';\nimport negate from './negate.js';\nimport map from './map.js';\nimport flatten from './_flatten.js';\nimport contains from './contains.js';\nimport pick from './pick.js';\n\n// Return a copy of the object without the disallowed properties.\nexport default restArguments(function(obj, keys) {\n  var iteratee = keys[0], context;\n  if (isFunction(iteratee)) {\n    iteratee = negate(iteratee);\n    if (keys.length > 1) context = keys[1];\n  } else {\n    keys = map(flatten(keys, false, false), String);\n    iteratee = function(value, key) {\n      return !contains(keys, key);\n    };\n  }\n  return pick(obj, iteratee, context);\n});\n","import { slice } from './_setup.js';\n\n// Returns everything but the last entry of the array. Especially useful on\n// the arguments object. Passing **n** will return all the values in\n// the array, excluding the last N.\nexport default function initial(array, n, guard) {\n  return slice.call(array, 0, Math.max(0, array.length - (n == null || guard ? 1 : n)));\n}\n","import initial from './initial.js';\n\n// Get the first element of an array. Passing **n** will return the first N\n// values in the array. The **guard** check allows it to work with `_.map`.\nexport default function first(array, n, guard) {\n  if (array == null || array.length < 1) return n == null || guard ? void 0 : [];\n  if (n == null || guard) return array[0];\n  return initial(array, array.length - n);\n}\n","import { slice } from './_setup.js';\n\n// Returns everything but the first entry of the `array`. Especially useful on\n// the `arguments` object. Passing an **n** will return the rest N values in the\n// `array`.\nexport default function rest(array, n, guard) {\n  return slice.call(array, n == null || guard ? 1 : n);\n}\n","import rest from './rest.js';\n\n// Get the last element of an array. Passing **n** will return the last N\n// values in the array.\nexport default function last(array, n, guard) {\n  if (array == null || array.length < 1) return n == null || guard ? void 0 : [];\n  if (n == null || guard) return array[array.length - 1];\n  return rest(array, Math.max(0, array.length - n));\n}\n","import filter from './filter.js';\n\n// Trim out all falsy values from an array.\nexport default function compact(array) {\n  return filter(array, Boolean);\n}\n","import _flatten from './_flatten.js';\n\n// Flatten out an array, either recursively (by default), or up to `depth`.\n// Passing `true` or `false` as `depth` means `1` or `Infinity`, respectively.\nexport default function flatten(array, depth) {\n  return _flatten(array, depth, false);\n}\n","import restArguments from './restArguments.js';\nimport flatten from './_flatten.js';\nimport filter from './filter.js';\nimport contains from './contains.js';\n\n// Take the difference between one array and a number of other arrays.\n// Only the elements present in just the first array will remain.\nexport default restArguments(function(array, rest) {\n  rest = flatten(rest, true, true);\n  return filter(array, function(value){\n    return !contains(rest, value);\n  });\n});\n","import restArguments from './restArguments.js';\nimport difference from './difference.js';\n\n// Return a version of the array that does not contain the specified value(s).\nexport default restArguments(function(array, otherArrays) {\n  return difference(array, otherArrays);\n});\n","import isBoolean from './isBoolean.js';\nimport cb from './_cb.js';\nimport getLength from './_getLength.js';\nimport contains from './contains.js';\n\n// Produce a duplicate-free version of the array. If the array has already\n// been sorted, you have the option of using a faster algorithm.\n// The faster algorithm will not work with an iteratee if the iteratee\n// is not a one-to-one function, so providing an iteratee will disable\n// the faster algorithm.\nexport default function uniq(array, isSorted, iteratee, context) {\n  if (!isBoolean(isSorted)) {\n    context = iteratee;\n    iteratee = isSorted;\n    isSorted = false;\n  }\n  if (iteratee != null) iteratee = cb(iteratee, context);\n  var result = [];\n  var seen = [];\n  for (var i = 0, length = getLength(array); i < length; i++) {\n    var value = array[i],\n        computed = iteratee ? iteratee(value, i, array) : value;\n    if (isSorted && !iteratee) {\n      if (!i || seen !== computed) result.push(value);\n      seen = computed;\n    } else if (iteratee) {\n      if (!contains(seen, computed)) {\n        seen.push(computed);\n        result.push(value);\n      }\n    } else if (!contains(result, value)) {\n      result.push(value);\n    }\n  }\n  return result;\n}\n","import restArguments from './restArguments.js';\nimport uniq from './uniq.js';\nimport flatten from './_flatten.js';\n\n// Produce an array that contains the union: each distinct element from all of\n// the passed-in arrays.\nexport default restArguments(function(arrays) {\n  return uniq(flatten(arrays, true, true));\n});\n","import getLength from './_getLength.js';\nimport contains from './contains.js';\n\n// Produce an array that contains every item shared between all the\n// passed-in arrays.\nexport default function intersection(array) {\n  var result = [];\n  var argsLength = arguments.length;\n  for (var i = 0, length = getLength(array); i < length; i++) {\n    var item = array[i];\n    if (contains(result, item)) continue;\n    var j;\n    for (j = 1; j < argsLength; j++) {\n      if (!contains(arguments[j], item)) break;\n    }\n    if (j === argsLength) result.push(item);\n  }\n  return result;\n}\n","import max from './max.js';\nimport getLength from './_getLength.js';\nimport pluck from './pluck.js';\n\n// Complement of zip. Unzip accepts an array of arrays and groups\n// each array's elements on shared indices.\nexport default function unzip(array) {\n  var length = (array && max(array, getLength).length) || 0;\n  var result = Array(length);\n\n  for (var index = 0; index < length; index++) {\n    result[index] = pluck(array, index);\n  }\n  return result;\n}\n","import restArguments from './restArguments.js';\nimport unzip from './unzip.js';\n\n// Zip together multiple lists into a single array -- elements that share\n// an index go together.\nexport default restArguments(unzip);\n","import getLength  from './_getLength.js';\n\n// Converts lists into objects. Pass either a single array of `[key, value]`\n// pairs, or two parallel arrays of the same length -- one of keys, and one of\n// the corresponding values. Passing by pairs is the reverse of `_.pairs`.\nexport default function object(list, values) {\n  var result = {};\n  for (var i = 0, length = getLength(list); i < length; i++) {\n    if (values) {\n      result[list[i]] = values[i];\n    } else {\n      result[list[i][0]] = list[i][1];\n    }\n  }\n  return result;\n}\n","// Generate an integer Array containing an arithmetic progression. A port of\n// the native Python `range()` function. See\n// [the Python documentation](https://docs.python.org/library/functions.html#range).\nexport default function range(start, stop, step) {\n  if (stop == null) {\n    stop = start || 0;\n    start = 0;\n  }\n  if (!step) {\n    step = stop < start ? -1 : 1;\n  }\n\n  var length = Math.max(Math.ceil((stop - start) / step), 0);\n  var range = Array(length);\n\n  for (var idx = 0; idx < length; idx++, start += step) {\n    range[idx] = start;\n  }\n\n  return range;\n}\n","import { slice } from './_setup.js';\n\n// Chunk a single array into multiple arrays, each containing `count` or fewer\n// items.\nexport default function chunk(array, count) {\n  if (count == null || count < 1) return [];\n  var result = [];\n  var i = 0, length = array.length;\n  while (i < length) {\n    result.push(slice.call(array, i, i += count));\n  }\n  return result;\n}\n","import _ from './underscore.js';\n\n// Helper function to continue chaining intermediate results.\nexport default function chainResult(instance, obj) {\n  return instance._chain ? _(obj).chain() : obj;\n}\n","import _ from './underscore.js';\nimport each from './each.js';\nimport functions from './functions.js';\nimport { push } from './_setup.js';\nimport chainResult from './_chainResult.js';\n\n// Add your own custom functions to the Underscore object.\nexport default function mixin(obj) {\n  each(functions(obj), function(name) {\n    var func = _[name] = obj[name];\n    _.prototype[name] = function() {\n      var args = [this._wrapped];\n      push.apply(args, arguments);\n      return chainResult(this, func.apply(_, args));\n    };\n  });\n  return _;\n}\n","import _ from './underscore.js';\nimport each from './each.js';\nimport { ArrayProto } from './_setup.js';\nimport chainResult from './_chainResult.js';\n\n// Add all mutator `Array` functions to the wrapper.\neach(['pop', 'push', 'reverse', 'shift', 'sort', 'splice', 'unshift'], function(name) {\n  var method = ArrayProto[name];\n  _.prototype[name] = function() {\n    var obj = this._wrapped;\n    if (obj != null) {\n      method.apply(obj, arguments);\n      if ((name === 'shift' || name === 'splice') && obj.length === 0) {\n        delete obj[0];\n      }\n    }\n    return chainResult(this, obj);\n  };\n});\n\n// Add all accessor `Array` functions to the wrapper.\neach(['concat', 'join', 'slice'], function(name) {\n  var method = ArrayProto[name];\n  _.prototype[name] = function() {\n    var obj = this._wrapped;\n    if (obj != null) obj = method.apply(obj, arguments);\n    return chainResult(this, obj);\n  };\n});\n\nexport default _;\n","// Default Export\n// ==============\n// In this module, we mix our bundled exports into the `_` object and export\n// the result. This is analogous to setting `module.exports = _` in CommonJS.\n// Hence, this module is also the entry point of our UMD bundle and the package\n// entry point for CommonJS and AMD users. In other words, this is (the source\n// of) the module you are interfacing with when you do any of the following:\n//\n// ```js\n// // CommonJS\n// var _ = require('underscore');\n//\n// // AMD\n// define(['underscore'], function(_) {...});\n//\n// // UMD in the browser\n// // _ is available as a global variable\n// ```\nimport * as allExports from './index.js';\nimport { mixin } from './index.js';\n\n// Add all of the Underscore functions to the wrapper object.\nvar _ = mixin(allExports);\n// Legacy Node.js API.\n_._ = _;\n// Export the Underscore API.\nexport default _;\n","'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./cjs/react-is.production.min.js');\n} else {\n  module.exports = require('./cjs/react-is.development.js');\n}\n","/** @license React v16.13.1\n * react-is.production.min.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';var b=\"function\"===typeof Symbol&&Symbol.for,c=b?Symbol.for(\"react.element\"):60103,d=b?Symbol.for(\"react.portal\"):60106,e=b?Symbol.for(\"react.fragment\"):60107,f=b?Symbol.for(\"react.strict_mode\"):60108,g=b?Symbol.for(\"react.profiler\"):60114,h=b?Symbol.for(\"react.provider\"):60109,k=b?Symbol.for(\"react.context\"):60110,l=b?Symbol.for(\"react.async_mode\"):60111,m=b?Symbol.for(\"react.concurrent_mode\"):60111,n=b?Symbol.for(\"react.forward_ref\"):60112,p=b?Symbol.for(\"react.suspense\"):60113,q=b?\nSymbol.for(\"react.suspense_list\"):60120,r=b?Symbol.for(\"react.memo\"):60115,t=b?Symbol.for(\"react.lazy\"):60116,v=b?Symbol.for(\"react.block\"):60121,w=b?Symbol.for(\"react.fundamental\"):60117,x=b?Symbol.for(\"react.responder\"):60118,y=b?Symbol.for(\"react.scope\"):60119;\nfunction z(a){if(\"object\"===typeof a&&null!==a){var u=a.$$typeof;switch(u){case c:switch(a=a.type,a){case l:case m:case e:case g:case f:case p:return a;default:switch(a=a&&a.$$typeof,a){case k:case n:case t:case r:case h:return a;default:return u}}case d:return u}}}function A(a){return z(a)===m}exports.AsyncMode=l;exports.ConcurrentMode=m;exports.ContextConsumer=k;exports.ContextProvider=h;exports.Element=c;exports.ForwardRef=n;exports.Fragment=e;exports.Lazy=t;exports.Memo=r;exports.Portal=d;\nexports.Profiler=g;exports.StrictMode=f;exports.Suspense=p;exports.isAsyncMode=function(a){return A(a)||z(a)===l};exports.isConcurrentMode=A;exports.isContextConsumer=function(a){return z(a)===k};exports.isContextProvider=function(a){return z(a)===h};exports.isElement=function(a){return\"object\"===typeof a&&null!==a&&a.$$typeof===c};exports.isForwardRef=function(a){return z(a)===n};exports.isFragment=function(a){return z(a)===e};exports.isLazy=function(a){return z(a)===t};\nexports.isMemo=function(a){return z(a)===r};exports.isPortal=function(a){return z(a)===d};exports.isProfiler=function(a){return z(a)===g};exports.isStrictMode=function(a){return z(a)===f};exports.isSuspense=function(a){return z(a)===p};\nexports.isValidElementType=function(a){return\"string\"===typeof a||\"function\"===typeof a||a===e||a===m||a===g||a===f||a===p||a===q||\"object\"===typeof a&&null!==a&&(a.$$typeof===t||a.$$typeof===r||a.$$typeof===h||a.$$typeof===k||a.$$typeof===n||a.$$typeof===w||a.$$typeof===x||a.$$typeof===y||a.$$typeof===v)};exports.typeOf=z;\n","/** @license React v16.14.0\n * react.production.min.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';var l=require(\"object-assign\"),n=\"function\"===typeof Symbol&&Symbol.for,p=n?Symbol.for(\"react.element\"):60103,q=n?Symbol.for(\"react.portal\"):60106,r=n?Symbol.for(\"react.fragment\"):60107,t=n?Symbol.for(\"react.strict_mode\"):60108,u=n?Symbol.for(\"react.profiler\"):60114,v=n?Symbol.for(\"react.provider\"):60109,w=n?Symbol.for(\"react.context\"):60110,x=n?Symbol.for(\"react.forward_ref\"):60112,y=n?Symbol.for(\"react.suspense\"):60113,z=n?Symbol.for(\"react.memo\"):60115,A=n?Symbol.for(\"react.lazy\"):\n60116,B=\"function\"===typeof Symbol&&Symbol.iterator;function C(a){for(var b=\"https://reactjs.org/docs/error-decoder.html?invariant=\"+a,c=1;c<arguments.length;c++)b+=\"&args[]=\"+encodeURIComponent(arguments[c]);return\"Minified React error #\"+a+\"; visit \"+b+\" for the full message or use the non-minified dev environment for full errors and additional helpful warnings.\"}\nvar D={isMounted:function(){return!1},enqueueForceUpdate:function(){},enqueueReplaceState:function(){},enqueueSetState:function(){}},E={};function F(a,b,c){this.props=a;this.context=b;this.refs=E;this.updater=c||D}F.prototype.isReactComponent={};F.prototype.setState=function(a,b){if(\"object\"!==typeof a&&\"function\"!==typeof a&&null!=a)throw Error(C(85));this.updater.enqueueSetState(this,a,b,\"setState\")};F.prototype.forceUpdate=function(a){this.updater.enqueueForceUpdate(this,a,\"forceUpdate\")};\nfunction G(){}G.prototype=F.prototype;function H(a,b,c){this.props=a;this.context=b;this.refs=E;this.updater=c||D}var I=H.prototype=new G;I.constructor=H;l(I,F.prototype);I.isPureReactComponent=!0;var J={current:null},K=Object.prototype.hasOwnProperty,L={key:!0,ref:!0,__self:!0,__source:!0};\nfunction M(a,b,c){var e,d={},g=null,k=null;if(null!=b)for(e in void 0!==b.ref&&(k=b.ref),void 0!==b.key&&(g=\"\"+b.key),b)K.call(b,e)&&!L.hasOwnProperty(e)&&(d[e]=b[e]);var f=arguments.length-2;if(1===f)d.children=c;else if(1<f){for(var h=Array(f),m=0;m<f;m++)h[m]=arguments[m+2];d.children=h}if(a&&a.defaultProps)for(e in f=a.defaultProps,f)void 0===d[e]&&(d[e]=f[e]);return{$$typeof:p,type:a,key:g,ref:k,props:d,_owner:J.current}}\nfunction N(a,b){return{$$typeof:p,type:a.type,key:b,ref:a.ref,props:a.props,_owner:a._owner}}function O(a){return\"object\"===typeof a&&null!==a&&a.$$typeof===p}function escape(a){var b={\"=\":\"=0\",\":\":\"=2\"};return\"$\"+(\"\"+a).replace(/[=:]/g,function(a){return b[a]})}var P=/\\/+/g,Q=[];function R(a,b,c,e){if(Q.length){var d=Q.pop();d.result=a;d.keyPrefix=b;d.func=c;d.context=e;d.count=0;return d}return{result:a,keyPrefix:b,func:c,context:e,count:0}}\nfunction S(a){a.result=null;a.keyPrefix=null;a.func=null;a.context=null;a.count=0;10>Q.length&&Q.push(a)}\nfunction T(a,b,c,e){var d=typeof a;if(\"undefined\"===d||\"boolean\"===d)a=null;var g=!1;if(null===a)g=!0;else switch(d){case \"string\":case \"number\":g=!0;break;case \"object\":switch(a.$$typeof){case p:case q:g=!0}}if(g)return c(e,a,\"\"===b?\".\"+U(a,0):b),1;g=0;b=\"\"===b?\".\":b+\":\";if(Array.isArray(a))for(var k=0;k<a.length;k++){d=a[k];var f=b+U(d,k);g+=T(d,f,c,e)}else if(null===a||\"object\"!==typeof a?f=null:(f=B&&a[B]||a[\"@@iterator\"],f=\"function\"===typeof f?f:null),\"function\"===typeof f)for(a=f.call(a),k=\n0;!(d=a.next()).done;)d=d.value,f=b+U(d,k++),g+=T(d,f,c,e);else if(\"object\"===d)throw c=\"\"+a,Error(C(31,\"[object Object]\"===c?\"object with keys {\"+Object.keys(a).join(\", \")+\"}\":c,\"\"));return g}function V(a,b,c){return null==a?0:T(a,\"\",b,c)}function U(a,b){return\"object\"===typeof a&&null!==a&&null!=a.key?escape(a.key):b.toString(36)}function W(a,b){a.func.call(a.context,b,a.count++)}\nfunction aa(a,b,c){var e=a.result,d=a.keyPrefix;a=a.func.call(a.context,b,a.count++);Array.isArray(a)?X(a,e,c,function(a){return a}):null!=a&&(O(a)&&(a=N(a,d+(!a.key||b&&b.key===a.key?\"\":(\"\"+a.key).replace(P,\"$&/\")+\"/\")+c)),e.push(a))}function X(a,b,c,e,d){var g=\"\";null!=c&&(g=(\"\"+c).replace(P,\"$&/\")+\"/\");b=R(b,g,e,d);V(a,aa,b);S(b)}var Y={current:null};function Z(){var a=Y.current;if(null===a)throw Error(C(321));return a}\nvar ba={ReactCurrentDispatcher:Y,ReactCurrentBatchConfig:{suspense:null},ReactCurrentOwner:J,IsSomeRendererActing:{current:!1},assign:l};exports.Children={map:function(a,b,c){if(null==a)return a;var e=[];X(a,e,null,b,c);return e},forEach:function(a,b,c){if(null==a)return a;b=R(null,null,b,c);V(a,W,b);S(b)},count:function(a){return V(a,function(){return null},null)},toArray:function(a){var b=[];X(a,b,null,function(a){return a});return b},only:function(a){if(!O(a))throw Error(C(143));return a}};\nexports.Component=F;exports.Fragment=r;exports.Profiler=u;exports.PureComponent=H;exports.StrictMode=t;exports.Suspense=y;exports.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED=ba;\nexports.cloneElement=function(a,b,c){if(null===a||void 0===a)throw Error(C(267,a));var e=l({},a.props),d=a.key,g=a.ref,k=a._owner;if(null!=b){void 0!==b.ref&&(g=b.ref,k=J.current);void 0!==b.key&&(d=\"\"+b.key);if(a.type&&a.type.defaultProps)var f=a.type.defaultProps;for(h in b)K.call(b,h)&&!L.hasOwnProperty(h)&&(e[h]=void 0===b[h]&&void 0!==f?f[h]:b[h])}var h=arguments.length-2;if(1===h)e.children=c;else if(1<h){f=Array(h);for(var m=0;m<h;m++)f[m]=arguments[m+2];e.children=f}return{$$typeof:p,type:a.type,\nkey:d,ref:g,props:e,_owner:k}};exports.createContext=function(a,b){void 0===b&&(b=null);a={$$typeof:w,_calculateChangedBits:b,_currentValue:a,_currentValue2:a,_threadCount:0,Provider:null,Consumer:null};a.Provider={$$typeof:v,_context:a};return a.Consumer=a};exports.createElement=M;exports.createFactory=function(a){var b=M.bind(null,a);b.type=a;return b};exports.createRef=function(){return{current:null}};exports.forwardRef=function(a){return{$$typeof:x,render:a}};exports.isValidElement=O;\nexports.lazy=function(a){return{$$typeof:A,_ctor:a,_status:-1,_result:null}};exports.memo=function(a,b){return{$$typeof:z,type:a,compare:void 0===b?null:b}};exports.useCallback=function(a,b){return Z().useCallback(a,b)};exports.useContext=function(a,b){return Z().useContext(a,b)};exports.useDebugValue=function(){};exports.useEffect=function(a,b){return Z().useEffect(a,b)};exports.useImperativeHandle=function(a,b,c){return Z().useImperativeHandle(a,b,c)};\nexports.useLayoutEffect=function(a,b){return Z().useLayoutEffect(a,b)};exports.useMemo=function(a,b){return Z().useMemo(a,b)};exports.useReducer=function(a,b,c){return Z().useReducer(a,b,c)};exports.useRef=function(a){return Z().useRef(a)};exports.useState=function(a){return Z().useState(a)};exports.version=\"16.14.0\";\n","/*\nobject-assign\n(c) Sindre Sorhus\n@license MIT\n*/\n\n'use strict';\n/* eslint-disable no-unused-vars */\nvar getOwnPropertySymbols = Object.getOwnPropertySymbols;\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\nvar propIsEnumerable = Object.prototype.propertyIsEnumerable;\n\nfunction toObject(val) {\n\tif (val === null || val === undefined) {\n\t\tthrow new TypeError('Object.assign cannot be called with null or undefined');\n\t}\n\n\treturn Object(val);\n}\n\nfunction shouldUseNative() {\n\ttry {\n\t\tif (!Object.assign) {\n\t\t\treturn false;\n\t\t}\n\n\t\t// Detect buggy property enumeration order in older V8 versions.\n\n\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=4118\n\t\tvar test1 = new String('abc');  // eslint-disable-line no-new-wrappers\n\t\ttest1[5] = 'de';\n\t\tif (Object.getOwnPropertyNames(test1)[0] === '5') {\n\t\t\treturn false;\n\t\t}\n\n\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=3056\n\t\tvar test2 = {};\n\t\tfor (var i = 0; i < 10; i++) {\n\t\t\ttest2['_' + String.fromCharCode(i)] = i;\n\t\t}\n\t\tvar order2 = Object.getOwnPropertyNames(test2).map(function (n) {\n\t\t\treturn test2[n];\n\t\t});\n\t\tif (order2.join('') !== '0123456789') {\n\t\t\treturn false;\n\t\t}\n\n\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=3056\n\t\tvar test3 = {};\n\t\t'abcdefghijklmnopqrst'.split('').forEach(function (letter) {\n\t\t\ttest3[letter] = letter;\n\t\t});\n\t\tif (Object.keys(Object.assign({}, test3)).join('') !==\n\t\t\t\t'abcdefghijklmnopqrst') {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn true;\n\t} catch (err) {\n\t\t// We don't expect any of the above to throw, but better to be safe.\n\t\treturn false;\n\t}\n}\n\nmodule.exports = shouldUseNative() ? Object.assign : function (target, source) {\n\tvar from;\n\tvar to = toObject(target);\n\tvar symbols;\n\n\tfor (var s = 1; s < arguments.length; s++) {\n\t\tfrom = Object(arguments[s]);\n\n\t\tfor (var key in from) {\n\t\t\tif (hasOwnProperty.call(from, key)) {\n\t\t\t\tto[key] = from[key];\n\t\t\t}\n\t\t}\n\n\t\tif (getOwnPropertySymbols) {\n\t\t\tsymbols = getOwnPropertySymbols(from);\n\t\t\tfor (var i = 0; i < symbols.length; i++) {\n\t\t\t\tif (propIsEnumerable.call(from, symbols[i])) {\n\t\t\t\t\tto[symbols[i]] = from[symbols[i]];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\treturn to;\n};\n","var g;\n\n// This works in non-strict mode\ng = (function() {\n\treturn this;\n})();\n\ntry {\n\t// This works if eval is allowed (see CSP)\n\tg = g || new Function(\"return this\")();\n} catch (e) {\n\t// This works if the window reference is available\n\tif (typeof window === \"object\") g = window;\n}\n\n// g can still be undefined, but nothing to do about it...\n// We return undefined, instead of nothing here, so it's\n// easier to handle this case. if(!global) { ...}\n\nmodule.exports = g;\n"],"sourceRoot":""}